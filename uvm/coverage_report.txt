Coverage Report by file with details

=================================================================================
=== File: ../design_rtl/alu.sv
=================================================================================
Branch Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Branches                        29        29         0   100.00%

================================Branch Details================================

Branch Coverage for file ../design_rtl/alu.sv --

------------------------------------IF Branch------------------------------------
    35                                     71761     Count coming in to IF
    35              1                          3         if (rst) result_reg <= 0;
    36              1                      19999         else if (enable) begin
    71              1                      51759         end else instr_exec <= 0;
Branch totals: 3 hits of 3 branches = 100.00%

------------------------------------CASE Branch------------------------------------
    45                                     19999     Count coming in to CASE
    47              1                        577             M_ADD, M_ADDI  : result_reg <= op1 + op2;
    47              2                        512     
    48              1                        569             M_SUB          : result_reg <= op1 - op2;
    51              1                        490             M_STLU, M_STLUI: result_reg <= ($unsigned(op1) < $unsigned(op2)) ? 1 : 0;
    51              2                        528     
    52              1                       1020             M_STL, M_STLI  : result_reg <=   ($signed(op1) <   $signed(op2)) ? 1 : 0;
    52              2                        491     
    55              1                        517             M_AND, M_ANDI  : result_reg <= op1 & op2;
    55              2                        545     
    56              1                        525             M_OR, M_ORI    : result_reg <= op1 | op2;
    56              2                        569     
    57              1                        549             M_XOR, M_XORI  : result_reg <= op1 ^ op2;
    57              2                        519     
    60              1                        551             M_SLL, M_SLLI  : result_reg <= op1 << op2[4:0];
    60              2                        528     
    61              1                        518             M_SRL, M_SRLI  : result_reg <= $unsigned(op1) >>  op2[4:0];
    61              2                        531     
    62              1                        533             M_SRA, M_SRAI  : result_reg <=   $signed(op1) >>> op2[4:0];
    62              2                        520     
    65              1                        531             M_LUI          : result_reg <= op1;               // op1 = immediate
    66              1                        546             M_AUIPC        : result_reg <= op1 + op2;         // op1 = immediate
    68              1                       8330             default: instr_exec <= 0;   // silently ignore bad opcodes, hold prior output
Branch totals: 22 hits of 22 branches = 100.00%

------------------------------------IF Branch------------------------------------
    51                                      1018     Count coming in to IF
    51              3                        483             M_STLU, M_STLUI: result_reg <= ($unsigned(op1) < $unsigned(op2)) ? 1 : 0;
    51              4                        535             M_STLU, M_STLUI: result_reg <= ($unsigned(op1) < $unsigned(op2)) ? 1 : 0;
Branch totals: 2 hits of 2 branches = 100.00%

------------------------------------IF Branch------------------------------------
    52                                      1511     Count coming in to IF
    52              3                        726             M_STL, M_STLI  : result_reg <=   ($signed(op1) <   $signed(op2)) ? 1 : 0;
    52              4                        785             M_STL, M_STLI  : result_reg <=   ($signed(op1) <   $signed(op2)) ? 1 : 0;
Branch totals: 2 hits of 2 branches = 100.00%


Condition Coverage:
    Enabled Coverage              Bins   Covered    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Conditions                       2         2         0   100.00%

================================Condition Details================================

Condition Coverage for file ../design_rtl/alu.sv --

----------------Focused Condition View-------------------
Line       51 Item    1  (op1 < op2)
Condition totals: 1 of 1 input term covered = 100.00%

   Input Term   Covered  Reason for no coverage   Hint
  -----------  --------  -----------------------  --------------
  (op1 < op2)         Y

     Rows:       Hits  FEC Target            Non-masking condition(s)      
 ---------  ---------  --------------------  -------------------------     
  Row   1:          1  (op1 < op2)_0         -                             
  Row   2:          1  (op1 < op2)_1         -                             

----------------Focused Condition View-------------------
Line       52 Item    1  (op1 < op2)
Condition totals: 1 of 1 input term covered = 100.00%

   Input Term   Covered  Reason for no coverage   Hint
  -----------  --------  -----------------------  --------------
  (op1 < op2)         Y

     Rows:       Hits  FEC Target            Non-masking condition(s)      
 ---------  ---------  --------------------  -------------------------     
  Row   1:          1  (op1 < op2)_0         -                             
  Row   2:          1  (op1 < op2)_1         -                             


Statement Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Statements                      21        21         0   100.00%

================================Statement Details================================

Statement Coverage for file ../design_rtl/alu.sv --

    1                                                
    2                                                import opcodes::*;
    3                                                
    4                                                module alu #(
    5                                                    parameter trace = 0,
    6                                                    broken = "NONE"
    7                                                  ) (
    8                                                    input logic clk,
    9                                                    input logic rst,
    10                                                   input var instruction_t instr,  // Current instruction
    11                                                   input register_t op1,           // Operand 1 (from register/immediate)
    12                                                   input register_t op2,           // Operand 2 (from register/immediate)
    13                                                   input logic enable,             // enable signal
    14                                                   output logic instr_exec,        // opcode was executed
    15                                                   output register_t result        // ALU result
    16                                                 );
    17                                               
    18                                                 register_t result_reg;
    19                                               
    20                                               `ifndef SYNTHESIS
    21                                                 function automatic register_t induce_errors(register_t data);
    22                                                   if (broken == "ALU") begin
    23                                                     if ($urandom_range(1,10)==7)   // 10% of the time flip a bit at random
    24                                                       return data ^ register_t'(32'h1 << $urandom_range(0,31));
    25                                                   end
    26              1                      11335         return(data);
    27                                                 endfunction
    28                                               
    29              1                      11335       assign result = induce_errors(result_reg);
    30                                               `else
    31                                                 assign result = result_reg;
    32                                               `endif
    33                                               
    34              1                      71761       always_ff @(posedge clk) begin
    35              1                          3         if (rst) result_reg <= 0;
    36                                                   else if (enable) begin
    37                                                  
    38                                               `ifndef SYNTHESIS
    39                                                       // trace of code execution
    40                                                       if (trace) if (enable && is_alu_op(instr))
    41                                                           $display("%t executed: %s ", $time, decode_instr(instr));
    42                                               `endif 
    43              1                      19999           instr_exec <= 1;
    44                                               
    45                                                     casez (instr)
    46                                                       // Arithmetic Operations
    47              1                       1089             M_ADD, M_ADDI  : result_reg <= op1 + op2;
    48              1                        569             M_SUB          : result_reg <= op1 - op2;
    49                                                           
    50                                                       // Comparisons
    51              1                       1018             M_STLU, M_STLUI: result_reg <= ($unsigned(op1) < $unsigned(op2)) ? 1 : 0;
    52              1                       1511             M_STL, M_STLI  : result_reg <=   ($signed(op1) <   $signed(op2)) ? 1 : 0;
    53                                                           
    54                                                       // Logical Operations
    55              1                       1062             M_AND, M_ANDI  : result_reg <= op1 & op2;
    56              1                       1094             M_OR, M_ORI    : result_reg <= op1 | op2;
    57              1                       1068             M_XOR, M_XORI  : result_reg <= op1 ^ op2;
    58                                                           
    59                                                       // Shifts
    60              1                       1079             M_SLL, M_SLLI  : result_reg <= op1 << op2[4:0];
    61              1                       1049             M_SRL, M_SRLI  : result_reg <= $unsigned(op1) >>  op2[4:0];
    62              1                       1053             M_SRA, M_SRAI  : result_reg <=   $signed(op1) >>> op2[4:0];
    63                                                           
    64                                                       // Upper Immediate
    65              1                        531             M_LUI          : result_reg <= op1;               // op1 = immediate
    66              1                        546             M_AUIPC        : result_reg <= op1 + op2;         // op1 = immediate
    67                                                         
    68              1                       8330             default: instr_exec <= 0;   // silently ignore bad opcodes, hold prior output
    69                                               
    70                                                     endcase
    71              1                      51759         end else instr_exec <= 0;
    72                                                 end
    73                                               
    74                                                 mnemonic_t opcode;
    75              1                      20001       assign opcode = opc_base(instr);
    76                                               
    77                                                 //--------------------------------------------------------------------------
    78                                                 // Covergroup for ALU instructions and op1, op2
    79                                                 //--------------------------------------------------------------------------
    80                                                 covergroup alu_cg @(posedge clk);
    81                                               
    82                                                   coverpoint opcode {
    83                                                     bins instr[] = {ADD,  STLU,  STL,  AND,  OR,  XOR,  SLL,  SRL,  SRA,  SUB,
    84                                                                     ADDI, STLUI, STLI, ANDI, ORI, XORI, SLLI, SRLI, SRAI,
    85                                                                     LUI,  AUIPC};
    86                                                   }
    87                                                   // Cover op1 and op2
    88                                                   coverpoint op1 {
    89                                                     bins zero     = {0};
    90                                                     bins positive = {[1:$]};
    91                                                     bins negative = {[$:-1]};
    92                                                   }
    93                                                   coverpoint op2 {
    94                                                     bins zero     = {0};
    95                                                     bins positive = {[1:$]};
    96                                                     bins negative = {[$:-1]};
    97                                                   }
    98                                                   // Cross coverage
    99                                                   cross opcode, op1, op2;
    100                                                endgroup
    101                                              
    102                                                // Instantiate the covergroups
    103             1                          1       alu_cg alu_cg_inst = new();
    104                                              
    105                                              endmodule
    106                                               

Toggle Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Toggles                        365       361         4    98.90%

================================Toggle Details================================

Toggle Coverage for File ../design_rtl/alu.sv --

       Line                                   Node      1H->0L      0L->1H                          "Coverage"
--------------------------------------------------------------------------------------------------------------
          8                                    clk           1           1                              100.00 
          9                                    rst           1           1                              100.00 
         10                               instr[9]           1           1                              100.00 
         10                               instr[8]           1           1                              100.00 
         10                               instr[7]           1           1                              100.00 
         10                               instr[6]           1           1                              100.00 
         10                               instr[5]           1           1                              100.00 
         10                               instr[4]           1           1                              100.00 
         10                               instr[3]           1           1                              100.00 
         10                              instr[31]           1           1                              100.00 
         10                              instr[30]           1           1                              100.00 
         10                               instr[2]           1           1                              100.00 
         10                              instr[29]           1           1                              100.00 
         10                              instr[28]           1           1                              100.00 
         10                              instr[27]           1           1                              100.00 
         10                              instr[26]           1           1                              100.00 
         10                              instr[25]           1           1                              100.00 
         10                              instr[24]           1           1                              100.00 
         10                              instr[23]           1           1                              100.00 
         10                              instr[22]           1           1                              100.00 
         10                              instr[21]           1           1                              100.00 
         10                              instr[20]           1           1                              100.00 
         10                               instr[1]           0           0                                0.00 
         10                              instr[19]           1           1                              100.00 
         10                              instr[18]           1           1                              100.00 
         10                              instr[17]           1           1                              100.00 
         10                              instr[16]           1           1                              100.00 
         10                              instr[15]           1           1                              100.00 
         10                              instr[14]           1           1                              100.00 
         10                              instr[13]           1           1                              100.00 
         10                              instr[12]           1           1                              100.00 
         10                              instr[11]           1           1                              100.00 
         10                              instr[10]           1           1                              100.00 
         10                               instr[0]           0           0                                0.00 
         11                                 op1[9]           1           1                              100.00 
         11                                 op1[8]           1           1                              100.00 
         11                                 op1[7]           1           1                              100.00 
         11                                 op1[6]           1           1                              100.00 
         11                                 op1[5]           1           1                              100.00 
         11                                 op1[4]           1           1                              100.00 
         11                                 op1[3]           1           1                              100.00 
         11                                op1[31]           1           1                              100.00 
         11                                op1[30]           1           1                              100.00 
         11                                 op1[2]           1           1                              100.00 
         11                                op1[29]           1           1                              100.00 
         11                                op1[28]           1           1                              100.00 
         11                                op1[27]           1           1                              100.00 
         11                                op1[26]           1           1                              100.00 
         11                                op1[25]           1           1                              100.00 
         11                                op1[24]           1           1                              100.00 
         11                                op1[23]           1           1                              100.00 
         11                                op1[22]           1           1                              100.00 
         11                                op1[21]           1           1                              100.00 
         11                                op1[20]           1           1                              100.00 
         11                                 op1[1]           1           1                              100.00 
         11                                op1[19]           1           1                              100.00 
         11                                op1[18]           1           1                              100.00 
         11                                op1[17]           1           1                              100.00 
         11                                op1[16]           1           1                              100.00 
         11                                op1[15]           1           1                              100.00 
         11                                op1[14]           1           1                              100.00 
         11                                op1[13]           1           1                              100.00 
         11                                op1[12]           1           1                              100.00 
         11                                op1[11]           1           1                              100.00 
         11                                op1[10]           1           1                              100.00 
         11                                 op1[0]           1           1                              100.00 
         12                                 op2[9]           1           1                              100.00 
         12                                 op2[8]           1           1                              100.00 
         12                                 op2[7]           1           1                              100.00 
         12                                 op2[6]           1           1                              100.00 
         12                                 op2[5]           1           1                              100.00 
         12                                 op2[4]           1           1                              100.00 
         12                                 op2[3]           1           1                              100.00 
         12                                op2[31]           1           1                              100.00 
         12                                op2[30]           1           1                              100.00 
         12                                 op2[2]           1           1                              100.00 
         12                                op2[29]           1           1                              100.00 
         12                                op2[28]           1           1                              100.00 
         12                                op2[27]           1           1                              100.00 
         12                                op2[26]           1           1                              100.00 
         12                                op2[25]           1           1                              100.00 
         12                                op2[24]           1           1                              100.00 
         12                                op2[23]           1           1                              100.00 
         12                                op2[22]           1           1                              100.00 
         12                                op2[21]           1           1                              100.00 
         12                                op2[20]           1           1                              100.00 
         12                                 op2[1]           1           1                              100.00 
         12                                op2[19]           1           1                              100.00 
         12                                op2[18]           1           1                              100.00 
         12                                op2[17]           1           1                              100.00 
         12                                op2[16]           1           1                              100.00 
         12                                op2[15]           1           1                              100.00 
         12                                op2[14]           1           1                              100.00 
         12                                op2[13]           1           1                              100.00 
         12                                op2[12]           1           1                              100.00 
         12                                op2[11]           1           1                              100.00 
         12                                op2[10]           1           1                              100.00 
         12                                 op2[0]           1           1                              100.00 
         13                                 enable           1           1                              100.00 
         14                             instr_exec           1           1                              100.00 
         15                              result[9]           1           1                              100.00 
         15                              result[8]           1           1                              100.00 
         15                              result[7]           1           1                              100.00 
         15                              result[6]           1           1                              100.00 
         15                              result[5]           1           1                              100.00 
         15                              result[4]           1           1                              100.00 
         15                              result[3]           1           1                              100.00 
         15                             result[31]           1           1                              100.00 
         15                             result[30]           1           1                              100.00 
         15                              result[2]           1           1                              100.00 
         15                             result[29]           1           1                              100.00 
         15                             result[28]           1           1                              100.00 
         15                             result[27]           1           1                              100.00 
         15                             result[26]           1           1                              100.00 
         15                             result[25]           1           1                              100.00 
         15                             result[24]           1           1                              100.00 
         15                             result[23]           1           1                              100.00 
         15                             result[22]           1           1                              100.00 
         15                             result[21]           1           1                              100.00 
         15                             result[20]           1           1                              100.00 
         15                              result[1]           1           1                              100.00 
         15                             result[19]           1           1                              100.00 
         15                             result[18]           1           1                              100.00 
         15                             result[17]           1           1                              100.00 
         15                             result[16]           1           1                              100.00 
         15                             result[15]           1           1                              100.00 
         15                             result[14]           1           1                              100.00 
         15                             result[13]           1           1                              100.00 
         15                             result[12]           1           1                              100.00 
         15                             result[11]           1           1                              100.00 
         15                             result[10]           1           1                              100.00 
         15                              result[0]           1           1                              100.00 
         18                          result_reg[9]           1           1                              100.00 
         18                          result_reg[8]           1           1                              100.00 
         18                          result_reg[7]           1           1                              100.00 
         18                          result_reg[6]           1           1                              100.00 
         18                          result_reg[5]           1           1                              100.00 
         18                          result_reg[4]           1           1                              100.00 
         18                          result_reg[3]           1           1                              100.00 
         18                         result_reg[31]           1           1                              100.00 
         18                         result_reg[30]           1           1                              100.00 
         18                          result_reg[2]           1           1                              100.00 
         18                         result_reg[29]           1           1                              100.00 
         18                         result_reg[28]           1           1                              100.00 
         18                         result_reg[27]           1           1                              100.00 
         18                         result_reg[26]           1           1                              100.00 
         18                         result_reg[25]           1           1                              100.00 
         18                         result_reg[24]           1           1                              100.00 
         18                         result_reg[23]           1           1                              100.00 
         18                         result_reg[22]           1           1                              100.00 
         18                         result_reg[21]           1           1                              100.00 
         18                         result_reg[20]           1           1                              100.00 
         18                          result_reg[1]           1           1                              100.00 
         18                         result_reg[19]           1           1                              100.00 
         18                         result_reg[18]           1           1                              100.00 
         18                         result_reg[17]           1           1                              100.00 
         18                         result_reg[16]           1           1                              100.00 
         18                         result_reg[15]           1           1                              100.00 
         18                         result_reg[14]           1           1                              100.00 
         18                         result_reg[13]           1           1                              100.00 
         18                         result_reg[12]           1           1                              100.00 
         18                         result_reg[11]           1           1                              100.00 
         18                         result_reg[10]           1           1                              100.00 
         18                          result_reg[0]           1           1                              100.00 
         74                                 opcode               ENUM type       Value       Count 
                                                                      ADDI           4      100.00 
                                                                      STLI           5      100.00 
                                                                     STLUI           6      100.00 
                                                                      ANDI           1      100.00 
                                                                       ORI          10      100.00 
                                                                      XORI           7      100.00 
                                                                      SLLI           6      100.00 
                                                                      SRLI           6      100.00 
                                                                      SRAI           7      100.00 
                                                                       LUI           4      100.00 
                                                                     AUIPC           2      100.00 
                                                                       ADD           9      100.00 
                                                                       SUB           7      100.00 
                                                                       STL           7      100.00 
                                                                      STLU           8      100.00 
                                                                       AND           6      100.00 
                                                                        OR          10      100.00 
                                                                       XOR           7      100.00 
                                                                       SLL           4      100.00 
                                                                       SRL           4      100.00 
                                                                       SRA           5      100.00 
                                                                       JAL           7      100.00 
                                                                      JALR           9      100.00 
                                                                       BEQ           4      100.00 
                                                                       BNE           7      100.00 
                                                                       BLT           6      100.00 
                                                                      BLTU           6      100.00 
                                                                       BGE           7      100.00 
                                                                      BGEU           5      100.00 
                                                                        LW           5      100.00 
                                                                        LH           3      100.00 
                                                                        LB           6      100.00 
                                                                       LHU           6      100.00 
                                                                       LBU           4      100.00 
                                                                        SW           2      100.00 
                                                                        SH           7      100.00 
                                                                        SB           4      100.00 

Total Node Count     =        201 
Toggled Node Count   =        199 
Untoggled Node Count =          2 

Toggle Coverage      =      98.90% (361 of 365 bins)

=================================================================================
=== File: ../design_rtl/branch_ctrl.sv
=================================================================================
Branch Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Branches                        25        25         0   100.00%

================================Branch Details================================

Branch Coverage for file ../design_rtl/branch_ctrl.sv --

------------------------------------IF Branch------------------------------------
    37                                     60585     Count coming in to IF
    37              1                          3          if (rst) next_pc <= '0;
    38              1                      60582          else begin
Branch totals: 2 hits of 2 branches = 100.00%

------------------------------------IF Branch------------------------------------
    39                                     60582     Count coming in to IF
    39              1                      19999            if (enable) begin
                                           40583     All False Count
Branch totals: 2 hits of 2 branches = 100.00%

------------------------------------CASE Branch------------------------------------
    42                                     19999     Count coming in to CASE
    44              1                        516                M_JAL  : next_pc <= op1;
    45              1                        542                M_JALR : next_pc <= op1 + op2;
    48              1                        547                M_BEQ  : next_pc <= (op1 == op2) ? pc + op3 : pc + 4;
    49              1                        538                M_BNE  : next_pc <= (op1 != op2) ? pc + op3 : pc + 4;
    50              1                        540                M_BLT  : next_pc <= (op1 < op2)  ? pc + op3 : pc + 4;
    51              1                        490                M_BLTU : next_pc <= (unsigned'(op1) < unsigned'(op2)) ? pc + op3 : pc + 4;
    52              1                        488                M_BGE  : next_pc <= (op1 >= op2) ? pc + op3 : pc + 4;
    53              1                        562                M_BGEU : next_pc <= (unsigned'(op1) >= unsigned'(op2)) ? pc + op3 : pc + 4;
    54              1                      15776                default : next_pc <= pc + 4;
Branch totals: 9 hits of 9 branches = 100.00%

------------------------------------IF Branch------------------------------------
    48                                       547     Count coming in to IF
    48              2                         17                M_BEQ  : next_pc <= (op1 == op2) ? pc + op3 : pc + 4;
    48              3                        530                M_BEQ  : next_pc <= (op1 == op2) ? pc + op3 : pc + 4;
Branch totals: 2 hits of 2 branches = 100.00%

------------------------------------IF Branch------------------------------------
    49                                       538     Count coming in to IF
    49              2                        528                M_BNE  : next_pc <= (op1 != op2) ? pc + op3 : pc + 4;
    49              3                         10                M_BNE  : next_pc <= (op1 != op2) ? pc + op3 : pc + 4;
Branch totals: 2 hits of 2 branches = 100.00%

------------------------------------IF Branch------------------------------------
    50                                       540     Count coming in to IF
    50              2                        284                M_BLT  : next_pc <= (op1 < op2)  ? pc + op3 : pc + 4;
    50              3                        256                M_BLT  : next_pc <= (op1 < op2)  ? pc + op3 : pc + 4;
Branch totals: 2 hits of 2 branches = 100.00%

------------------------------------IF Branch------------------------------------
    51                                       490     Count coming in to IF
    51              2                        244                M_BLTU : next_pc <= (unsigned'(op1) < unsigned'(op2)) ? pc + op3 : pc + 4;
    51              3                        246                M_BLTU : next_pc <= (unsigned'(op1) < unsigned'(op2)) ? pc + op3 : pc + 4;
Branch totals: 2 hits of 2 branches = 100.00%

------------------------------------IF Branch------------------------------------
    52                                       488     Count coming in to IF
    52              2                        255                M_BGE  : next_pc <= (op1 >= op2) ? pc + op3 : pc + 4;
    52              3                        233                M_BGE  : next_pc <= (op1 >= op2) ? pc + op3 : pc + 4;
Branch totals: 2 hits of 2 branches = 100.00%

------------------------------------IF Branch------------------------------------
    53                                       562     Count coming in to IF
    53              2                        272                M_BGEU : next_pc <= (unsigned'(op1) >= unsigned'(op2)) ? pc + op3 : pc + 4;
    53              3                        290                M_BGEU : next_pc <= (unsigned'(op1) >= unsigned'(op2)) ? pc + op3 : pc + 4;
Branch totals: 2 hits of 2 branches = 100.00%


Condition Coverage:
    Enabled Coverage              Bins   Covered    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Conditions                       6         6         0   100.00%

================================Condition Details================================

Condition Coverage for file ../design_rtl/branch_ctrl.sv --

----------------Focused Condition View-------------------
Line       48 Item    1  (op1 == op2)
Condition totals: 1 of 1 input term covered = 100.00%

    Input Term   Covered  Reason for no coverage   Hint
   -----------  --------  -----------------------  --------------
  (op1 == op2)         Y

     Rows:       Hits  FEC Target            Non-masking condition(s)      
 ---------  ---------  --------------------  -------------------------     
  Row   1:          1  (op1 == op2)_0        -                             
  Row   2:          1  (op1 == op2)_1        -                             

----------------Focused Condition View-------------------
Line       49 Item    1  (op1 != op2)
Condition totals: 1 of 1 input term covered = 100.00%

    Input Term   Covered  Reason for no coverage   Hint
   -----------  --------  -----------------------  --------------
  (op1 != op2)         Y

     Rows:       Hits  FEC Target            Non-masking condition(s)      
 ---------  ---------  --------------------  -------------------------     
  Row   1:          1  (op1 != op2)_0        -                             
  Row   2:          1  (op1 != op2)_1        -                             

----------------Focused Condition View-------------------
Line       50 Item    1  (op1 < op2)
Condition totals: 1 of 1 input term covered = 100.00%

   Input Term   Covered  Reason for no coverage   Hint
  -----------  --------  -----------------------  --------------
  (op1 < op2)         Y

     Rows:       Hits  FEC Target            Non-masking condition(s)      
 ---------  ---------  --------------------  -------------------------     
  Row   1:          1  (op1 < op2)_0         -                             
  Row   2:          1  (op1 < op2)_1         -                             

----------------Focused Condition View-------------------
Line       51 Item    1  (op1 < op2)
Condition totals: 1 of 1 input term covered = 100.00%

   Input Term   Covered  Reason for no coverage   Hint
  -----------  --------  -----------------------  --------------
  (op1 < op2)         Y

     Rows:       Hits  FEC Target            Non-masking condition(s)      
 ---------  ---------  --------------------  -------------------------     
  Row   1:          1  (op1 < op2)_0         -                             
  Row   2:          1  (op1 < op2)_1         -                             

----------------Focused Condition View-------------------
Line       52 Item    1  (op1 >= op2)
Condition totals: 1 of 1 input term covered = 100.00%

    Input Term   Covered  Reason for no coverage   Hint
   -----------  --------  -----------------------  --------------
  (op1 >= op2)         Y

     Rows:       Hits  FEC Target            Non-masking condition(s)      
 ---------  ---------  --------------------  -------------------------     
  Row   1:          1  (op1 >= op2)_0        -                             
  Row   2:          1  (op1 >= op2)_1        -                             

----------------Focused Condition View-------------------
Line       53 Item    1  (op1 >= op2)
Condition totals: 1 of 1 input term covered = 100.00%

    Input Term   Covered  Reason for no coverage   Hint
   -----------  --------  -----------------------  --------------
  (op1 >= op2)         Y

     Rows:       Hits  FEC Target            Non-masking condition(s)      
 ---------  ---------  --------------------  -------------------------     
  Row   1:          1  (op1 >= op2)_0        -                             
  Row   2:          1  (op1 >= op2)_1        -                             


Statement Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Statements                      16        16         0   100.00%

================================Statement Details================================

Statement Coverage for file ../design_rtl/branch_ctrl.sv --

    1                                                
    2                                                import opcodes::*;
    3                                                
    4                                                module branch_unit #(
    5                                                   broken = "NONE"
    6                                                 ) (
    7                                                   input logic          clk, rst,
    8                                                
    9                                                   input wire instruction_t  instr,
    10                                                  input register_t     op1, op2, op3,
    11                                                  input logic          enable,        
    12                                                  output register_t    pc_out,
    13                                                  output register_t    ret_addr);
    14                                               
    15                                                  register_t pc, next_pc;
    16                                               
    17                                               `ifndef SYNTHESIS
    18                                               
    19                                                  function automatic register_t induce_errors(register_t data);
    20                                                    if (broken == "BCU") begin
    21                                                      if ($urandom_range(1,10)==5) begin   // 10% of the time flip a bit at random begin
    22                                                        return data ^ register_t'(32'h1 << $urandom_range(0,15));
    23                                                      end
    24                                                    end
    25              1                          1          return(data);
    26                                                  endfunction
    27                                               
    28                                                  // assign pc_out = (count< 10) ?  pc : induce_errors(pc);
    29              1                          1        assign pc_out = induce_errors(pc);
    30                                               `else
    31                                                  assign pc_out = pc;
    32                                               `endif
    33                                               
    34                                                  assign pc = next_pc;
    35                                               
    36              1                      60585        always_ff @(posedge clk) begin
    37              1                          3          if (rst) next_pc <= '0;
    38                                                    else begin
    39                                                      if (enable) begin
    40              1                      19999              ret_addr <= pc + 4;
    41                                               	//	 $display("[DUT] Enable=%0b, instr=%0d, op1=%0d, op2=%0d, op3=%0d", enable, instr, op1, op2, op3);
    42                                                        casez (instr) 
    43                                               		   // Standard RISC-V Jump Instructions
    44              1                        516                M_JAL  : next_pc <= op1;
    45              1                        542                M_JALR : next_pc <= op1 + op2;
    46                                               		   
    47                                               		   // Standard RISC-V Branch Instructions
    48              1                        547                M_BEQ  : next_pc <= (op1 == op2) ? pc + op3 : pc + 4;
    49              1                        538                M_BNE  : next_pc <= (op1 != op2) ? pc + op3 : pc + 4;
    50              1                        540                M_BLT  : next_pc <= (op1 < op2)  ? pc + op3 : pc + 4;
    51              1                        490                M_BLTU : next_pc <= (unsigned'(op1) < unsigned'(op2)) ? pc + op3 : pc + 4;
    52              1                        488                M_BGE  : next_pc <= (op1 >= op2) ? pc + op3 : pc + 4;
    53              1                        562                M_BGEU : next_pc <= (unsigned'(op1) >= unsigned'(op2)) ? pc + op3 : pc + 4;
    54              1                      15776                default : next_pc <= pc + 4;
    55                                                        endcase
    56                                               	 //	 $display("[DUT] PC Updated: pc=%0h, ret_addr=%0h", pc, ret_addr);
    57                                                      end
    58                                                    end
    59                                                  end
    60                                                  mnemonic_t opcode;
    61              1                      20001        assign opcode = opc_base(instr);
    62                                                
    63                                               
    64                                                  //--------------------------------------------------------------------------
    65                                                  // Covergroup for branch instructions and resulting PC (pc_out)
    66                                                  //--------------------------------------------------------------------------
    67                                                  covergroup branch_cg @(posedge clk);
    68                                                    
    69                                                    coverpoint opcode {
    70                                                      bins instr[] = {JAL,JALR,BEQ,BNE,BLT,BLTU,BGE,BGEU};
    71                                                    }
    72                                                    // Cover the new PC (next_pc).
    73                                                    coverpoint next_pc {
    74                                                      ignore_bins zero = {0};   // branch of zero is pointless
    75                                                      bins positive = { [1:$] };
    76                                                      bins negative = { [$:-1] };
    77                                                    }
    78                                                    // Cross coverage 
    79                                                    cross opcode, next_pc;
    80                                                  endgroup
    81                                               
    82                                                  // Instantiate the covergroups
    83              1                          1        branch_cg branch_cg_inst = new();
    84                                               
    85                                               endmodule

Toggle Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Toggles                        555       359       196    64.68%

================================Toggle Details================================

Toggle Coverage for File ../design_rtl/branch_ctrl.sv --

       Line                                   Node      1H->0L      0L->1H                          "Coverage"
--------------------------------------------------------------------------------------------------------------
          7                                    rst           1           1                              100.00 
          7                                    clk           1           1                              100.00 
          9                          instr.j.rd[4]           1           1                              100.00 
          9                          instr.j.rd[3]           1           1                              100.00 
          9                          instr.j.rd[2]           1           1                              100.00 
          9                          instr.j.rd[1]           1           1                              100.00 
          9                          instr.j.rd[0]           1           1                              100.00 
          9                     instr.j.opcode1[6]           1           1                              100.00 
          9                     instr.j.opcode1[5]           1           1                              100.00 
          9                     instr.j.opcode1[4]           1           1                              100.00 
          9                     instr.j.opcode1[3]           1           1                              100.00 
          9                     instr.j.opcode1[2]           1           1                              100.00 
          9                     instr.j.opcode1[1]           0           0                                0.00 
          9                     instr.j.opcode1[0]           0           0                                0.00 
          9                           instr.j.imm3           1           1                              100.00 
          9                        instr.j.imm2[7]           1           1                              100.00 
          9                        instr.j.imm2[6]           1           1                              100.00 
          9                        instr.j.imm2[5]           1           1                              100.00 
          9                        instr.j.imm2[4]           1           1                              100.00 
          9                        instr.j.imm2[3]           1           1                              100.00 
          9                        instr.j.imm2[2]           1           1                              100.00 
          9                        instr.j.imm2[1]           1           1                              100.00 
          9                        instr.j.imm2[0]           1           1                              100.00 
          9                           instr.j.imm1           1           1                              100.00 
          9                        instr.j.imm0[9]           1           1                              100.00 
          9                        instr.j.imm0[8]           1           1                              100.00 
          9                        instr.j.imm0[7]           1           1                              100.00 
          9                        instr.j.imm0[6]           1           1                              100.00 
          9                        instr.j.imm0[5]           1           1                              100.00 
          9                        instr.j.imm0[4]           1           1                              100.00 
          9                        instr.j.imm0[3]           1           1                              100.00 
          9                        instr.j.imm0[2]           1           1                              100.00 
          9                        instr.j.imm0[1]           1           1                              100.00 
          9                        instr.j.imm0[0]           1           1                              100.00 
         10                                 op3[9]           1           1                              100.00 
         10                                 op3[8]           1           1                              100.00 
         10                                 op3[7]           1           1                              100.00 
         10                                 op3[6]           1           1                              100.00 
         10                                 op3[5]           1           1                              100.00 
         10                                 op3[4]           1           1                              100.00 
         10                                 op3[3]           1           1                              100.00 
         10                                op3[31]           1           1                              100.00 
         10                                op3[30]           1           1                              100.00 
         10                                 op3[2]           1           1                              100.00 
         10                                op3[29]           1           1                              100.00 
         10                                op3[28]           1           1                              100.00 
         10                                op3[27]           1           1                              100.00 
         10                                op3[26]           1           1                              100.00 
         10                                op3[25]           1           1                              100.00 
         10                                op3[24]           1           1                              100.00 
         10                                op3[23]           1           1                              100.00 
         10                                op3[22]           1           1                              100.00 
         10                                op3[21]           1           1                              100.00 
         10                                op3[20]           1           1                              100.00 
         10                                 op3[1]           1           1                              100.00 
         10                                op3[19]           1           1                              100.00 
         10                                op3[18]           1           1                              100.00 
         10                                op3[17]           1           1                              100.00 
         10                                op3[16]           1           1                              100.00 
         10                                op3[15]           1           1                              100.00 
         10                                op3[14]           1           1                              100.00 
         10                                op3[13]           1           1                              100.00 
         10                                op3[12]           1           1                              100.00 
         10                                op3[11]           1           1                              100.00 
         10                                op3[10]           1           1                              100.00 
         10                                 op3[0]           1           1                              100.00 
         10                                 op2[9]           1           1                              100.00 
         10                                 op2[8]           1           1                              100.00 
         10                                 op2[7]           1           1                              100.00 
         10                                 op2[6]           1           1                              100.00 
         10                                 op2[5]           1           1                              100.00 
         10                                 op2[4]           1           1                              100.00 
         10                                 op2[3]           1           1                              100.00 
         10                                op2[31]           1           1                              100.00 
         10                                op2[30]           1           1                              100.00 
         10                                 op2[2]           1           1                              100.00 
         10                                op2[29]           1           1                              100.00 
         10                                op2[28]           1           1                              100.00 
         10                                op2[27]           1           1                              100.00 
         10                                op2[26]           1           1                              100.00 
         10                                op2[25]           1           1                              100.00 
         10                                op2[24]           1           1                              100.00 
         10                                op2[23]           1           1                              100.00 
         10                                op2[22]           1           1                              100.00 
         10                                op2[21]           1           1                              100.00 
         10                                op2[20]           1           1                              100.00 
         10                                 op2[1]           1           1                              100.00 
         10                                op2[19]           1           1                              100.00 
         10                                op2[18]           1           1                              100.00 
         10                                op2[17]           1           1                              100.00 
         10                                op2[16]           1           1                              100.00 
         10                                op2[15]           1           1                              100.00 
         10                                op2[14]           1           1                              100.00 
         10                                op2[13]           1           1                              100.00 
         10                                op2[12]           1           1                              100.00 
         10                                op2[11]           1           1                              100.00 
         10                                op2[10]           1           1                              100.00 
         10                                 op2[0]           1           1                              100.00 
         10                                 op1[9]           1           1                              100.00 
         10                                 op1[8]           1           1                              100.00 
         10                                 op1[7]           1           1                              100.00 
         10                                 op1[6]           1           1                              100.00 
         10                                 op1[5]           1           1                              100.00 
         10                                 op1[4]           1           1                              100.00 
         10                                 op1[3]           1           1                              100.00 
         10                                op1[31]           1           1                              100.00 
         10                                op1[30]           1           1                              100.00 
         10                                 op1[2]           1           1                              100.00 
         10                                op1[29]           1           1                              100.00 
         10                                op1[28]           1           1                              100.00 
         10                                op1[27]           1           1                              100.00 
         10                                op1[26]           1           1                              100.00 
         10                                op1[25]           1           1                              100.00 
         10                                op1[24]           1           1                              100.00 
         10                                op1[23]           1           1                              100.00 
         10                                op1[22]           1           1                              100.00 
         10                                op1[21]           1           1                              100.00 
         10                                op1[20]           1           1                              100.00 
         10                                 op1[1]           1           1                              100.00 
         10                                op1[19]           1           1                              100.00 
         10                                op1[18]           1           1                              100.00 
         10                                op1[17]           1           1                              100.00 
         10                                op1[16]           1           1                              100.00 
         10                                op1[15]           1           1                              100.00 
         10                                op1[14]           1           1                              100.00 
         10                                op1[13]           1           1                              100.00 
         10                                op1[12]           1           1                              100.00 
         10                                op1[11]           1           1                              100.00 
         10                                op1[10]           1           1                              100.00 
         10                                 op1[0]           1           1                              100.00 
         11                                 enable           1           1                              100.00 
         12                              pc_out[9]           0           0                                0.00 
         12                              pc_out[8]           0           0                                0.00 
         12                              pc_out[7]           0           0                                0.00 
         12                              pc_out[6]           0           0                                0.00 
         12                              pc_out[5]           0           0                                0.00 
         12                              pc_out[4]           0           0                                0.00 
         12                              pc_out[3]           0           0                                0.00 
         12                             pc_out[31]           0           0                                0.00 
         12                             pc_out[30]           0           0                                0.00 
         12                              pc_out[2]           0           0                                0.00 
         12                             pc_out[29]           0           0                                0.00 
         12                             pc_out[28]           0           0                                0.00 
         12                             pc_out[27]           0           0                                0.00 
         12                             pc_out[26]           0           0                                0.00 
         12                             pc_out[25]           0           0                                0.00 
         12                             pc_out[24]           0           0                                0.00 
         12                             pc_out[23]           0           0                                0.00 
         12                             pc_out[22]           0           0                                0.00 
         12                             pc_out[21]           0           0                                0.00 
         12                             pc_out[20]           0           0                                0.00 
         12                              pc_out[1]           0           0                                0.00 
         12                             pc_out[19]           0           0                                0.00 
         12                             pc_out[18]           0           0                                0.00 
         12                             pc_out[17]           0           0                                0.00 
         12                             pc_out[16]           0           0                                0.00 
         12                             pc_out[15]           0           0                                0.00 
         12                             pc_out[14]           0           0                                0.00 
         12                             pc_out[13]           0           0                                0.00 
         12                             pc_out[12]           0           0                                0.00 
         12                             pc_out[11]           0           0                                0.00 
         12                             pc_out[10]           0           0                                0.00 
         12                              pc_out[0]           0           0                                0.00 
         13                            ret_addr[9]           0           0                                0.00 
         13                            ret_addr[8]           0           0                                0.00 
         13                            ret_addr[7]           0           0                                0.00 
         13                            ret_addr[6]           0           0                                0.00 
         13                            ret_addr[5]           0           0                                0.00 
         13                            ret_addr[4]           0           0                                0.00 
         13                            ret_addr[3]           0           0                                0.00 
         13                           ret_addr[31]           0           0                                0.00 
         13                           ret_addr[30]           0           0                                0.00 
         13                            ret_addr[2]           0           0                                0.00 
         13                           ret_addr[29]           0           0                                0.00 
         13                           ret_addr[28]           0           0                                0.00 
         13                           ret_addr[27]           0           0                                0.00 
         13                           ret_addr[26]           0           0                                0.00 
         13                           ret_addr[25]           0           0                                0.00 
         13                           ret_addr[24]           0           0                                0.00 
         13                           ret_addr[23]           0           0                                0.00 
         13                           ret_addr[22]           0           0                                0.00 
         13                           ret_addr[21]           0           0                                0.00 
         13                           ret_addr[20]           0           0                                0.00 
         13                            ret_addr[1]           0           0                                0.00 
         13                           ret_addr[19]           0           0                                0.00 
         13                           ret_addr[18]           0           0                                0.00 
         13                           ret_addr[17]           0           0                                0.00 
         13                           ret_addr[16]           0           0                                0.00 
         13                           ret_addr[15]           0           0                                0.00 
         13                           ret_addr[14]           0           0                                0.00 
         13                           ret_addr[13]           0           0                                0.00 
         13                           ret_addr[12]           0           0                                0.00 
         13                           ret_addr[11]           0           0                                0.00 
         13                           ret_addr[10]           0           0                                0.00 
         13                            ret_addr[0]           0           0                                0.00 
         15                                  pc[9]           0           0                                0.00 
         15                                  pc[8]           0           0                                0.00 
         15                                  pc[7]           0           0                                0.00 
         15                                  pc[6]           0           0                                0.00 
         15                                  pc[5]           0           0                                0.00 
         15                                  pc[4]           0           0                                0.00 
         15                                  pc[3]           0           0                                0.00 
         15                                 pc[31]           0           0                                0.00 
         15                                 pc[30]           0           0                                0.00 
         15                                  pc[2]           0           0                                0.00 
         15                                 pc[29]           0           0                                0.00 
         15                                 pc[28]           0           0                                0.00 
         15                                 pc[27]           0           0                                0.00 
         15                                 pc[26]           0           0                                0.00 
         15                                 pc[25]           0           0                                0.00 
         15                                 pc[24]           0           0                                0.00 
         15                                 pc[23]           0           0                                0.00 
         15                                 pc[22]           0           0                                0.00 
         15                                 pc[21]           0           0                                0.00 
         15                                 pc[20]           0           0                                0.00 
         15                                  pc[1]           0           0                                0.00 
         15                                 pc[19]           0           0                                0.00 
         15                                 pc[18]           0           0                                0.00 
         15                                 pc[17]           0           0                                0.00 
         15                                 pc[16]           0           0                                0.00 
         15                                 pc[15]           0           0                                0.00 
         15                                 pc[14]           0           0                                0.00 
         15                                 pc[13]           0           0                                0.00 
         15                                 pc[12]           0           0                                0.00 
         15                                 pc[11]           0           0                                0.00 
         15                                 pc[10]           0           0                                0.00 
         15                                  pc[0]           0           0                                0.00 
         15                             next_pc[9]           1           1                              100.00 
         15                             next_pc[8]           1           1                              100.00 
         15                             next_pc[7]           1           1                              100.00 
         15                             next_pc[6]           1           1                              100.00 
         15                             next_pc[5]           1           1                              100.00 
         15                             next_pc[4]           1           1                              100.00 
         15                             next_pc[3]           1           1                              100.00 
         15                            next_pc[31]           1           1                              100.00 
         15                            next_pc[30]           1           1                              100.00 
         15                             next_pc[2]           1           1                              100.00 
         15                            next_pc[29]           1           1                              100.00 
         15                            next_pc[28]           1           1                              100.00 
         15                            next_pc[27]           1           1                              100.00 
         15                            next_pc[26]           1           1                              100.00 
         15                            next_pc[25]           1           1                              100.00 
         15                            next_pc[24]           1           1                              100.00 
         15                            next_pc[23]           1           1                              100.00 
         15                            next_pc[22]           1           1                              100.00 
         15                            next_pc[21]           1           1                              100.00 
         15                            next_pc[20]           1           1                              100.00 
         15                             next_pc[1]           1           1                              100.00 
         15                            next_pc[19]           1           1                              100.00 
         15                            next_pc[18]           1           1                              100.00 
         15                            next_pc[17]           1           1                              100.00 
         15                            next_pc[16]           1           1                              100.00 
         15                            next_pc[15]           1           1                              100.00 
         15                            next_pc[14]           1           1                              100.00 
         15                            next_pc[13]           1           1                              100.00 
         15                            next_pc[12]           1           1                              100.00 
         15                            next_pc[11]           1           1                              100.00 
         15                            next_pc[10]           1           1                              100.00 
         15                             next_pc[0]           1           1                              100.00 
         60                                 opcode               ENUM type       Value       Count 
                                                                      ADDI           4      100.00 
                                                                      STLI           5      100.00 
                                                                     STLUI           6      100.00 
                                                                      ANDI           1      100.00 
                                                                       ORI          10      100.00 
                                                                      XORI           7      100.00 
                                                                      SLLI           6      100.00 
                                                                      SRLI           6      100.00 
                                                                      SRAI           7      100.00 
                                                                       LUI           4      100.00 
                                                                     AUIPC           2      100.00 
                                                                       ADD           9      100.00 
                                                                       SUB           7      100.00 
                                                                       STL           7      100.00 
                                                                      STLU           8      100.00 
                                                                       AND           6      100.00 
                                                                        OR          10      100.00 
                                                                       XOR           7      100.00 
                                                                       SLL           4      100.00 
                                                                       SRL           4      100.00 
                                                                       SRA           5      100.00 
                                                                       JAL           7      100.00 
                                                                      JALR           9      100.00 
                                                                       BEQ           4      100.00 
                                                                       BNE           7      100.00 
                                                                       BLT           6      100.00 
                                                                      BLTU           6      100.00 
                                                                       BGE           7      100.00 
                                                                      BGEU           5      100.00 
                                                                        LW           5      100.00 
                                                                        LH           3      100.00 
                                                                        LB           6      100.00 
                                                                       LHU           6      100.00 
                                                                       LBU           4      100.00 
                                                                        SW           2      100.00 
                                                                        SH           7      100.00 
                                                                        SB           4      100.00 

Total Node Count     =        296 
Toggled Node Count   =        198 
Untoggled Node Count =         98 

Toggle Coverage      =      64.68% (359 of 555 bins)

=================================================================================
=== File: ../design_rtl/decoder.sv
=================================================================================
Branch Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Branches                        13        12         1    92.30%

================================Branch Details================================

Branch Coverage for file ../design_rtl/decoder.sv --

------------------------------------IF Branch------------------------------------
    43                                     40003     Count coming in to IF
    43              1                          3         if (rst) begin
    49              1                      40000         end else begin 
Branch totals: 2 hits of 2 branches = 100.00%

------------------------------------IF Branch------------------------------------
    50                                     40000     Count coming in to IF
    50              1                      19999           if (enable) begin
                                           20001     All False Count
Branch totals: 2 hits of 2 branches = 100.00%

------------------------------------CASE Branch------------------------------------
    64                                     55340     Count coming in to CASE
    65              1                      17541           is_r_type(instr_reg): begin
    69              1                      18971           is_i_type(instr_reg): begin
    73              1                       4736           is_si_type(instr_reg): begin
    77              1                       2978           is_s_type(instr_reg): begin
    82              1                       6330           is_b_type(instr_reg): begin
    87              1                       3231           is_u_type(instr_reg): begin
    90              1                       1548           is_j_type(instr_reg): begin
    93              1                    ***0***           (instr_reg == EBREAK) : op1 = '0;
                                               5     All False Count
Branch totals: 8 hits of 9 branches = 88.88%


Statement Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Statements                      41        40         1    97.56%

================================Statement Details================================

Statement Coverage for file ../design_rtl/decoder.sv --

    1                                                import opcodes::*;
    2                                                
    3                                                module decoder #(
    4                                                   parameter broken = "NONE"
    5                                                 )(
    6                                                  input logic clk, rst,
    7                                                
    8                                                  input wire instruction_t instr,
    9                                                  input logic enable,
    10                                                 input wire register_t register_bank[32],
    11                                               
    12                                                 output register_t op1, op2, op3, 
    13                                                 output register_num_t rd);
    14                                               
    15                                                 instruction_t instr_reg;
    16                                                 register_num_t rs1, rs2;
    17                                                 register_t imm;
    18                                                 register_num_t rd_reg;
    19                                               
    20                                               `ifndef SYNTHESIS
    21                                               
    22                                                 function automatic register_t induce_errors(register_t data);
    23                                                   if (broken == "DEC") begin
    24                                                     if ($urandom_range(1,10)==7)   // 10% of the time flip a bit at random
    25                                                       return data ^ register_t'(32'h1 << $urandom_range(0,31));
    26                                                   end
    27              1                     166020         return(data);
    28                                                 endfunction
    29                                               
    30                                                 string debug_opcode;
    31                                               
    32                                                 mnemonic_t opcode;
    33              1                      20001       assign opcode = opc_base(instr);
    34                                                
    35                                                 assign rd = rd_reg;
    36                                               `else
    37                                                 assign rd = rd_reg;
    38                                               `endif
    39                                               
    40              1                      20001       assign debug_opcode = decode_instr(instr); 
    41                                               
    42              1                      40003       always_ff @(posedge clk) begin
    43                                                   if (rst) begin
    44              1                          3           rs1 <= '0;
    45              1                          3           rs2 <= '0;
    46              1                          3           imm <= '0;
    47              1                          3           rd_reg <= '0;
    48              1                          3           instr_reg <= '0;
    49                                                   end else begin 
    50                                                     if (enable) begin
    51              1                      19999             rs1 <= get_rs1(instr);
    52              1                      19999             rs2 <= get_rs2(instr);
    53              1                      19999             imm <= get_imm(instr);
    54              1                      19999             rd_reg  <= get_rd(instr);
    55              1                      19999             instr_reg <= instr;
    56                                                     end
    57                                                   end
    58                                                 end
    59                                               
    60              1                      55340       always_comb begin
    61              1                      55340         op1 = '0;
    62              1                      55340         op2 = '0;
    63              1                      55340         op3 = '0;
    64                                                   case (1)
    65                                                     is_r_type(instr_reg): begin
    66              1                      17541               op1 = register_bank[rs1];
    67              1                      17541               op2 = register_bank[rs2];
    68                                                       end
    69                                                     is_i_type(instr_reg): begin
    70              1                      18971               op1 = register_bank[rs1];
    71              1                      18971               op2 = imm;
    72                                                       end
    73                                                     is_si_type(instr_reg): begin
    74              1                       4736               op1 = register_bank[rs1];
    75              1                       4736               op2 = imm;
    76                                                       end
    77                                                     is_s_type(instr_reg): begin
    78              1                       2978               op1 = register_bank[rs1]; 
    79              1                       2978               op2 = imm;                
    80              1                       2978               op3 = register_bank[rs2]; 
    81                                                       end
    82                                                     is_b_type(instr_reg): begin
    83              1                       6330               op1 = register_bank[rs1];
    84              1                       6330               op2 = register_bank[rs2];
    85              1                       6330               op3 = imm;
    86                                                       end
    87                                                     is_u_type(instr_reg): begin
    88              1                       3231               op1 = imm; 
    89                                                       end
    90                                                     is_j_type(instr_reg): begin
    91              1                       1548               op1 = imm; 
    92                                                       end
    93              1                    ***0***           (instr_reg == EBREAK) : op1 = '0;
    94                                                     //  default: $error("invalid opcode in decoder: %x ", instr);
    95                                                   endcase
    96                                               `ifndef SYNTHESIS
    97              1                      55340         op1 = induce_errors(op1);
    98              1                      55340         op2 = induce_errors(op2);
    99              1                      55340         op3 = induce_errors(op3);
    100                                              `endif
    101                                                end 
    102                                              
    103                                              
    104                                                 covergroup opcodes_cg @(posedge clk);
    105                                                   coverpoint opcode {
    106                                                      bins instr[] = {
    107                                                           ADD, SUB, AND, OR, XOR, SLL, SRA, STL, STLU, 
    108                                                           ADDI, ANDI, ORI,  XORI, SLLI, SRAI, STL, STLU, LW, LH, LHU, LB, LBU, JALR,
    109                                                           STLI, STLUI,
    110                                                           LUI, AUIPC,
    111                                                           SW, SH, SB,
    112                                                           BEQ, BNE, BLT, BGE, BLTU, BGEU,
    113                                                           JAL };
    114                                                   }
    115                                                 endgroup
    116                                              
    117                                                 covergroup regs_cg @(posedge clk);
    118                                                   coverpoint opcode {
    119                                                     bins r_type = { ADD, SUB, AND, OR, XOR, SLL, SRA, STL, STLU };
    120                                                     bins i_type = { ADDI, ANDI, ORI,  XORI, SLLI, SRAI, STL, STLU, LW, LH, LHU, LB, LBU, JALR };
    121                                                     bins si_type = { STLI, STLUI };
    122                                                     bins u_type = { LUI, AUIPC };
    123                                                     bins s_type = { SW, SH, SB };
    124                                                     bins b_type = { BEQ, BNE, BLT, BGE, BLTU, BGEU };
    125                                                     bins j_type = { JAL };
    126                                                   }
    127                                                   coverpoint rs1 {
    128                                                     bins n[4] = {[0:31]};
    129                                                   }
    130                                                   coverpoint rs2 {
    131                                                     bins n[4] = {[0:31]};
    132                                                   }
    133                                                   coverpoint rd {
    134                                                     bins n[4] = {[0:31]};
    135                                                   }
    136                                                   cross opcode, rs1, rs2, rd;
    137                                                 endgroup
    138                                              
    139                                                 covergroup one_operand_cg @(posedge clk);
    140                                                   coverpoint opcode {
    141                                                     bins one_operand = { JAL, LUI, AUIPC };
    142                                                   }
    143                                                   coverpoint op1 {
    144                                                     bins negative = {[$:-1]};
    145                                                     bins zero     = { 0 };
    146                                                     bins positive = {[1:$]};
    147                                                   }
    148                                                   cross opcode, op1;
    149                                                 endgroup
    150                                              
    151                                                 covergroup two_operand_cg @(posedge clk);
    152                                                   coverpoint opcode {
    153                                                     bins two_operand = {
    154                                                            ADD, SUB, AND, OR, XOR, SLL, SRA, STL, STLU,
    155                                                            ADDI, ANDI, ORI,  XORI, SLLI, SRAI, STL, STLU, LW, LH, LHU, LB, LBU, JALR,
    156                                                            STLI, STLUI };
    157                                                   }
    158                                                   coverpoint op1 {
    159                                                     bins negative = {[$:-1]};
    160                                                     bins zero     = { 0 };
    161                                                     bins positive = {[1:$]};
    162                                                   }
    163                                                   coverpoint op2 {
    164                                                     bins negative = {[$:-1]};
    165                                                     bins zero     = { 0 };
    166                                                     bins positive = {[1:$]};
    167                                                   }
    168                                                   cross opcode, op1, op2;
    169                                                 endgroup
    170                                              
    171                                                 covergroup three_operand_cg @(posedge clk);
    172                                                   coverpoint opcode {
    173                                                     bins three_operand = { SW, SH, SB, BEQ, BNE, BLT, BGE, BLTU, BGEU };
    174                                                   }
    175                                                   coverpoint op1 {
    176                                                     bins negative = {[$:-1]};
    177                                                     bins zero     = { 0 };
    178                                                     bins positive = {[1:$]};
    179                                                   }
    180                                                   coverpoint op2 {
    181                                                     bins negative = {[$:-1]};
    182                                                     bins zero     = { 0 };
    183                                                     bins positive = {[1:$]};
    184                                                   }
    185                                                   coverpoint op3 {
    186                                                     bins negative = {[$:-1]};
    187                                                     bins zero     = { 0 };
    188                                                     bins positive = {[1:$]};
    189                                                   }
    190                                                   cross opcode, op1, op2, op3;
    191                                                 endgroup
    192                                              
    193             1                          1        opcodes_cg        opcodes_inst       = new();
    194             1                          1        regs_cg           regs_inst          = new();
    195             1                          1        one_operand_cg    one_operand_inst   = new();
    196             1                          1        two_operand_cg    two_operand_inst   = new();
    197             1                          1        three_operand_cg  three_operand_inst = new();
    198                                              
    199                                              endmodule
    200                                              

Toggle Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Toggles                        467       461         6    98.71%

================================Toggle Details================================

Toggle Coverage for File ../design_rtl/decoder.sv --

       Line                                   Node      1H->0L      0L->1H                          "Coverage"
--------------------------------------------------------------------------------------------------------------
          6                                    rst           1           1                              100.00 
          6                                    clk           1           1                              100.00 
          8                          instr.j.rd[4]           1           1                              100.00 
          8                          instr.j.rd[3]           1           1                              100.00 
          8                          instr.j.rd[2]           1           1                              100.00 
          8                          instr.j.rd[1]           1           1                              100.00 
          8                          instr.j.rd[0]           1           1                              100.00 
          8                     instr.j.opcode1[6]           1           1                              100.00 
          8                     instr.j.opcode1[5]           1           1                              100.00 
          8                     instr.j.opcode1[4]           1           1                              100.00 
          8                     instr.j.opcode1[3]           1           1                              100.00 
          8                     instr.j.opcode1[2]           1           1                              100.00 
          8                     instr.j.opcode1[1]           0           0                                0.00 
          8                     instr.j.opcode1[0]           0           0                                0.00 
          8                           instr.j.imm3           1           1                              100.00 
          8                        instr.j.imm2[7]           1           1                              100.00 
          8                        instr.j.imm2[6]           1           1                              100.00 
          8                        instr.j.imm2[5]           1           1                              100.00 
          8                        instr.j.imm2[4]           1           1                              100.00 
          8                        instr.j.imm2[3]           1           1                              100.00 
          8                        instr.j.imm2[2]           1           1                              100.00 
          8                        instr.j.imm2[1]           1           1                              100.00 
          8                        instr.j.imm2[0]           1           1                              100.00 
          8                           instr.j.imm1           1           1                              100.00 
          8                        instr.j.imm0[9]           1           1                              100.00 
          8                        instr.j.imm0[8]           1           1                              100.00 
          8                        instr.j.imm0[7]           1           1                              100.00 
          8                        instr.j.imm0[6]           1           1                              100.00 
          8                        instr.j.imm0[5]           1           1                              100.00 
          8                        instr.j.imm0[4]           1           1                              100.00 
          8                        instr.j.imm0[3]           1           1                              100.00 
          8                        instr.j.imm0[2]           1           1                              100.00 
          8                        instr.j.imm0[1]           1           1                              100.00 
          8                        instr.j.imm0[0]           1           1                              100.00 
          9                                 enable           1           1                              100.00 
         12                                 op3[9]           1           1                              100.00 
         12                                 op3[8]           1           1                              100.00 
         12                                 op3[7]           1           1                              100.00 
         12                                 op3[6]           1           1                              100.00 
         12                                 op3[5]           1           1                              100.00 
         12                                 op3[4]           1           1                              100.00 
         12                                 op3[3]           1           1                              100.00 
         12                                op3[31]           1           1                              100.00 
         12                                op3[30]           1           1                              100.00 
         12                                 op3[2]           1           1                              100.00 
         12                                op3[29]           1           1                              100.00 
         12                                op3[28]           1           1                              100.00 
         12                                op3[27]           1           1                              100.00 
         12                                op3[26]           1           1                              100.00 
         12                                op3[25]           1           1                              100.00 
         12                                op3[24]           1           1                              100.00 
         12                                op3[23]           1           1                              100.00 
         12                                op3[22]           1           1                              100.00 
         12                                op3[21]           1           1                              100.00 
         12                                op3[20]           1           1                              100.00 
         12                                 op3[1]           1           1                              100.00 
         12                                op3[19]           1           1                              100.00 
         12                                op3[18]           1           1                              100.00 
         12                                op3[17]           1           1                              100.00 
         12                                op3[16]           1           1                              100.00 
         12                                op3[15]           1           1                              100.00 
         12                                op3[14]           1           1                              100.00 
         12                                op3[13]           1           1                              100.00 
         12                                op3[12]           1           1                              100.00 
         12                                op3[11]           1           1                              100.00 
         12                                op3[10]           1           1                              100.00 
         12                                 op3[0]           1           1                              100.00 
         12                                 op2[9]           1           1                              100.00 
         12                                 op2[8]           1           1                              100.00 
         12                                 op2[7]           1           1                              100.00 
         12                                 op2[6]           1           1                              100.00 
         12                                 op2[5]           1           1                              100.00 
         12                                 op2[4]           1           1                              100.00 
         12                                 op2[3]           1           1                              100.00 
         12                                op2[31]           1           1                              100.00 
         12                                op2[30]           1           1                              100.00 
         12                                 op2[2]           1           1                              100.00 
         12                                op2[29]           1           1                              100.00 
         12                                op2[28]           1           1                              100.00 
         12                                op2[27]           1           1                              100.00 
         12                                op2[26]           1           1                              100.00 
         12                                op2[25]           1           1                              100.00 
         12                                op2[24]           1           1                              100.00 
         12                                op2[23]           1           1                              100.00 
         12                                op2[22]           1           1                              100.00 
         12                                op2[21]           1           1                              100.00 
         12                                op2[20]           1           1                              100.00 
         12                                 op2[1]           1           1                              100.00 
         12                                op2[19]           1           1                              100.00 
         12                                op2[18]           1           1                              100.00 
         12                                op2[17]           1           1                              100.00 
         12                                op2[16]           1           1                              100.00 
         12                                op2[15]           1           1                              100.00 
         12                                op2[14]           1           1                              100.00 
         12                                op2[13]           1           1                              100.00 
         12                                op2[12]           1           1                              100.00 
         12                                op2[11]           1           1                              100.00 
         12                                op2[10]           1           1                              100.00 
         12                                 op2[0]           1           1                              100.00 
         12                                 op1[9]           1           1                              100.00 
         12                                 op1[8]           1           1                              100.00 
         12                                 op1[7]           1           1                              100.00 
         12                                 op1[6]           1           1                              100.00 
         12                                 op1[5]           1           1                              100.00 
         12                                 op1[4]           1           1                              100.00 
         12                                 op1[3]           1           1                              100.00 
         12                                op1[31]           1           1                              100.00 
         12                                op1[30]           1           1                              100.00 
         12                                 op1[2]           1           1                              100.00 
         12                                op1[29]           1           1                              100.00 
         12                                op1[28]           1           1                              100.00 
         12                                op1[27]           1           1                              100.00 
         12                                op1[26]           1           1                              100.00 
         12                                op1[25]           1           1                              100.00 
         12                                op1[24]           1           1                              100.00 
         12                                op1[23]           1           1                              100.00 
         12                                op1[22]           1           1                              100.00 
         12                                op1[21]           1           1                              100.00 
         12                                op1[20]           1           1                              100.00 
         12                                 op1[1]           1           1                              100.00 
         12                                op1[19]           1           1                              100.00 
         12                                op1[18]           1           1                              100.00 
         12                                op1[17]           1           1                              100.00 
         12                                op1[16]           1           1                              100.00 
         12                                op1[15]           1           1                              100.00 
         12                                op1[14]           1           1                              100.00 
         12                                op1[13]           1           1                              100.00 
         12                                op1[12]           1           1                              100.00 
         12                                op1[11]           1           1                              100.00 
         12                                op1[10]           1           1                              100.00 
         12                                 op1[0]           1           1                              100.00 
         13                                  rd[4]           1           1                              100.00 
         13                                  rd[3]           1           1                              100.00 
         13                                  rd[2]           1           1                              100.00 
         13                                  rd[1]           1           1                              100.00 
         13                                  rd[0]           1           1                              100.00 
         15                           instr_reg[9]           1           1                              100.00 
         15                           instr_reg[8]           1           1                              100.00 
         15                           instr_reg[7]           1           1                              100.00 
         15                           instr_reg[6]           1           1                              100.00 
         15                           instr_reg[5]           1           1                              100.00 
         15                           instr_reg[4]           1           1                              100.00 
         15                           instr_reg[3]           1           1                              100.00 
         15                          instr_reg[31]           1           1                              100.00 
         15                          instr_reg[30]           1           1                              100.00 
         15                           instr_reg[2]           1           1                              100.00 
         15                          instr_reg[29]           1           1                              100.00 
         15                          instr_reg[28]           1           1                              100.00 
         15                          instr_reg[27]           1           1                              100.00 
         15                          instr_reg[26]           1           1                              100.00 
         15                          instr_reg[25]           1           1                              100.00 
         15                          instr_reg[24]           1           1                              100.00 
         15                          instr_reg[23]           1           1                              100.00 
         15                          instr_reg[22]           1           1                              100.00 
         15                          instr_reg[21]           1           1                              100.00 
         15                          instr_reg[20]           1           1                              100.00 
         15                           instr_reg[1]           0           1                               50.00 
         15                          instr_reg[19]           1           1                              100.00 
         15                          instr_reg[18]           1           1                              100.00 
         15                          instr_reg[17]           1           1                              100.00 
         15                          instr_reg[16]           1           1                              100.00 
         15                          instr_reg[15]           1           1                              100.00 
         15                          instr_reg[14]           1           1                              100.00 
         15                          instr_reg[13]           1           1                              100.00 
         15                          instr_reg[12]           1           1                              100.00 
         15                          instr_reg[11]           1           1                              100.00 
         15                          instr_reg[10]           1           1                              100.00 
         15                           instr_reg[0]           0           1                               50.00 
         16                                 rs2[4]           1           1                              100.00 
         16                                 rs2[3]           1           1                              100.00 
         16                                 rs2[2]           1           1                              100.00 
         16                                 rs2[1]           1           1                              100.00 
         16                                 rs2[0]           1           1                              100.00 
         16                                 rs1[4]           1           1                              100.00 
         16                                 rs1[3]           1           1                              100.00 
         16                                 rs1[2]           1           1                              100.00 
         16                                 rs1[1]           1           1                              100.00 
         16                                 rs1[0]           1           1                              100.00 
         17                                 imm[9]           1           1                              100.00 
         17                                 imm[8]           1           1                              100.00 
         17                                 imm[7]           1           1                              100.00 
         17                                 imm[6]           1           1                              100.00 
         17                                 imm[5]           1           1                              100.00 
         17                                 imm[4]           1           1                              100.00 
         17                                 imm[3]           1           1                              100.00 
         17                                imm[31]           1           1                              100.00 
         17                                imm[30]           1           1                              100.00 
         17                                 imm[2]           1           1                              100.00 
         17                                imm[29]           1           1                              100.00 
         17                                imm[28]           1           1                              100.00 
         17                                imm[27]           1           1                              100.00 
         17                                imm[26]           1           1                              100.00 
         17                                imm[25]           1           1                              100.00 
         17                                imm[24]           1           1                              100.00 
         17                                imm[23]           1           1                              100.00 
         17                                imm[22]           1           1                              100.00 
         17                                imm[21]           1           1                              100.00 
         17                                imm[20]           1           1                              100.00 
         17                                 imm[1]           1           1                              100.00 
         17                                imm[19]           1           1                              100.00 
         17                                imm[18]           1           1                              100.00 
         17                                imm[17]           1           1                              100.00 
         17                                imm[16]           1           1                              100.00 
         17                                imm[15]           1           1                              100.00 
         17                                imm[14]           1           1                              100.00 
         17                                imm[13]           1           1                              100.00 
         17                                imm[12]           1           1                              100.00 
         17                                imm[11]           1           1                              100.00 
         17                                imm[10]           1           1                              100.00 
         17                                 imm[0]           1           1                              100.00 
         18                              rd_reg[4]           1           1                              100.00 
         18                              rd_reg[3]           1           1                              100.00 
         18                              rd_reg[2]           1           1                              100.00 
         18                              rd_reg[1]           1           1                              100.00 
         18                              rd_reg[0]           1           1                              100.00 
         32                                 opcode               ENUM type       Value       Count 
                                                                      ADDI           4      100.00 
                                                                      STLI           5      100.00 
                                                                     STLUI           6      100.00 
                                                                      ANDI           1      100.00 
                                                                       ORI          10      100.00 
                                                                      XORI           7      100.00 
                                                                      SLLI           6      100.00 
                                                                      SRLI           6      100.00 
                                                                      SRAI           7      100.00 
                                                                       LUI           4      100.00 
                                                                     AUIPC           2      100.00 
                                                                       ADD           9      100.00 
                                                                       SUB           7      100.00 
                                                                       STL           7      100.00 
                                                                      STLU           8      100.00 
                                                                       AND           6      100.00 
                                                                        OR          10      100.00 
                                                                       XOR           7      100.00 
                                                                       SLL           4      100.00 
                                                                       SRL           4      100.00 
                                                                       SRA           5      100.00 
                                                                       JAL           7      100.00 
                                                                      JALR           9      100.00 
                                                                       BEQ           4      100.00 
                                                                       BNE           7      100.00 
                                                                       BLT           6      100.00 
                                                                      BLTU           6      100.00 
                                                                       BGE           7      100.00 
                                                                      BGEU           5      100.00 
                                                                        LW           5      100.00 
                                                                        LH           3      100.00 
                                                                        LB           6      100.00 
                                                                       LHU           6      100.00 
                                                                       LBU           4      100.00 
                                                                        SW           2      100.00 
                                                                        SH           7      100.00 
                                                                        SB           4      100.00 

Total Node Count     =        252 
Toggled Node Count   =        248 
Untoggled Node Count =          4 

Toggle Coverage      =      98.71% (461 of 467 bins)

=================================================================================
=== File: ../design_rtl/memory_ctrl.sv
=================================================================================
Branch Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Branches                        58        53         5    91.37%

================================Branch Details================================

Branch Coverage for file ../design_rtl/memory_ctrl.sv --

------------------------------------IF Branch------------------------------------
    55                                     79999     Count coming in to IF
    55              1                          2          if (rst) state <= ADDR_PHASE; 
    56              1                      79997          else state <= next_state;
Branch totals: 2 hits of 2 branches = 100.00%

------------------------------------CASE Branch------------------------------------
    59                                     85236     Count coming in to CASE
    60              1                      42617            ADDR_PHASE : if (enable) next_state = DATA_PHASE; else next_state = ADDR_PHASE;
    61              1                      19999            DATA_PHASE : if ((read_op & read_ack) || (!read_op & write_ack)) next_state = DONE;
    62              1                      22617            DONE       : next_state = ADDR_PHASE;
                                               3     All False Count
Branch totals: 4 hits of 4 branches = 100.00%

------------------------------------IF Branch------------------------------------
    60                                     42617     Count coming in to IF
    60              2                      22617            ADDR_PHASE : if (enable) next_state = DATA_PHASE; else next_state = ADDR_PHASE;
    60              3                      20000            ADDR_PHASE : if (enable) next_state = DATA_PHASE; else next_state = ADDR_PHASE;
Branch totals: 2 hits of 2 branches = 100.00%

------------------------------------IF Branch------------------------------------
    61                                     19999     Count coming in to IF
    61              2                      19999            DATA_PHASE : if ((read_op & read_ack) || (!read_op & write_ack)) next_state = DONE;
                                         ***0***     All False Count
Branch totals: 1 hit of 2 branches = 50.00%

------------------------------------IF Branch------------------------------------
    67                                     88217     Count coming in to IF
    67              1                          5          if (rst) result_reg <= '0;
    68              1                       2618          else if ((state == DATA_PHASE) & (read_op & read_ack)) begin 
                                           85594     All False Count
Branch totals: 3 hits of 3 branches = 100.00%

------------------------------------IF Branch------------------------------------
    69                                      2618     Count coming in to IF
    69              1                       1001            if (sign_ex) begin
    73              1                       1617            end else begin
Branch totals: 2 hits of 2 branches = 100.00%

------------------------------------IF Branch------------------------------------
    70                                      1001     Count coming in to IF
    70              1                    ***0***              if (size == 4) result_reg <= read_data;
                                            1001     All False Count
Branch totals: 1 hit of 2 branches = 50.00%

------------------------------------IF Branch------------------------------------
    71                                      1001     Count coming in to IF
    71              1                        529              if (size == 2) result_reg <= signed_short'((read_data >> (8 * offset)) & 32'h0000FFFF);
                                             472     All False Count
Branch totals: 2 hits of 2 branches = 100.00%

------------------------------------IF Branch------------------------------------
    72                                      1001     Count coming in to IF
    72              1                        472              if (size == 1) result_reg <= signed_byte'((read_data >> (8 * offset)) & 32'h000000FF);
                                             529     All False Count
Branch totals: 2 hits of 2 branches = 100.00%

------------------------------------IF Branch------------------------------------
    74                                      1617     Count coming in to IF
    74              1                        571              if (size == 4) result_reg <= read_data;
                                            1046     All False Count
Branch totals: 2 hits of 2 branches = 100.00%

------------------------------------IF Branch------------------------------------
    75                                      1617     Count coming in to IF
    75              1                        506              if (size == 2) result_reg <= unsigned_short'((read_data >> (8 * offset)) & 32'h0000FFFF);
                                            1111     All False Count
Branch totals: 2 hits of 2 branches = 100.00%

------------------------------------IF Branch------------------------------------
    76                                      1617     Count coming in to IF
    76              1                        540              if (size == 1) result_reg <= unsigned_byte'((read_data >> (8 * offset)) & 32'h000000FF);
                                            1077     All False Count
Branch totals: 2 hits of 2 branches = 100.00%

------------------------------------IF Branch------------------------------------
    85                                     11227     Count coming in to IF
    85              1                       8672        assign write_byte_enable = (!write_op) ? '0 :
    86              1                       2555                                   (size == 4) ? 4'hF :
Branch totals: 2 hits of 2 branches = 100.00%

------------------------------------IF Branch------------------------------------
    86                                      2555     Count coming in to IF
    86              2                        840                                   (size == 4) ? 4'hF :
    87              1                       1715                                   (size == 2) ? 4'h3 << offset :
Branch totals: 2 hits of 2 branches = 100.00%

------------------------------------IF Branch------------------------------------
    87                                      1715     Count coming in to IF
    87              2                        829                                   (size == 2) ? 4'h3 << offset :
    88              1                        886                                   (size == 1) ? 4'h1 << offset : '0;
Branch totals: 2 hits of 2 branches = 100.00%

------------------------------------IF Branch------------------------------------
    88                                       886     Count coming in to IF
    88              2                        886                                   (size == 1) ? 4'h1 << offset : '0;
    88              3                    ***0***                                   (size == 1) ? 4'h1 << offset : '0;
Branch totals: 1 hit of 2 branches = 50.00%

------------------------------------IF Branch------------------------------------
    91                                     11786     Count coming in to IF
    91              1                       8818        assign write_data = (!write_op) ? '0 :
    92              1                       2968                            (size == 4) ? wdata :
Branch totals: 2 hits of 2 branches = 100.00%

------------------------------------IF Branch------------------------------------
    92                                      2968     Count coming in to IF
    92              2                       1005                            (size == 4) ? wdata :
    93              1                       1963                            (size == 2) ? (wdata & 32'h0000FFFF) << (offset * 8) :
Branch totals: 2 hits of 2 branches = 100.00%

------------------------------------IF Branch------------------------------------
    93                                      1963     Count coming in to IF
    93              2                        947                            (size == 2) ? (wdata & 32'h0000FFFF) << (offset * 8) :
    94              1                       1016                            (size == 1) ? (wdata & 32'h000000FF) << (offset * 8) : '0;
Branch totals: 2 hits of 2 branches = 100.00%

------------------------------------IF Branch------------------------------------
    94                                      1016     Count coming in to IF
    94              2                       1016                            (size == 1) ? (wdata & 32'h000000FF) << (offset * 8) : '0;
    94              3                    ***0***                            (size == 1) ? (wdata & 32'h000000FF) << (offset * 8) : '0;
Branch totals: 1 hit of 2 branches = 50.00%

------------------------------------IF Branch------------------------------------
    97                                    138735     Count coming in to IF
    97              1                          4          if (rst) begin 
    104             1                     138731          end else begin
Branch totals: 2 hits of 2 branches = 100.00%

------------------------------------IF Branch------------------------------------
    105                                   138731     Count coming in to IF
    105             1                      20583            if (state == DONE) begin
                                          118148     All False Count
Branch totals: 2 hits of 2 branches = 100.00%

------------------------------------IF Branch------------------------------------
    113                                   138731     Count coming in to IF
    113             1                       8214            if (enable & is_memory_op(instr)) begin
                                          130517     All False Count
Branch totals: 2 hits of 2 branches = 100.00%

------------------------------------CASE Branch------------------------------------
    122                                     8214     Count coming in to CASE
    123             1                       1142                M_LW   : begin  size = 4;  read_op  = 1; sign_ex = 0; end
    124             1                       1058                M_LH   : begin  size = 2;  read_op  = 1; sign_ex = 1; end
    125             1                       1012                M_LHU  : begin  size = 2;  read_op  = 1; sign_ex = 0; end
    126             1                        944                M_LB   : begin  size = 1;  read_op  = 1; sign_ex = 1; end
    127             1                       1080                M_LBU  : begin  size = 1;  read_op  = 1; sign_ex = 0; end
    128             1                       1010                M_SW   : begin  size = 4;  write_op = 1; sign_ex = 0; end
    129             1                        950                M_SH   : begin  size = 2;  write_op = 1; sign_ex = 0; end
    130             1                       1018                M_SB   : begin  size = 1;  write_op = 1; sign_ex = 0; end
                                         ***0***     All False Count
Branch totals: 8 hits of 9 branches = 88.88%


Condition Coverage:
    Enabled Coverage              Bins   Covered    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Conditions                      21        14         7    66.66%

================================Condition Details================================

Condition Coverage for file ../design_rtl/memory_ctrl.sv --

-----------Focused Condition View (Bimodal)--------------
Line       61 Item    1  ((read_op & read_ack) || (~read_op & write_ack))
Condition totals: 0 of 3 input terms covered = 0.00%

   Input Term   Covered  Reason for no coverage                  Hint
  -----------  --------  --------------------------------------  --------------
      read_op         N  Both rows hit for same output ->1      Hit either row for output ->0
     read_ack         N  '_1' hit but '_0' is not hit           Hit '_0' for output ->0
    write_ack         N  '_1' hit but '_0' is not hit           Hit '_0' for output ->0

    Rows:   Hits(->0)   Hits(->1)  FEC Target            Non-masking condition(s)                        

---------  ----------  ----------  --------------------  -------------------------                       
 Row   1:           0           1  read_op_0             (~(~read_op & write_ack) && read_ack), write_ack
 Row   2:           0           1  read_op_1             read_ack, (~(read_op & read_ack) && write_ack)  
 Row   3:           0           0  read_ack_0            read_op                                         
 Row   4:           0           1  read_ack_1            read_op                                         
 Row   5:           0           0  write_ack_0           ~read_op                                        
 Row   6:           0           1  write_ack_1           ~read_op                                        

----------------Focused Condition View-------------------
Line       68 Item    1  (((state == DATA_PHASE) & read_op) & read_ack)
Condition totals: 2 of 3 input terms covered = 66.66%

             Input Term   Covered  Reason for no coverage   Hint
            -----------  --------  -----------------------  --------------
  (state == DATA_PHASE)         Y
                read_op         Y
               read_ack         N  '_0' not hit             Hit '_0'

     Rows:       Hits  FEC Target               Non-masking condition(s)      
 ---------  ---------  --------------------     -------------------------     
  Row   1:          1  (state == DATA_PHASE)_0  (read_ack && read_op)         
  Row   2:          1  (state == DATA_PHASE)_1  (read_ack && read_op)         
  Row   3:          1  read_op_0                (read_ack && (state == DATA_PHASE))
  Row   4:          1  read_op_1                (read_ack && (state == DATA_PHASE))
  Row   5:    ***0***  read_ack_0               ((state == DATA_PHASE) & read_op)
  Row   6:          1  read_ack_1               ((state == DATA_PHASE) & read_op)

----------------Focused Condition View-------------------
Line       70 Item    1  (size == 4)
Condition totals: 0 of 1 input term covered = 0.00%

   Input Term   Covered  Reason for no coverage   Hint
  -----------  --------  -----------------------  --------------
  (size == 4)         N  '_1' not hit             Hit '_1'

     Rows:       Hits  FEC Target            Non-masking condition(s)      
 ---------  ---------  --------------------  -------------------------     
  Row   1:          1  (size == 4)_0         -                             
  Row   2:    ***0***  (size == 4)_1         -                             

----------------Focused Condition View-------------------
Line       71 Item    1  (size == 2)
Condition totals: 1 of 1 input term covered = 100.00%

   Input Term   Covered  Reason for no coverage   Hint
  -----------  --------  -----------------------  --------------
  (size == 2)         Y

     Rows:       Hits  FEC Target            Non-masking condition(s)      
 ---------  ---------  --------------------  -------------------------     
  Row   1:          1  (size == 2)_0         -                             
  Row   2:          1  (size == 2)_1         -                             

----------------Focused Condition View-------------------
Line       72 Item    1  (size == 1)
Condition totals: 1 of 1 input term covered = 100.00%

   Input Term   Covered  Reason for no coverage   Hint
  -----------  --------  -----------------------  --------------
  (size == 1)         Y

     Rows:       Hits  FEC Target            Non-masking condition(s)      
 ---------  ---------  --------------------  -------------------------     
  Row   1:          1  (size == 1)_0         -                             
  Row   2:          1  (size == 1)_1         -                             

----------------Focused Condition View-------------------
Line       74 Item    1  (size == 4)
Condition totals: 1 of 1 input term covered = 100.00%

   Input Term   Covered  Reason for no coverage   Hint
  -----------  --------  -----------------------  --------------
  (size == 4)         Y

     Rows:       Hits  FEC Target            Non-masking condition(s)      
 ---------  ---------  --------------------  -------------------------     
  Row   1:          1  (size == 4)_0         -                             
  Row   2:          1  (size == 4)_1         -                             

----------------Focused Condition View-------------------
Line       75 Item    1  (size == 2)
Condition totals: 1 of 1 input term covered = 100.00%

   Input Term   Covered  Reason for no coverage   Hint
  -----------  --------  -----------------------  --------------
  (size == 2)         Y

     Rows:       Hits  FEC Target            Non-masking condition(s)      
 ---------  ---------  --------------------  -------------------------     
  Row   1:          1  (size == 2)_0         -                             
  Row   2:          1  (size == 2)_1         -                             

----------------Focused Condition View-------------------
Line       76 Item    1  (size == 1)
Condition totals: 1 of 1 input term covered = 100.00%

   Input Term   Covered  Reason for no coverage   Hint
  -----------  --------  -----------------------  --------------
  (size == 1)         Y

     Rows:       Hits  FEC Target            Non-masking condition(s)      
 ---------  ---------  --------------------  -------------------------     
  Row   1:          1  (size == 1)_0         -                             
  Row   2:          1  (size == 1)_1         -                             

----------------Focused Condition View-------------------
Line       86 Item    1  (size == 4)
Condition totals: 1 of 1 input term covered = 100.00%

   Input Term   Covered  Reason for no coverage   Hint
  -----------  --------  -----------------------  --------------
  (size == 4)         Y

     Rows:       Hits  FEC Target            Non-masking condition(s)      
 ---------  ---------  --------------------  -------------------------     
  Row   1:          1  (size == 4)_0         -                             
  Row   2:          1  (size == 4)_1         -                             

----------------Focused Condition View-------------------
Line       87 Item    1  (size == 2)
Condition totals: 1 of 1 input term covered = 100.00%

   Input Term   Covered  Reason for no coverage   Hint
  -----------  --------  -----------------------  --------------
  (size == 2)         Y

     Rows:       Hits  FEC Target            Non-masking condition(s)      
 ---------  ---------  --------------------  -------------------------     
  Row   1:          1  (size == 2)_0         -                             
  Row   2:          1  (size == 2)_1         -                             

----------------Focused Condition View-------------------
Line       88 Item    1  (size == 1)
Condition totals: 0 of 1 input term covered = 0.00%

   Input Term   Covered  Reason for no coverage   Hint
  -----------  --------  -----------------------  --------------
  (size == 1)         N  '_0' not hit             Hit '_0'

     Rows:       Hits  FEC Target            Non-masking condition(s)      
 ---------  ---------  --------------------  -------------------------     
  Row   1:    ***0***  (size == 1)_0         -                             
  Row   2:          1  (size == 1)_1         -                             

----------------Focused Condition View-------------------
Line       92 Item    1  (size == 4)
Condition totals: 1 of 1 input term covered = 100.00%

   Input Term   Covered  Reason for no coverage   Hint
  -----------  --------  -----------------------  --------------
  (size == 4)         Y

     Rows:       Hits  FEC Target            Non-masking condition(s)      
 ---------  ---------  --------------------  -------------------------     
  Row   1:          1  (size == 4)_0         -                             
  Row   2:          1  (size == 4)_1         -                             

----------------Focused Condition View-------------------
Line       93 Item    1  (size == 2)
Condition totals: 1 of 1 input term covered = 100.00%

   Input Term   Covered  Reason for no coverage   Hint
  -----------  --------  -----------------------  --------------
  (size == 2)         Y

     Rows:       Hits  FEC Target            Non-masking condition(s)      
 ---------  ---------  --------------------  -------------------------     
  Row   1:          1  (size == 2)_0         -                             
  Row   2:          1  (size == 2)_1         -                             

----------------Focused Condition View-------------------
Line       94 Item    1  (size == 1)
Condition totals: 0 of 1 input term covered = 0.00%

   Input Term   Covered  Reason for no coverage   Hint
  -----------  --------  -----------------------  --------------
  (size == 1)         N  '_0' not hit             Hit '_0'

     Rows:       Hits  FEC Target            Non-masking condition(s)      
 ---------  ---------  --------------------  -------------------------     
  Row   1:    ***0***  (size == 1)_0         -                             
  Row   2:          1  (size == 1)_1         -                             

----------------Focused Condition View-------------------
Line       105 Item    1  (state == DONE)
Condition totals: 1 of 1 input term covered = 100.00%

       Input Term   Covered  Reason for no coverage   Hint
      -----------  --------  -----------------------  --------------
  (state == DONE)         Y

     Rows:       Hits  FEC Target            Non-masking condition(s)      
 ---------  ---------  --------------------  -------------------------     
  Row   1:          1  (state == DONE)_0     -                             
  Row   2:          1  (state == DONE)_1     -                             

----------------Focused Condition View-------------------
Line       113 Item    1  (enable & is_memory_op(instr))
Condition totals: 2 of 2 input terms covered = 100.00%

           Input Term   Covered  Reason for no coverage   Hint
          -----------  --------  -----------------------  --------------
               enable         Y
  is_memory_op(instr)         Y

     Rows:       Hits  FEC Target             Non-masking condition(s)      
 ---------  ---------  --------------------   -------------------------     
  Row   1:          1  enable_0               is_memory_op(instr)           
  Row   2:          1  enable_1               is_memory_op(instr)           
  Row   3:          1  is_memory_op(instr)_0  enable                        
  Row   4:          1  is_memory_op(instr)_1  enable                        


Expression Coverage:
    Enabled Coverage              Bins   Covered    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Expressions                      7         6         1    85.71%

================================Expression Details================================

Expression Coverage for file ../design_rtl/memory_ctrl.sv --

----------------Focused Expression View-----------------
Line       82 Item    1  ((read_op & read_ack) & (state == DATA_PHASE))
Expression totals: 2 of 3 input terms covered = 66.66%

             Input Term   Covered  Reason for no coverage   Hint
            -----------  --------  -----------------------  --------------
                read_op         Y
               read_ack         N  '_0' not hit             Hit '_0'
  (state == DATA_PHASE)         Y

     Rows:       Hits  FEC Target               Non-masking condition(s)      
 ---------  ---------  --------------------     -------------------------     
  Row   1:          1  read_op_0                ((state == DATA_PHASE) && read_ack)
  Row   2:          1  read_op_1                ((state == DATA_PHASE) && read_ack)
  Row   3:    ***0***  read_ack_0               ((state == DATA_PHASE) && read_op)
  Row   4:          1  read_ack_1               ((state == DATA_PHASE) && read_op)
  Row   5:          1  (state == DATA_PHASE)_0  (read_op & read_ack)          
  Row   6:          1  (state == DATA_PHASE)_1  (read_op & read_ack)          

----------------Focused Expression View-----------------
Line       83 Item    1  (read_op & (state == ADDR_PHASE))
Expression totals: 2 of 2 input terms covered = 100.00%

             Input Term   Covered  Reason for no coverage   Hint
            -----------  --------  -----------------------  --------------
                read_op         Y
  (state == ADDR_PHASE)         Y

     Rows:       Hits  FEC Target               Non-masking condition(s)      
 ---------  ---------  --------------------     -------------------------     
  Row   1:          1  read_op_0                (state == ADDR_PHASE)         
  Row   2:          1  read_op_1                (state == ADDR_PHASE)         
  Row   3:          1  (state == ADDR_PHASE)_0  read_op                       
  Row   4:          1  (state == ADDR_PHASE)_1  read_op                       

----------------Focused Expression View-----------------
Line       84 Item    1  (write_op & (state == ADDR_PHASE))
Expression totals: 2 of 2 input terms covered = 100.00%

             Input Term   Covered  Reason for no coverage   Hint
            -----------  --------  -----------------------  --------------
               write_op         Y
  (state == ADDR_PHASE)         Y

     Rows:       Hits  FEC Target               Non-masking condition(s)      
 ---------  ---------  --------------------     -------------------------     
  Row   1:          1  write_op_0               (state == ADDR_PHASE)         
  Row   2:          1  write_op_1               (state == ADDR_PHASE)         
  Row   3:          1  (state == ADDR_PHASE)_0  write_op                      
  Row   4:          1  (state == ADDR_PHASE)_1  write_op                      


FSM Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    FSM States                       3         3         0   100.00%
    FSM Transitions                  4         3         1    75.00%

================================FSM Details================================

FSM Coverage for file ../design_rtl/memory_ctrl.sv --

FSM_ID: state
    Current State Object : state
    ----------------------
    State Value MapInfo :
    ---------------------
Line          State Name               Value
----          ----------               -----
  60          ADDR_PHASE                   0
  61          DATA_PHASE                   1
  62                DONE                   2
    Covered States :
    ----------------
                   State           Hit_count
                   -----           ---------
              ADDR_PHASE               40000          
              DATA_PHASE               19999          
                    DONE               19999          
    Covered Transitions :
    ---------------------
Line            Trans_ID           Hit_count          Transition          
----            --------           ---------          ----------          
  60                   0               19999          ADDR_PHASE -> DATA_PHASE          
  61                   1               19999          DATA_PHASE -> DONE            
  62                   3               19999          DONE -> ADDR_PHASE            
    Uncovered Transitions :
    -----------------------
Line            Trans_ID          Transition          
----            --------          ----------          
  55                   2          DATA_PHASE -> ADDR_PHASE


    Summary                       Bins      Hits    Misses  Coverage
    -------                       ----      ----    ------  --------
        FSM States                   3         3         0   100.00%
        FSM Transitions              4         3         1    75.00%
Statement Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Statements                      67        66         1    98.50%

================================Statement Details================================

Statement Coverage for file ../design_rtl/memory_ctrl.sv --

    1                                                
    2                                                import opcodes::*;
    3                                                
    4                                                module memory_ctrl #(
    5                                                   parameter broken = "NONE"
    6                                                 )(
    7                                                   input logic          clk, rst,
    8                                                
    9                                                   input wire instruction_t  instr,
    10                                                  input register_t     op1, op2, op3,
    11                                                  input logic          enable,
    12                                                  output register_t    result,
    13                                                  output logic         result_valid,
    14                                               
    15                                                  output logic [31:0]  address,
    16                                                  output logic         read_enable,
    17                                                  input  logic [31:0]  read_data,
    18                                                  input  logic         read_ack,
    19                                                  output logic         write_enable,
    20                                                  output logic [3:0]   write_byte_enable,
    21                                                  output logic [31:0]  write_data,
    22                                                  input  logic         write_ack);
    23                                               
    24                                                  typedef enum logic[2:0] { ADDR_PHASE, DATA_PHASE, DONE } state_t;
    25                                               
    26                                                  typedef logic unsigned [15:0]  unsigned_short;
    27                                                  typedef logic signed   [15:0]  signed_short;
    28                                                  typedef logic unsigned  [7:0]  unsigned_byte;
    29                                                  typedef logic signed    [7:0]  signed_byte; 
    30                                               
    31                                                  state_t state, next_state;
    32                                                  logic read_op, write_op;
    33                                                  logic read_instr, write_instr;
    34                                                  logic sign_ex;
    35                                                  logic [1:0] offset;
    36                                                  logic [2:0] size;
    37                                                  register_t wdata;
    38                                                  register_t result_reg;
    39                                               
    40                                               `ifndef SYNTHESIS
    41                                                  function automatic register_t induce_errors(register_t data);
    42                                                    if (broken == "MCU") begin
    43                                                      if ($urandom_range(1,10)==7)   // 10% of the time flip a bit at random 
    44                                                        return data ^ register_t'(32'h1 << $urandom_range(0,31));
    45                                                    end 
    46              1                      10833          return(data);
    47                                                  endfunction
    48                                               
    49              1                       2619        assign result = induce_errors(result_reg);
    50                                               `else
    51                                                  assign result = result_reg;
    52                                               `endif
    53                                               
    54              1                      79999        always_ff @(posedge clk) 
    55              1                          2          if (rst) state <= ADDR_PHASE; 
    56              1                      79997          else state <= next_state;
    57                                               
    58              1                      85236        always_comb begin
    59                                                    case (state) 
    60              1                      22617            ADDR_PHASE : if (enable) next_state = DATA_PHASE; else next_state = ADDR_PHASE;
    60              2                      20000     
    61              1                      19999            DATA_PHASE : if ((read_op & read_ack) || (!read_op & write_ack)) next_state = DONE;
    62              1                      22617            DONE       : next_state = ADDR_PHASE;
    63                                                    endcase
    64                                                  end
    65                                               
    66              1                      88217        always_comb begin 
    67              1                          5          if (rst) result_reg <= '0;
    68                                                    else if ((state == DATA_PHASE) & (read_op & read_ack)) begin 
    69                                                      if (sign_ex) begin
    70              1                    ***0***              if (size == 4) result_reg <= read_data;
    71              1                        529              if (size == 2) result_reg <= signed_short'((read_data >> (8 * offset)) & 32'h0000FFFF);
    72              1                        472              if (size == 1) result_reg <= signed_byte'((read_data >> (8 * offset)) & 32'h000000FF);
    73                                                      end else begin
    74              1                        571              if (size == 4) result_reg <= read_data;
    75              1                        506              if (size == 2) result_reg <= unsigned_short'((read_data >> (8 * offset)) & 32'h0000FFFF);
    76              1                        540              if (size == 1) result_reg <= unsigned_byte'((read_data >> (8 * offset)) & 32'h000000FF);
    77                                                      end
    78                                                    end
    79                                                  end
    80                                               
    81                                                  // assign result_valid = ((read_op & read_ack) || (write_op & write_ack)) & (state == DONE);
    82              1                      65237        assign result_valid = (read_op & read_ack) & (state == DATA_PHASE);
    83              1                      65236        assign read_enable = (read_op & (state == ADDR_PHASE));
    84              1                      62978        assign write_enable = (write_op & (state == ADDR_PHASE));
    85              1                      11228        assign write_byte_enable = (!write_op) ? '0 :
    86                                                                             (size == 4) ? 4'hF :
    87                                                                             (size == 2) ? 4'h3 << offset :
    88                                                                             (size == 1) ? 4'h1 << offset : '0;
    89                                               
    90                                               
    91              1                      11787        assign write_data = (!write_op) ? '0 :
    92                                                                      (size == 4) ? wdata :
    93                                                                      (size == 2) ? (wdata & 32'h0000FFFF) << (offset * 8) :
    94                                                                      (size == 1) ? (wdata & 32'h000000FF) << (offset * 8) : '0;
    95                                               
    96              1                     138735        always_comb begin
    97                                                    if (rst) begin 
    98              1                          4            size = '0;
    99              1                          4            offset = '0;
    100             1                          4            address = '0;
    101             1                          4            read_op = 0;
    102             1                          4            write_op = 0;
    103             1                          4            wdata = '0;
    104                                                   end else begin
    105                                                     if (state == DONE) begin
    106             1                      20583              size = '0;
    107             1                      20583              offset = '0;
    108             1                      20583              address = '0;
    109             1                      20583              read_op = 0;
    110             1                      20583              write_op = 0;
    111             1                      20583              wdata = '0;
    112                                                     end
    113                                                     if (enable & is_memory_op(instr)) begin
    114                                                     // $display("executing %s ", decode_instr(instr));
    115             1                       8214              address = (op1 + op2) >> 2;
    116             1                       8214              offset  = (op1 + op2) & 32'h00000003;
    117                                              `ifndef SYNTHESIS
    118             1                       8214              wdata = induce_errors(op3);
    119                                              `else
    120                                                       wdata = op3;
    121                                              `endif
    122                                                       casez (instr) 
    123             1                       1142                M_LW   : begin  size = 4;  read_op  = 1; sign_ex = 0; end
    123             2                       1142     
    123             3                       1142     
    124             1                       1058                M_LH   : begin  size = 2;  read_op  = 1; sign_ex = 1; end
    124             2                       1058     
    124             3                       1058     
    125             1                       1012                M_LHU  : begin  size = 2;  read_op  = 1; sign_ex = 0; end
    125             2                       1012     
    125             3                       1012     
    126             1                        944                M_LB   : begin  size = 1;  read_op  = 1; sign_ex = 1; end
    126             2                        944     
    126             3                        944     
    127             1                       1080                M_LBU  : begin  size = 1;  read_op  = 1; sign_ex = 0; end
    127             2                       1080     
    127             3                       1080     
    128             1                       1010                M_SW   : begin  size = 4;  write_op = 1; sign_ex = 0; end
    128             2                       1010     
    128             3                       1010     
    129             1                        950                M_SH   : begin  size = 2;  write_op = 1; sign_ex = 0; end
    129             2                        950     
    129             3                        950     
    130             1                       1018                M_SB   : begin  size = 1;  write_op = 1; sign_ex = 0; end
    130             2                       1018     
    130             3                       1018     
    131                                                       endcase
    132                                                     end
    133                                                   end
    134                                                 end
    135                                              
    136                                                 mnemonic_t opcode;
    137             1                      20001        assign opcode = opc_base(instr);
    138                                              
    139                                                 covergroup mcu_cg @(posedge clk); 
    140                                                   coverpoint opcode {
    141                                                      bins instr[] = {LW, LH, LHU, LB, LBU, SW, SH, SB};
    142                                                      // ignore_bins: others;
    143                                                    }
    144                                                    coverpoint result_reg {
    145                                                      bins positive = { [1:$] };
    146                                                      bins zero     = { 0 };
    147                                                      bins negative = { [$:-1] };
    148                                                    }
    149                                                    cross opcode, result_reg;
    150                                                 endgroup  
    151                                              
    152                                                 covergroup mcu_halfword_cg @(posedge clk);
    153                                                   coverpoint opcode {
    154                                                      bins instr[] = {LH, LHU};
    155                                                      //ignore_bins: others;
    156                                                    }
    157                                                    coverpoint result_reg {
    158                                                      bins positive = { [1:$] };
    159                                                      bins zero     = { 0 };
    160                                                      bins negative = { [$:-1] };
    161                                                    }
    162                                                    coverpoint offset {
    163                                                      bins offset[2] = {0, 2};
    164                                                      ignore_bins misaligned = {1, 3};
    165                                                    }
    166                                                    cross opcode, result_reg, offset;
    167                                                 endgroup  
    168                                              
    169                                                 covergroup mcu_byte_cg @(posedge clk);
    170                                                   coverpoint opcode {
    171                                                      bins instr[] = {LB, LBU};
    172                                                      //ignore_bins: others;
    173                                                    }
    174                                                    coverpoint result_reg {
    175                                                      bins positive = { [1:$] };
    176                                                      bins zero     = { 0 };
    177                                                      bins negative = { [$:-1] };
    178                                                    }
    179                                                    coverpoint offset {
    180                                                      bins offset[2] = {[0:3]};
    181                                                    }
    182                                                    cross opcode, result_reg, offset;
    183                                                 endgroup  
    184                                              
    185             1                          1        mcu_cg          mcu_cg_inst           = new();
    186             1                          1        mcu_halfword_cg mcu_halfword_cg_inst  = new();
    187             1                          1        mcu_byte_cg     mcu_byte_cg_inst      = new();
    188                                              
    189                                              endmodule

Toggle Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Toggles                        727       711        16    97.79%

================================Toggle Details================================

Toggle Coverage for File ../design_rtl/memory_ctrl.sv --

       Line                                   Node      1H->0L      0L->1H                          "Coverage"
--------------------------------------------------------------------------------------------------------------
          7                                    rst           1           1                              100.00 
          7                                    clk           1           1                              100.00 
          9                          instr.j.rd[4]           1           1                              100.00 
          9                          instr.j.rd[3]           1           1                              100.00 
          9                          instr.j.rd[2]           1           1                              100.00 
          9                          instr.j.rd[1]           1           1                              100.00 
          9                          instr.j.rd[0]           1           1                              100.00 
          9                     instr.j.opcode1[6]           1           1                              100.00 
          9                     instr.j.opcode1[5]           1           1                              100.00 
          9                     instr.j.opcode1[4]           1           1                              100.00 
          9                     instr.j.opcode1[3]           1           1                              100.00 
          9                     instr.j.opcode1[2]           1           1                              100.00 
          9                     instr.j.opcode1[1]           0           0                                0.00 
          9                     instr.j.opcode1[0]           0           0                                0.00 
          9                           instr.j.imm3           1           1                              100.00 
          9                        instr.j.imm2[7]           1           1                              100.00 
          9                        instr.j.imm2[6]           1           1                              100.00 
          9                        instr.j.imm2[5]           1           1                              100.00 
          9                        instr.j.imm2[4]           1           1                              100.00 
          9                        instr.j.imm2[3]           1           1                              100.00 
          9                        instr.j.imm2[2]           1           1                              100.00 
          9                        instr.j.imm2[1]           1           1                              100.00 
          9                        instr.j.imm2[0]           1           1                              100.00 
          9                           instr.j.imm1           1           1                              100.00 
          9                        instr.j.imm0[9]           1           1                              100.00 
          9                        instr.j.imm0[8]           1           1                              100.00 
          9                        instr.j.imm0[7]           1           1                              100.00 
          9                        instr.j.imm0[6]           1           1                              100.00 
          9                        instr.j.imm0[5]           1           1                              100.00 
          9                        instr.j.imm0[4]           1           1                              100.00 
          9                        instr.j.imm0[3]           1           1                              100.00 
          9                        instr.j.imm0[2]           1           1                              100.00 
          9                        instr.j.imm0[1]           1           1                              100.00 
          9                        instr.j.imm0[0]           1           1                              100.00 
         10                                 op3[9]           1           1                              100.00 
         10                                 op3[8]           1           1                              100.00 
         10                                 op3[7]           1           1                              100.00 
         10                                 op3[6]           1           1                              100.00 
         10                                 op3[5]           1           1                              100.00 
         10                                 op3[4]           1           1                              100.00 
         10                                 op3[3]           1           1                              100.00 
         10                                op3[31]           1           1                              100.00 
         10                                op3[30]           1           1                              100.00 
         10                                 op3[2]           1           1                              100.00 
         10                                op3[29]           1           1                              100.00 
         10                                op3[28]           1           1                              100.00 
         10                                op3[27]           1           1                              100.00 
         10                                op3[26]           1           1                              100.00 
         10                                op3[25]           1           1                              100.00 
         10                                op3[24]           1           1                              100.00 
         10                                op3[23]           1           1                              100.00 
         10                                op3[22]           1           1                              100.00 
         10                                op3[21]           1           1                              100.00 
         10                                op3[20]           1           1                              100.00 
         10                                 op3[1]           1           1                              100.00 
         10                                op3[19]           1           1                              100.00 
         10                                op3[18]           1           1                              100.00 
         10                                op3[17]           1           1                              100.00 
         10                                op3[16]           1           1                              100.00 
         10                                op3[15]           1           1                              100.00 
         10                                op3[14]           1           1                              100.00 
         10                                op3[13]           1           1                              100.00 
         10                                op3[12]           1           1                              100.00 
         10                                op3[11]           1           1                              100.00 
         10                                op3[10]           1           1                              100.00 
         10                                 op3[0]           1           1                              100.00 
         10                                 op2[9]           1           1                              100.00 
         10                                 op2[8]           1           1                              100.00 
         10                                 op2[7]           1           1                              100.00 
         10                                 op2[6]           1           1                              100.00 
         10                                 op2[5]           1           1                              100.00 
         10                                 op2[4]           1           1                              100.00 
         10                                 op2[3]           1           1                              100.00 
         10                                op2[31]           1           1                              100.00 
         10                                op2[30]           1           1                              100.00 
         10                                 op2[2]           1           1                              100.00 
         10                                op2[29]           1           1                              100.00 
         10                                op2[28]           1           1                              100.00 
         10                                op2[27]           1           1                              100.00 
         10                                op2[26]           1           1                              100.00 
         10                                op2[25]           1           1                              100.00 
         10                                op2[24]           1           1                              100.00 
         10                                op2[23]           1           1                              100.00 
         10                                op2[22]           1           1                              100.00 
         10                                op2[21]           1           1                              100.00 
         10                                op2[20]           1           1                              100.00 
         10                                 op2[1]           1           1                              100.00 
         10                                op2[19]           1           1                              100.00 
         10                                op2[18]           1           1                              100.00 
         10                                op2[17]           1           1                              100.00 
         10                                op2[16]           1           1                              100.00 
         10                                op2[15]           1           1                              100.00 
         10                                op2[14]           1           1                              100.00 
         10                                op2[13]           1           1                              100.00 
         10                                op2[12]           1           1                              100.00 
         10                                op2[11]           1           1                              100.00 
         10                                op2[10]           1           1                              100.00 
         10                                 op2[0]           1           1                              100.00 
         10                                 op1[9]           1           1                              100.00 
         10                                 op1[8]           1           1                              100.00 
         10                                 op1[7]           1           1                              100.00 
         10                                 op1[6]           1           1                              100.00 
         10                                 op1[5]           1           1                              100.00 
         10                                 op1[4]           1           1                              100.00 
         10                                 op1[3]           1           1                              100.00 
         10                                op1[31]           1           1                              100.00 
         10                                op1[30]           1           1                              100.00 
         10                                 op1[2]           1           1                              100.00 
         10                                op1[29]           1           1                              100.00 
         10                                op1[28]           1           1                              100.00 
         10                                op1[27]           1           1                              100.00 
         10                                op1[26]           1           1                              100.00 
         10                                op1[25]           1           1                              100.00 
         10                                op1[24]           1           1                              100.00 
         10                                op1[23]           1           1                              100.00 
         10                                op1[22]           1           1                              100.00 
         10                                op1[21]           1           1                              100.00 
         10                                op1[20]           1           1                              100.00 
         10                                 op1[1]           1           1                              100.00 
         10                                op1[19]           1           1                              100.00 
         10                                op1[18]           1           1                              100.00 
         10                                op1[17]           1           1                              100.00 
         10                                op1[16]           1           1                              100.00 
         10                                op1[15]           1           1                              100.00 
         10                                op1[14]           1           1                              100.00 
         10                                op1[13]           1           1                              100.00 
         10                                op1[12]           1           1                              100.00 
         10                                op1[11]           1           1                              100.00 
         10                                op1[10]           1           1                              100.00 
         10                                 op1[0]           1           1                              100.00 
         11                                 enable           1           1                              100.00 
         12                              result[9]           1           1                              100.00 
         12                              result[8]           1           1                              100.00 
         12                              result[7]           1           1                              100.00 
         12                              result[6]           1           1                              100.00 
         12                              result[5]           1           1                              100.00 
         12                              result[4]           1           1                              100.00 
         12                              result[3]           1           1                              100.00 
         12                             result[31]           1           1                              100.00 
         12                             result[30]           1           1                              100.00 
         12                              result[2]           1           1                              100.00 
         12                             result[29]           1           1                              100.00 
         12                             result[28]           1           1                              100.00 
         12                             result[27]           1           1                              100.00 
         12                             result[26]           1           1                              100.00 
         12                             result[25]           1           1                              100.00 
         12                             result[24]           1           1                              100.00 
         12                             result[23]           1           1                              100.00 
         12                             result[22]           1           1                              100.00 
         12                             result[21]           1           1                              100.00 
         12                             result[20]           1           1                              100.00 
         12                              result[1]           1           1                              100.00 
         12                             result[19]           1           1                              100.00 
         12                             result[18]           1           1                              100.00 
         12                             result[17]           1           1                              100.00 
         12                             result[16]           1           1                              100.00 
         12                             result[15]           1           1                              100.00 
         12                             result[14]           1           1                              100.00 
         12                             result[13]           1           1                              100.00 
         12                             result[12]           1           1                              100.00 
         12                             result[11]           1           1                              100.00 
         12                             result[10]           1           1                              100.00 
         12                              result[0]           1           1                              100.00 
         13                           result_valid           1           1                              100.00 
         15                             address[9]           1           1                              100.00 
         15                             address[8]           1           1                              100.00 
         15                             address[7]           1           1                              100.00 
         15                             address[6]           1           1                              100.00 
         15                             address[5]           1           1                              100.00 
         15                             address[4]           1           1                              100.00 
         15                             address[3]           1           1                              100.00 
         15                            address[31]           0           0                                0.00 
         15                            address[30]           0           0                                0.00 
         15                             address[2]           1           1                              100.00 
         15                            address[29]           1           1                              100.00 
         15                            address[28]           1           1                              100.00 
         15                            address[27]           1           1                              100.00 
         15                            address[26]           1           1                              100.00 
         15                            address[25]           1           1                              100.00 
         15                            address[24]           1           1                              100.00 
         15                            address[23]           1           1                              100.00 
         15                            address[22]           1           1                              100.00 
         15                            address[21]           1           1                              100.00 
         15                            address[20]           1           1                              100.00 
         15                             address[1]           1           1                              100.00 
         15                            address[19]           1           1                              100.00 
         15                            address[18]           1           1                              100.00 
         15                            address[17]           1           1                              100.00 
         15                            address[16]           1           1                              100.00 
         15                            address[15]           1           1                              100.00 
         15                            address[14]           1           1                              100.00 
         15                            address[13]           1           1                              100.00 
         15                            address[12]           1           1                              100.00 
         15                            address[11]           1           1                              100.00 
         15                            address[10]           1           1                              100.00 
         15                             address[0]           1           1                              100.00 
         16                            read_enable           1           1                              100.00 
         17                           read_data[9]           1           1                              100.00 
         17                           read_data[8]           1           1                              100.00 
         17                           read_data[7]           1           1                              100.00 
         17                           read_data[6]           1           1                              100.00 
         17                           read_data[5]           1           1                              100.00 
         17                           read_data[4]           1           1                              100.00 
         17                           read_data[3]           1           1                              100.00 
         17                          read_data[31]           1           1                              100.00 
         17                          read_data[30]           1           1                              100.00 
         17                           read_data[2]           1           1                              100.00 
         17                          read_data[29]           1           1                              100.00 
         17                          read_data[28]           1           1                              100.00 
         17                          read_data[27]           1           1                              100.00 
         17                          read_data[26]           1           1                              100.00 
         17                          read_data[25]           1           1                              100.00 
         17                          read_data[24]           1           1                              100.00 
         17                          read_data[23]           1           1                              100.00 
         17                          read_data[22]           1           1                              100.00 
         17                          read_data[21]           1           1                              100.00 
         17                          read_data[20]           1           1                              100.00 
         17                           read_data[1]           1           1                              100.00 
         17                          read_data[19]           1           1                              100.00 
         17                          read_data[18]           1           1                              100.00 
         17                          read_data[17]           1           1                              100.00 
         17                          read_data[16]           1           1                              100.00 
         17                          read_data[15]           1           1                              100.00 
         17                          read_data[14]           1           1                              100.00 
         17                          read_data[13]           1           1                              100.00 
         17                          read_data[12]           1           1                              100.00 
         17                          read_data[11]           1           1                              100.00 
         17                          read_data[10]           1           1                              100.00 
         17                           read_data[0]           1           1                              100.00 
         18                               read_ack           0           0                                0.00 
         19                           write_enable           1           1                              100.00 
         20                   write_byte_enable[3]           1           1                              100.00 
         20                   write_byte_enable[2]           1           1                              100.00 
         20                   write_byte_enable[1]           1           1                              100.00 
         20                   write_byte_enable[0]           1           1                              100.00 
         21                          write_data[9]           1           1                              100.00 
         21                          write_data[8]           1           1                              100.00 
         21                          write_data[7]           1           1                              100.00 
         21                          write_data[6]           1           1                              100.00 
         21                          write_data[5]           1           1                              100.00 
         21                          write_data[4]           1           1                              100.00 
         21                          write_data[3]           1           1                              100.00 
         21                         write_data[31]           1           1                              100.00 
         21                         write_data[30]           1           1                              100.00 
         21                          write_data[2]           1           1                              100.00 
         21                         write_data[29]           1           1                              100.00 
         21                         write_data[28]           1           1                              100.00 
         21                         write_data[27]           1           1                              100.00 
         21                         write_data[26]           1           1                              100.00 
         21                         write_data[25]           1           1                              100.00 
         21                         write_data[24]           1           1                              100.00 
         21                         write_data[23]           1           1                              100.00 
         21                         write_data[22]           1           1                              100.00 
         21                         write_data[21]           1           1                              100.00 
         21                         write_data[20]           1           1                              100.00 
         21                          write_data[1]           1           1                              100.00 
         21                         write_data[19]           1           1                              100.00 
         21                         write_data[18]           1           1                              100.00 
         21                         write_data[17]           1           1                              100.00 
         21                         write_data[16]           1           1                              100.00 
         21                         write_data[15]           1           1                              100.00 
         21                         write_data[14]           1           1                              100.00 
         21                         write_data[13]           1           1                              100.00 
         21                         write_data[12]           1           1                              100.00 
         21                         write_data[11]           1           1                              100.00 
         21                         write_data[10]           1           1                              100.00 
         21                          write_data[0]           1           1                              100.00 
         22                              write_ack           0           0                                0.00 
         31                                  state               ENUM type       Value       Count 
                                                                ADDR_PHASE           1      100.00 
                                                                DATA_PHASE           1      100.00 
                                                                      DONE           1      100.00 
         31                             next_state               ENUM type       Value       Count 
                                                                ADDR_PHASE           1      100.00 
                                                                DATA_PHASE           1      100.00 
                                                                      DONE           1      100.00 
         32                               write_op           1           1                              100.00 
         32                                read_op           1           1                              100.00 
         33                            write_instr           0           0                                0.00 
         33                             read_instr           0           0                                0.00 
         34                                sign_ex           1           1                              100.00 
         35                              offset[1]           1           1                              100.00 
         35                              offset[0]           1           1                              100.00 
         36                                size[2]           1           1                              100.00 
         36                                size[1]           1           1                              100.00 
         36                                size[0]           1           1                              100.00 
         37                               wdata[9]           1           1                              100.00 
         37                               wdata[8]           1           1                              100.00 
         37                               wdata[7]           1           1                              100.00 
         37                               wdata[6]           1           1                              100.00 
         37                               wdata[5]           1           1                              100.00 
         37                               wdata[4]           1           1                              100.00 
         37                               wdata[3]           1           1                              100.00 
         37                              wdata[31]           1           1                              100.00 
         37                              wdata[30]           1           1                              100.00 
         37                               wdata[2]           1           1                              100.00 
         37                              wdata[29]           1           1                              100.00 
         37                              wdata[28]           1           1                              100.00 
         37                              wdata[27]           1           1                              100.00 
         37                              wdata[26]           1           1                              100.00 
         37                              wdata[25]           1           1                              100.00 
         37                              wdata[24]           1           1                              100.00 
         37                              wdata[23]           1           1                              100.00 
         37                              wdata[22]           1           1                              100.00 
         37                              wdata[21]           1           1                              100.00 
         37                              wdata[20]           1           1                              100.00 
         37                               wdata[1]           1           1                              100.00 
         37                              wdata[19]           1           1                              100.00 
         37                              wdata[18]           1           1                              100.00 
         37                              wdata[17]           1           1                              100.00 
         37                              wdata[16]           1           1                              100.00 
         37                              wdata[15]           1           1                              100.00 
         37                              wdata[14]           1           1                              100.00 
         37                              wdata[13]           1           1                              100.00 
         37                              wdata[12]           1           1                              100.00 
         37                              wdata[11]           1           1                              100.00 
         37                              wdata[10]           1           1                              100.00 
         37                               wdata[0]           1           1                              100.00 
         38                          result_reg[9]           1           1                              100.00 
         38                          result_reg[8]           1           1                              100.00 
         38                          result_reg[7]           1           1                              100.00 
         38                          result_reg[6]           1           1                              100.00 
         38                          result_reg[5]           1           1                              100.00 
         38                          result_reg[4]           1           1                              100.00 
         38                          result_reg[3]           1           1                              100.00 
         38                         result_reg[31]           1           1                              100.00 
         38                         result_reg[30]           1           1                              100.00 
         38                          result_reg[2]           1           1                              100.00 
         38                         result_reg[29]           1           1                              100.00 
         38                         result_reg[28]           1           1                              100.00 
         38                         result_reg[27]           1           1                              100.00 
         38                         result_reg[26]           1           1                              100.00 
         38                         result_reg[25]           1           1                              100.00 
         38                         result_reg[24]           1           1                              100.00 
         38                         result_reg[23]           1           1                              100.00 
         38                         result_reg[22]           1           1                              100.00 
         38                         result_reg[21]           1           1                              100.00 
         38                         result_reg[20]           1           1                              100.00 
         38                          result_reg[1]           1           1                              100.00 
         38                         result_reg[19]           1           1                              100.00 
         38                         result_reg[18]           1           1                              100.00 
         38                         result_reg[17]           1           1                              100.00 
         38                         result_reg[16]           1           1                              100.00 
         38                         result_reg[15]           1           1                              100.00 
         38                         result_reg[14]           1           1                              100.00 
         38                         result_reg[13]           1           1                              100.00 
         38                         result_reg[12]           1           1                              100.00 
         38                         result_reg[11]           1           1                              100.00 
         38                         result_reg[10]           1           1                              100.00 
         38                          result_reg[0]           1           1                              100.00 
        136                                 opcode               ENUM type       Value       Count 
                                                                      ADDI           4      100.00 
                                                                      STLI           5      100.00 
                                                                     STLUI           6      100.00 
                                                                      ANDI           1      100.00 
                                                                       ORI          10      100.00 
                                                                      XORI           7      100.00 
                                                                      SLLI           6      100.00 
                                                                      SRLI           6      100.00 
                                                                      SRAI           7      100.00 
                                                                       LUI           4      100.00 
                                                                     AUIPC           2      100.00 
                                                                       ADD           9      100.00 
                                                                       SUB           7      100.00 
                                                                       STL           7      100.00 
                                                                      STLU           8      100.00 
                                                                       AND           6      100.00 
                                                                        OR          10      100.00 
                                                                       XOR           7      100.00 
                                                                       SLL           4      100.00 
                                                                       SRL           4      100.00 
                                                                       SRA           5      100.00 
                                                                       JAL           7      100.00 
                                                                      JALR           9      100.00 
                                                                       BEQ           4      100.00 
                                                                       BNE           7      100.00 
                                                                       BLT           6      100.00 
                                                                      BLTU           6      100.00 
                                                                       BGE           7      100.00 
                                                                      BGEU           5      100.00 
                                                                        LW           5      100.00 
                                                                        LH           3      100.00 
                                                                        LB           6      100.00 
                                                                       LHU           6      100.00 
                                                                       LBU           4      100.00 
                                                                        SW           2      100.00 
                                                                        SH           7      100.00 
                                                                        SB           4      100.00 

Total Node Count     =        385 
Toggled Node Count   =        377 
Untoggled Node Count =          8 

Toggle Coverage      =      97.79% (711 of 727 bins)

=================================================================================
=== File: ../design_rtl/riscv_rv32i.sv
=================================================================================
Branch Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Branches                        32        28         4    87.50%

================================Branch Details================================

Branch Coverage for file ../design_rtl/riscv_rv32i.sv --

------------------------------------IF Branch------------------------------------
    45                                     59999     Count coming in to IF
    45              1                    ***0***        assign halted = (execute & (instr == EBREAK)) ? 1 : 0;
    45              2                      59999        assign halted = (execute & (instr == EBREAK)) ? 1 : 0;
Branch totals: 1 hit of 2 branches = 50.00%

------------------------------------IF Branch------------------------------------
    48                                     80000     Count coming in to IF
    48              1                          2          if (rst) state <= FETCH;
    49              1                      79998          else     state <= next_state;
Branch totals: 2 hits of 2 branches = 100.00%

------------------------------------CASE Branch------------------------------------
    53                                    100000     Count coming in to CASE
    54              1                      20001            FETCH:    next_state = DECODE;
    55              1                      39998            DECODE:   next_state = EXECUTE;
    56              1                      19999            EXECUTE:  if (instr == EBREAK) next_state = HALT;
    58              1                      19999            WRITE_BACK: if (data_read_rdy) next_state = FETCH;
    59              1                    ***0***            HALT:     next_state = HALT;
                                               3     All False Count
Branch totals: 5 hits of 6 branches = 83.33%

------------------------------------IF Branch------------------------------------
    56                                     19999     Count coming in to IF
    56              2                    ***0***            EXECUTE:  if (instr == EBREAK) next_state = HALT;
    57              1                      19999                      else                 next_state = WRITE_BACK;
Branch totals: 1 hit of 2 branches = 50.00%

------------------------------------IF Branch------------------------------------
    58                                     19999     Count coming in to IF
    58              2                      19999            WRITE_BACK: if (data_read_rdy) next_state = FETCH;
                                         ***0***     All False Count
Branch totals: 1 hit of 2 branches = 50.00%

------------------------------------IF Branch------------------------------------
    63                                     79998     Count coming in to IF
    63              1                      20000        assign fetch      = (state == FETCH)      ? 1 : 0;
    63              2                      59998        assign fetch      = (state == FETCH)      ? 1 : 0;
Branch totals: 2 hits of 2 branches = 100.00%

------------------------------------IF Branch------------------------------------
    64                                     79998     Count coming in to IF
    64              1                      20000        assign decode     = (state == DECODE)     ? 1 : 0;
    64              2                      59998        assign decode     = (state == DECODE)     ? 1 : 0;
Branch totals: 2 hits of 2 branches = 100.00%

------------------------------------IF Branch------------------------------------
    65                                     79998     Count coming in to IF
    65              1                      19999        assign execute    = (state == EXECUTE)    ? 1 : 0;
    65              2                      59999        assign execute    = (state == EXECUTE)    ? 1 : 0;
Branch totals: 2 hits of 2 branches = 100.00%

------------------------------------IF Branch------------------------------------
    66                                     79998     Count coming in to IF
    66              1                      19999        assign write_back = (state == WRITE_BACK) ? 1 : 0;
    66              2                      59999        assign write_back = (state == WRITE_BACK) ? 1 : 0;
Branch totals: 2 hits of 2 branches = 100.00%

------------------------------------IF Branch------------------------------------
    130                                    78510     Count coming in to IF
    130             1                          4          if (rst) begin
    134             1                      78506          end else begin
Branch totals: 2 hits of 2 branches = 100.00%

------------------------------------IF Branch------------------------------------
    135                                    78506     Count coming in to IF
    135             1                      15345            if (write_back & (rd != 0)) begin
                                           63161     All False Count
Branch totals: 2 hits of 2 branches = 100.00%

------------------------------------IF Branch------------------------------------
    141                                    33954     Count coming in to IF
    141             1                      23004        assign result = is_alu_op(instr)    ? alu_result :
    142             1                      10950                        is_memory_op(instr) ? mcu_result :
Branch totals: 2 hits of 2 branches = 100.00%

------------------------------------IF Branch------------------------------------
    142                                    10950     Count coming in to IF
    142             2                       6724                        is_memory_op(instr) ? mcu_result :
    143             1                       4226                        is_branch_op(instr) ? bcu_result : '0;
Branch totals: 2 hits of 2 branches = 100.00%

------------------------------------IF Branch------------------------------------
    143                                     4226     Count coming in to IF
    143             2                       4224                        is_branch_op(instr) ? bcu_result : '0;
    143             3                          2                        is_branch_op(instr) ? bcu_result : '0;
Branch totals: 2 hits of 2 branches = 100.00%


Condition Coverage:
    Enabled Coverage              Bins   Covered    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Conditions                       9         6         3    66.66%

================================Condition Details================================

Condition Coverage for file ../design_rtl/riscv_rv32i.sv --

----------------Focused Condition View-------------------
Line       45 Item    1  (execute & (instr == EBREAK))
Condition totals: 0 of 2 input terms covered = 0.00%

         Input Term   Covered  Reason for no coverage   Hint
        -----------  --------  -----------------------  --------------
            execute         N  No hits                  Hit '_0' and '_1'
  (instr == EBREAK)         N  '_1' not hit             Hit '_1'

     Rows:       Hits  FEC Target            Non-masking condition(s)      
 ---------  ---------  --------------------  -------------------------     
  Row   1:    ***0***  execute_0             (instr == EBREAK)             
  Row   2:    ***0***  execute_1             (instr == EBREAK)             
  Row   3:          1  (instr == EBREAK)_0   execute                       
  Row   4:    ***0***  (instr == EBREAK)_1   execute                       

----------------Focused Condition View-------------------
Line       56 Item    1  (instr == EBREAK)
Condition totals: 0 of 1 input term covered = 0.00%

         Input Term   Covered  Reason for no coverage   Hint
        -----------  --------  -----------------------  --------------
  (instr == EBREAK)         N  '_1' not hit             Hit '_1'

     Rows:       Hits  FEC Target            Non-masking condition(s)      
 ---------  ---------  --------------------  -------------------------     
  Row   1:          1  (instr == EBREAK)_0   -                             
  Row   2:    ***0***  (instr == EBREAK)_1   -                             

----------------Focused Condition View-------------------
Line       63 Item    1  (state == FETCH)
Condition totals: 1 of 1 input term covered = 100.00%

        Input Term   Covered  Reason for no coverage   Hint
       -----------  --------  -----------------------  --------------
  (state == FETCH)         Y

     Rows:       Hits  FEC Target            Non-masking condition(s)      
 ---------  ---------  --------------------  -------------------------     
  Row   1:          1  (state == FETCH)_0    -                             
  Row   2:          1  (state == FETCH)_1    -                             

----------------Focused Condition View-------------------
Line       64 Item    1  (state == DECODE)
Condition totals: 1 of 1 input term covered = 100.00%

         Input Term   Covered  Reason for no coverage   Hint
        -----------  --------  -----------------------  --------------
  (state == DECODE)         Y

     Rows:       Hits  FEC Target            Non-masking condition(s)      
 ---------  ---------  --------------------  -------------------------     
  Row   1:          1  (state == DECODE)_0   -                             
  Row   2:          1  (state == DECODE)_1   -                             

----------------Focused Condition View-------------------
Line       65 Item    1  (state == EXECUTE)
Condition totals: 1 of 1 input term covered = 100.00%

          Input Term   Covered  Reason for no coverage   Hint
         -----------  --------  -----------------------  --------------
  (state == EXECUTE)         Y

     Rows:       Hits  FEC Target            Non-masking condition(s)      
 ---------  ---------  --------------------  -------------------------     
  Row   1:          1  (state == EXECUTE)_0  -                             
  Row   2:          1  (state == EXECUTE)_1  -                             

----------------Focused Condition View-------------------
Line       66 Item    1  (state == WRITE_BACK)
Condition totals: 1 of 1 input term covered = 100.00%

             Input Term   Covered  Reason for no coverage   Hint
            -----------  --------  -----------------------  --------------
  (state == WRITE_BACK)         Y

     Rows:       Hits  FEC Target               Non-masking condition(s)      
 ---------  ---------  --------------------     -------------------------     
  Row   1:          1  (state == WRITE_BACK)_0  -                             
  Row   2:          1  (state == WRITE_BACK)_1  -                             

----------------Focused Condition View-------------------
Line       135 Item    1  (write_back & (rd != 0))
Condition totals: 2 of 2 input terms covered = 100.00%

  Input Term   Covered  Reason for no coverage   Hint
 -----------  --------  -----------------------  --------------
  write_back         Y
   (rd != 0)         Y

     Rows:       Hits  FEC Target            Non-masking condition(s)      
 ---------  ---------  --------------------  -------------------------     
  Row   1:          1  write_back_0          (rd != 0)                     
  Row   2:          1  write_back_1          (rd != 0)                     
  Row   3:          1  (rd != 0)_0           write_back                    
  Row   4:          1  (rd != 0)_1           write_back                    


FSM Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    FSM States                       5         4         1    80.00%
    FSM Transitions                  8         4         4    50.00%

================================FSM Details================================

FSM Coverage for file ../design_rtl/riscv_rv32i.sv --

FSM_ID: state
    Current State Object : state
    ----------------------
    State Value MapInfo :
    ---------------------
Line          State Name               Value
----          ----------               -----
  54               FETCH                   0
  55              DECODE                   1
  56             EXECUTE                   2
  58          WRITE_BACK                   3
  48                HALT                   4
    Covered States :
    ----------------
                   State           Hit_count
                   -----           ---------
                   FETCH               20001          
                  DECODE               20000          
                 EXECUTE               19999          
              WRITE_BACK               19999          
    Covered Transitions :
    ---------------------
Line            Trans_ID           Hit_count          Transition          
----            --------           ---------          ----------          
  54                   0               20000          FETCH -> DECODE               
  55                   1               19999          DECODE -> EXECUTE             
  57                   3               19999          EXECUTE -> WRITE_BACK          
  58                   6               19999          WRITE_BACK -> FETCH           
    Uncovered States :
    ------------------
                   State
                   -----
                    HALT
    Uncovered Transitions :
    -----------------------
Line            Trans_ID          Transition          
----            --------          ----------          
  48                   2          DECODE -> FETCH     
  56                   4          EXECUTE -> HALT     
  48                   5          EXECUTE -> FETCH    
  48                   7          HALT -> FETCH       


    Summary                       Bins      Hits    Misses  Coverage
    -------                       ----      ----    ------  --------
        FSM States                   5         4         1    80.00%
        FSM Transitions              8         4         4    50.00%
Statement Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Statements                      21        19         2    90.47%

================================Statement Details================================

Statement Coverage for file ../design_rtl/riscv_rv32i.sv --

    1                                                import opcodes::*;
    2                                                
    3                                                module riscv_rv32i #(
    4                                                     parameter BROKEN="NONE"
    5                                                  )(
    6                                                   input  logic         clk, rst,
    7                                                
    8                                                   // instruction memory interface
    9                                                
    10                                                  output logic [31:0]  instruction_address,
    11                                                  output logic         instruction_enable,
    12                                                  input  var instruction_t instr,
    13                                               
    14                                                  // data memory interface
    15                                               
    16                                                  output logic [31:0]  data_address,
    17                                                  output logic         data_read_enable,
    18                                                  input  logic [31:0]  data_read_data,
    19                                                  input  logic         data_read_rdy,
    20                                                  output logic         data_write_enable,
    21                                                  output logic [3:0]   data_write_byte_enable,
    22                                                  output logic [31:0]  data_write_data,
    23                                                  input  logic         data_write_rdy,
    24                                                  
    25                                                  // halt signal -- asserted on execution of EBREAK 
    26                                               
    27                                                  output logic         halted);
    28                                               
    29                                                  logic fetch, decode, execute, write_back;
    30                                                  logic executed;
    31                                               
    32                                                  typedef enum logic [2:0] {FETCH, DECODE, EXECUTE, WRITE_BACK, HALT} stage_t;
    33                                               
    34                                                  stage_t state, next_state;
    35                                               
    36                                                  register_t register_bank[32];
    37                                                  register_t pc, op1, op2, op3;
    38                                                  register_t alu_result, mcu_result, bcu_result, result;
    39                                                  register_num_t rd;
    40                                               
    41                                                  logic [5:0] i;
    42                                               
    43                                                  assign instruction_address = pc;
    44                                                  assign instruction_enable = fetch;
    45              1                      60000        assign halted = (execute & (instr == EBREAK)) ? 1 : 0;
    46                                               
    47              1                      80000        always_ff @(posedge clk) begin
    48              1                          2          if (rst) state <= FETCH;
    49              1                      79998          else     state <= next_state;
    50                                                  end
    51                                               
    52              1                     100000        always_comb begin
    53                                                    case (state) 
    54              1                      20001            FETCH:    next_state = DECODE;
    55              1                      39998            DECODE:   next_state = EXECUTE;
    56              1                    ***0***            EXECUTE:  if (instr == EBREAK) next_state = HALT;
    57              1                      19999                      else                 next_state = WRITE_BACK;
    58              1                      19999            WRITE_BACK: if (data_read_rdy) next_state = FETCH;
    59              1                    ***0***            HALT:     next_state = HALT;
    60                                                    endcase
    61                                                  end
    62                                               
    63              1                      79999        assign fetch      = (state == FETCH)      ? 1 : 0;
    64              1                      79999        assign decode     = (state == DECODE)     ? 1 : 0;
    65              1                      79999        assign execute    = (state == EXECUTE)    ? 1 : 0;
    66              1                      79999        assign write_back = (state == WRITE_BACK) ? 1 : 0;
    67                                               
    68                                                  decoder #(.broken(BROKEN)) u_decoder(
    69                                                    .clk           (clk),
    70                                                    .rst           (rst),
    71                                                 
    72                                                    .enable        (decode),
    73                                                    .instr         (instr),
    74                                                    .register_bank (register_bank),
    75                                                    .op1           (op1),
    76                                                    .op2           (op2),
    77                                                    .op3           (op3),
    78                                                    .rd            (rd)
    79                                                  );
    80                                               
    81                                                  alu #(.broken(BROKEN)) u_alu(
    82                                                    .clk            (clk),
    83                                                    .rst            (rst),
    84                                                
    85                                                    .instr          (instr),
    86                                                    .op1            (op1),
    87                                                    .op2            (op2),
    88                                                    .enable         (execute),
    89                                                    .instr_exec     (executed),
    90                                                    .result         (alu_result)
    91                                                  );
    92                                               
    93                                                  branch_unit #(.broken(BROKEN)) u_branch_unit(
    94                                                    .clk            (clk),
    95                                                    .rst            (rst),
    96                                               
    97                                                    .instr          (instr),
    98                                                    .op1            (op1),
    99                                                    .op2            (op2),
    100                                                   .op3            (op3),
    101                                                   .enable         (execute),
    102                                                   .pc_out         (pc),
    103                                              
    104                                                   .ret_addr       (bcu_result)
    105                                                 );
    106                                                 
    107                                                 memory_ctrl #(.broken(BROKEN)) u_memory_ctrl(
    108                                                   .clk            (clk),
    109                                                   .rst            (rst),
    110                                              
    111                                                   .instr          (instr),
    112                                                   .op1            (op1),
    113                                                   .op2            (op2),
    114                                                   .op3            (op3),
    115                                                   .enable         (execute),
    116                                                   .result         (mcu_result),
    117                                                   .result_valid   (),
    118                                              
    119                                                   .address        (data_address),
    120                                                   .read_enable    (data_read_enable),
    121                                                   .read_data      (data_read_data),
    122                                                   .read_ack       (data_read_rdy),
    123                                                   .write_enable   (data_write_enable),
    124                                                   .write_byte_enable (data_write_byte_enable),
    125                                                   .write_data     (data_write_data),
    126                                                   .write_ack      (data_write_rdy)
    127                                                 );
    128                                              
    129             1                      78510        always @(posedge clk) begin
    130                                                   if (rst) begin
    131             1                          4            for (i=0; i<32; i++) begin
    131             2                        128     
    132             1                        128              register_bank[i] <= '0;
    133                                                     end
    134                                                   end else begin
    135                                                     if (write_back & (rd != 0)) begin
    136             1                      15345              register_bank[rd] <= result;
    137                                                     end
    138                                                   end
    139                                                 end
    140                                              
    141             1                      33954        assign result = is_alu_op(instr)    ? alu_result :
    142                                                                 is_memory_op(instr) ? mcu_result :
    143                                                                 is_branch_op(instr) ? bcu_result : '0;
    144                                              
    145                                              endmodule

Toggle Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Toggles                        898       678       220    75.50%

================================Toggle Details================================

Toggle Coverage for File ../design_rtl/riscv_rv32i.sv --

       Line                                   Node      1H->0L      0L->1H                          "Coverage"
--------------------------------------------------------------------------------------------------------------
          6                                    rst           1           1                              100.00 
          6                                    clk           1           1                              100.00 
         10                 instruction_address[9]           0           0                                0.00 
         10                 instruction_address[8]           0           0                                0.00 
         10                 instruction_address[7]           0           0                                0.00 
         10                 instruction_address[6]           0           0                                0.00 
         10                 instruction_address[5]           0           0                                0.00 
         10                 instruction_address[4]           0           0                                0.00 
         10                 instruction_address[3]           0           0                                0.00 
         10                instruction_address[31]           0           0                                0.00 
         10                instruction_address[30]           0           0                                0.00 
         10                 instruction_address[2]           0           0                                0.00 
         10                instruction_address[29]           0           0                                0.00 
         10                instruction_address[28]           0           0                                0.00 
         10                instruction_address[27]           0           0                                0.00 
         10                instruction_address[26]           0           0                                0.00 
         10                instruction_address[25]           0           0                                0.00 
         10                instruction_address[24]           0           0                                0.00 
         10                instruction_address[23]           0           0                                0.00 
         10                instruction_address[22]           0           0                                0.00 
         10                instruction_address[21]           0           0                                0.00 
         10                instruction_address[20]           0           0                                0.00 
         10                 instruction_address[1]           0           0                                0.00 
         10                instruction_address[19]           0           0                                0.00 
         10                instruction_address[18]           0           0                                0.00 
         10                instruction_address[17]           0           0                                0.00 
         10                instruction_address[16]           0           0                                0.00 
         10                instruction_address[15]           0           0                                0.00 
         10                instruction_address[14]           0           0                                0.00 
         10                instruction_address[13]           0           0                                0.00 
         10                instruction_address[12]           0           0                                0.00 
         10                instruction_address[11]           0           0                                0.00 
         10                instruction_address[10]           0           0                                0.00 
         10                 instruction_address[0]           0           0                                0.00 
         11                     instruction_enable           1           1                              100.00 
         12                               instr[9]           1           1                              100.00 
         12                               instr[8]           1           1                              100.00 
         12                               instr[7]           1           1                              100.00 
         12                               instr[6]           1           1                              100.00 
         12                               instr[5]           1           1                              100.00 
         12                               instr[4]           1           1                              100.00 
         12                               instr[3]           1           1                              100.00 
         12                              instr[31]           1           1                              100.00 
         12                              instr[30]           1           1                              100.00 
         12                               instr[2]           1           1                              100.00 
         12                              instr[29]           1           1                              100.00 
         12                              instr[28]           1           1                              100.00 
         12                              instr[27]           1           1                              100.00 
         12                              instr[26]           1           1                              100.00 
         12                              instr[25]           1           1                              100.00 
         12                              instr[24]           1           1                              100.00 
         12                              instr[23]           1           1                              100.00 
         12                              instr[22]           1           1                              100.00 
         12                              instr[21]           1           1                              100.00 
         12                              instr[20]           1           1                              100.00 
         12                               instr[1]           0           0                                0.00 
         12                              instr[19]           1           1                              100.00 
         12                              instr[18]           1           1                              100.00 
         12                              instr[17]           1           1                              100.00 
         12                              instr[16]           1           1                              100.00 
         12                              instr[15]           1           1                              100.00 
         12                              instr[14]           1           1                              100.00 
         12                              instr[13]           1           1                              100.00 
         12                              instr[12]           1           1                              100.00 
         12                              instr[11]           1           1                              100.00 
         12                              instr[10]           1           1                              100.00 
         12                               instr[0]           0           0                                0.00 
         16                        data_address[9]           1           1                              100.00 
         16                        data_address[8]           1           1                              100.00 
         16                        data_address[7]           1           1                              100.00 
         16                        data_address[6]           1           1                              100.00 
         16                        data_address[5]           1           1                              100.00 
         16                        data_address[4]           1           1                              100.00 
         16                        data_address[3]           1           1                              100.00 
         16                       data_address[31]           0           0                                0.00 
         16                       data_address[30]           0           0                                0.00 
         16                        data_address[2]           1           1                              100.00 
         16                       data_address[29]           1           1                              100.00 
         16                       data_address[28]           1           1                              100.00 
         16                       data_address[27]           1           1                              100.00 
         16                       data_address[26]           1           1                              100.00 
         16                       data_address[25]           1           1                              100.00 
         16                       data_address[24]           1           1                              100.00 
         16                       data_address[23]           1           1                              100.00 
         16                       data_address[22]           1           1                              100.00 
         16                       data_address[21]           1           1                              100.00 
         16                       data_address[20]           1           1                              100.00 
         16                        data_address[1]           1           1                              100.00 
         16                       data_address[19]           1           1                              100.00 
         16                       data_address[18]           1           1                              100.00 
         16                       data_address[17]           1           1                              100.00 
         16                       data_address[16]           1           1                              100.00 
         16                       data_address[15]           1           1                              100.00 
         16                       data_address[14]           1           1                              100.00 
         16                       data_address[13]           1           1                              100.00 
         16                       data_address[12]           1           1                              100.00 
         16                       data_address[11]           1           1                              100.00 
         16                       data_address[10]           1           1                              100.00 
         16                        data_address[0]           1           1                              100.00 
         17                       data_read_enable           1           1                              100.00 
         18                      data_read_data[9]           1           1                              100.00 
         18                      data_read_data[8]           1           1                              100.00 
         18                      data_read_data[7]           1           1                              100.00 
         18                      data_read_data[6]           1           1                              100.00 
         18                      data_read_data[5]           1           1                              100.00 
         18                      data_read_data[4]           1           1                              100.00 
         18                      data_read_data[3]           1           1                              100.00 
         18                     data_read_data[31]           1           1                              100.00 
         18                     data_read_data[30]           1           1                              100.00 
         18                      data_read_data[2]           1           1                              100.00 
         18                     data_read_data[29]           1           1                              100.00 
         18                     data_read_data[28]           1           1                              100.00 
         18                     data_read_data[27]           1           1                              100.00 
         18                     data_read_data[26]           1           1                              100.00 
         18                     data_read_data[25]           1           1                              100.00 
         18                     data_read_data[24]           1           1                              100.00 
         18                     data_read_data[23]           1           1                              100.00 
         18                     data_read_data[22]           1           1                              100.00 
         18                     data_read_data[21]           1           1                              100.00 
         18                     data_read_data[20]           1           1                              100.00 
         18                      data_read_data[1]           1           1                              100.00 
         18                     data_read_data[19]           1           1                              100.00 
         18                     data_read_data[18]           1           1                              100.00 
         18                     data_read_data[17]           1           1                              100.00 
         18                     data_read_data[16]           1           1                              100.00 
         18                     data_read_data[15]           1           1                              100.00 
         18                     data_read_data[14]           1           1                              100.00 
         18                     data_read_data[13]           1           1                              100.00 
         18                     data_read_data[12]           1           1                              100.00 
         18                     data_read_data[11]           1           1                              100.00 
         18                     data_read_data[10]           1           1                              100.00 
         18                      data_read_data[0]           1           1                              100.00 
         19                          data_read_rdy           0           0                                0.00 
         20                      data_write_enable           1           1                              100.00 
         21              data_write_byte_enable[3]           1           1                              100.00 
         21              data_write_byte_enable[2]           1           1                              100.00 
         21              data_write_byte_enable[1]           1           1                              100.00 
         21              data_write_byte_enable[0]           1           1                              100.00 
         22                     data_write_data[9]           1           1                              100.00 
         22                     data_write_data[8]           1           1                              100.00 
         22                     data_write_data[7]           1           1                              100.00 
         22                     data_write_data[6]           1           1                              100.00 
         22                     data_write_data[5]           1           1                              100.00 
         22                     data_write_data[4]           1           1                              100.00 
         22                     data_write_data[3]           1           1                              100.00 
         22                    data_write_data[31]           1           1                              100.00 
         22                    data_write_data[30]           1           1                              100.00 
         22                     data_write_data[2]           1           1                              100.00 
         22                    data_write_data[29]           1           1                              100.00 
         22                    data_write_data[28]           1           1                              100.00 
         22                    data_write_data[27]           1           1                              100.00 
         22                    data_write_data[26]           1           1                              100.00 
         22                    data_write_data[25]           1           1                              100.00 
         22                    data_write_data[24]           1           1                              100.00 
         22                    data_write_data[23]           1           1                              100.00 
         22                    data_write_data[22]           1           1                              100.00 
         22                    data_write_data[21]           1           1                              100.00 
         22                    data_write_data[20]           1           1                              100.00 
         22                     data_write_data[1]           1           1                              100.00 
         22                    data_write_data[19]           1           1                              100.00 
         22                    data_write_data[18]           1           1                              100.00 
         22                    data_write_data[17]           1           1                              100.00 
         22                    data_write_data[16]           1           1                              100.00 
         22                    data_write_data[15]           1           1                              100.00 
         22                    data_write_data[14]           1           1                              100.00 
         22                    data_write_data[13]           1           1                              100.00 
         22                    data_write_data[12]           1           1                              100.00 
         22                    data_write_data[11]           1           1                              100.00 
         22                    data_write_data[10]           1           1                              100.00 
         22                     data_write_data[0]           1           1                              100.00 
         23                         data_write_rdy           0           0                                0.00 
         27                                 halted           0           0                                0.00 
         29                             write_back           1           1                              100.00 
         29                                  fetch           1           1                              100.00 
         29                                execute           1           1                              100.00 
         29                                 decode           1           1                              100.00 
         30                               executed           1           1                              100.00 
         34                                  state               ENUM type       Value       Count 
                                                                     FETCH       20000      100.00 
                                                                    DECODE       19999      100.00 
                                                                   EXECUTE       19999      100.00 
                                                                WRITE_BACK       19999      100.00 
                                                                      HALT           0        0.00 
         34                             next_state               ENUM type       Value       Count 
                                                                     FETCH       19999      100.00 
                                                                    DECODE       20000      100.00 
                                                                   EXECUTE       19999      100.00 
                                                                WRITE_BACK       19999      100.00 
                                                                      HALT           0        0.00 
         37                                  pc[9]           0           0                                0.00 
         37                                  pc[8]           0           0                                0.00 
         37                                  pc[7]           0           0                                0.00 
         37                                  pc[6]           0           0                                0.00 
         37                                  pc[5]           0           0                                0.00 
         37                                  pc[4]           0           0                                0.00 
         37                                  pc[3]           0           0                                0.00 
         37                                 pc[31]           0           0                                0.00 
         37                                 pc[30]           0           0                                0.00 
         37                                  pc[2]           0           0                                0.00 
         37                                 pc[29]           0           0                                0.00 
         37                                 pc[28]           0           0                                0.00 
         37                                 pc[27]           0           0                                0.00 
         37                                 pc[26]           0           0                                0.00 
         37                                 pc[25]           0           0                                0.00 
         37                                 pc[24]           0           0                                0.00 
         37                                 pc[23]           0           0                                0.00 
         37                                 pc[22]           0           0                                0.00 
         37                                 pc[21]           0           0                                0.00 
         37                                 pc[20]           0           0                                0.00 
         37                                  pc[1]           0           0                                0.00 
         37                                 pc[19]           0           0                                0.00 
         37                                 pc[18]           0           0                                0.00 
         37                                 pc[17]           0           0                                0.00 
         37                                 pc[16]           0           0                                0.00 
         37                                 pc[15]           0           0                                0.00 
         37                                 pc[14]           0           0                                0.00 
         37                                 pc[13]           0           0                                0.00 
         37                                 pc[12]           0           0                                0.00 
         37                                 pc[11]           0           0                                0.00 
         37                                 pc[10]           0           0                                0.00 
         37                                  pc[0]           0           0                                0.00 
         37                                 op3[9]           1           1                              100.00 
         37                                 op3[8]           1           1                              100.00 
         37                                 op3[7]           1           1                              100.00 
         37                                 op3[6]           1           1                              100.00 
         37                                 op3[5]           1           1                              100.00 
         37                                 op3[4]           1           1                              100.00 
         37                                 op3[3]           1           1                              100.00 
         37                                op3[31]           1           1                              100.00 
         37                                op3[30]           1           1                              100.00 
         37                                 op3[2]           1           1                              100.00 
         37                                op3[29]           1           1                              100.00 
         37                                op3[28]           1           1                              100.00 
         37                                op3[27]           1           1                              100.00 
         37                                op3[26]           1           1                              100.00 
         37                                op3[25]           1           1                              100.00 
         37                                op3[24]           1           1                              100.00 
         37                                op3[23]           1           1                              100.00 
         37                                op3[22]           1           1                              100.00 
         37                                op3[21]           1           1                              100.00 
         37                                op3[20]           1           1                              100.00 
         37                                 op3[1]           1           1                              100.00 
         37                                op3[19]           1           1                              100.00 
         37                                op3[18]           1           1                              100.00 
         37                                op3[17]           1           1                              100.00 
         37                                op3[16]           1           1                              100.00 
         37                                op3[15]           1           1                              100.00 
         37                                op3[14]           1           1                              100.00 
         37                                op3[13]           1           1                              100.00 
         37                                op3[12]           1           1                              100.00 
         37                                op3[11]           1           1                              100.00 
         37                                op3[10]           1           1                              100.00 
         37                                 op3[0]           1           1                              100.00 
         37                                 op2[9]           1           1                              100.00 
         37                                 op2[8]           1           1                              100.00 
         37                                 op2[7]           1           1                              100.00 
         37                                 op2[6]           1           1                              100.00 
         37                                 op2[5]           1           1                              100.00 
         37                                 op2[4]           1           1                              100.00 
         37                                 op2[3]           1           1                              100.00 
         37                                op2[31]           1           1                              100.00 
         37                                op2[30]           1           1                              100.00 
         37                                 op2[2]           1           1                              100.00 
         37                                op2[29]           1           1                              100.00 
         37                                op2[28]           1           1                              100.00 
         37                                op2[27]           1           1                              100.00 
         37                                op2[26]           1           1                              100.00 
         37                                op2[25]           1           1                              100.00 
         37                                op2[24]           1           1                              100.00 
         37                                op2[23]           1           1                              100.00 
         37                                op2[22]           1           1                              100.00 
         37                                op2[21]           1           1                              100.00 
         37                                op2[20]           1           1                              100.00 
         37                                 op2[1]           1           1                              100.00 
         37                                op2[19]           1           1                              100.00 
         37                                op2[18]           1           1                              100.00 
         37                                op2[17]           1           1                              100.00 
         37                                op2[16]           1           1                              100.00 
         37                                op2[15]           1           1                              100.00 
         37                                op2[14]           1           1                              100.00 
         37                                op2[13]           1           1                              100.00 
         37                                op2[12]           1           1                              100.00 
         37                                op2[11]           1           1                              100.00 
         37                                op2[10]           1           1                              100.00 
         37                                 op2[0]           1           1                              100.00 
         37                                 op1[9]           1           1                              100.00 
         37                                 op1[8]           1           1                              100.00 
         37                                 op1[7]           1           1                              100.00 
         37                                 op1[6]           1           1                              100.00 
         37                                 op1[5]           1           1                              100.00 
         37                                 op1[4]           1           1                              100.00 
         37                                 op1[3]           1           1                              100.00 
         37                                op1[31]           1           1                              100.00 
         37                                op1[30]           1           1                              100.00 
         37                                 op1[2]           1           1                              100.00 
         37                                op1[29]           1           1                              100.00 
         37                                op1[28]           1           1                              100.00 
         37                                op1[27]           1           1                              100.00 
         37                                op1[26]           1           1                              100.00 
         37                                op1[25]           1           1                              100.00 
         37                                op1[24]           1           1                              100.00 
         37                                op1[23]           1           1                              100.00 
         37                                op1[22]           1           1                              100.00 
         37                                op1[21]           1           1                              100.00 
         37                                op1[20]           1           1                              100.00 
         37                                 op1[1]           1           1                              100.00 
         37                                op1[19]           1           1                              100.00 
         37                                op1[18]           1           1                              100.00 
         37                                op1[17]           1           1                              100.00 
         37                                op1[16]           1           1                              100.00 
         37                                op1[15]           1           1                              100.00 
         37                                op1[14]           1           1                              100.00 
         37                                op1[13]           1           1                              100.00 
         37                                op1[12]           1           1                              100.00 
         37                                op1[11]           1           1                              100.00 
         37                                op1[10]           1           1                              100.00 
         37                                 op1[0]           1           1                              100.00 
         38                              result[9]           1           1                              100.00 
         38                              result[8]           1           1                              100.00 
         38                              result[7]           1           1                              100.00 
         38                              result[6]           1           1                              100.00 
         38                              result[5]           1           1                              100.00 
         38                              result[4]           1           1                              100.00 
         38                              result[3]           1           1                              100.00 
         38                             result[31]           1           1                              100.00 
         38                             result[30]           1           1                              100.00 
         38                              result[2]           1           1                              100.00 
         38                             result[29]           1           1                              100.00 
         38                             result[28]           1           1                              100.00 
         38                             result[27]           1           1                              100.00 
         38                             result[26]           1           1                              100.00 
         38                             result[25]           1           1                              100.00 
         38                             result[24]           1           1                              100.00 
         38                             result[23]           1           1                              100.00 
         38                             result[22]           1           1                              100.00 
         38                             result[21]           1           1                              100.00 
         38                             result[20]           1           1                              100.00 
         38                              result[1]           1           1                              100.00 
         38                             result[19]           1           1                              100.00 
         38                             result[18]           1           1                              100.00 
         38                             result[17]           1           1                              100.00 
         38                             result[16]           1           1                              100.00 
         38                             result[15]           1           1                              100.00 
         38                             result[14]           1           1                              100.00 
         38                             result[13]           1           1                              100.00 
         38                             result[12]           1           1                              100.00 
         38                             result[11]           1           1                              100.00 
         38                             result[10]           1           1                              100.00 
         38                              result[0]           1           1                              100.00 
         38                          mcu_result[9]           1           1                              100.00 
         38                          mcu_result[8]           1           1                              100.00 
         38                          mcu_result[7]           1           1                              100.00 
         38                          mcu_result[6]           1           1                              100.00 
         38                          mcu_result[5]           1           1                              100.00 
         38                          mcu_result[4]           1           1                              100.00 
         38                          mcu_result[3]           1           1                              100.00 
         38                         mcu_result[31]           1           1                              100.00 
         38                         mcu_result[30]           1           1                              100.00 
         38                          mcu_result[2]           1           1                              100.00 
         38                         mcu_result[29]           1           1                              100.00 
         38                         mcu_result[28]           1           1                              100.00 
         38                         mcu_result[27]           1           1                              100.00 
         38                         mcu_result[26]           1           1                              100.00 
         38                         mcu_result[25]           1           1                              100.00 
         38                         mcu_result[24]           1           1                              100.00 
         38                         mcu_result[23]           1           1                              100.00 
         38                         mcu_result[22]           1           1                              100.00 
         38                         mcu_result[21]           1           1                              100.00 
         38                         mcu_result[20]           1           1                              100.00 
         38                          mcu_result[1]           1           1                              100.00 
         38                         mcu_result[19]           1           1                              100.00 
         38                         mcu_result[18]           1           1                              100.00 
         38                         mcu_result[17]           1           1                              100.00 
         38                         mcu_result[16]           1           1                              100.00 
         38                         mcu_result[15]           1           1                              100.00 
         38                         mcu_result[14]           1           1                              100.00 
         38                         mcu_result[13]           1           1                              100.00 
         38                         mcu_result[12]           1           1                              100.00 
         38                         mcu_result[11]           1           1                              100.00 
         38                         mcu_result[10]           1           1                              100.00 
         38                          mcu_result[0]           1           1                              100.00 
         38                          bcu_result[9]           0           0                                0.00 
         38                          bcu_result[8]           0           0                                0.00 
         38                          bcu_result[7]           0           0                                0.00 
         38                          bcu_result[6]           0           0                                0.00 
         38                          bcu_result[5]           0           0                                0.00 
         38                          bcu_result[4]           0           0                                0.00 
         38                          bcu_result[3]           0           0                                0.00 
         38                         bcu_result[31]           0           0                                0.00 
         38                         bcu_result[30]           0           0                                0.00 
         38                          bcu_result[2]           0           0                                0.00 
         38                         bcu_result[29]           0           0                                0.00 
         38                         bcu_result[28]           0           0                                0.00 
         38                         bcu_result[27]           0           0                                0.00 
         38                         bcu_result[26]           0           0                                0.00 
         38                         bcu_result[25]           0           0                                0.00 
         38                         bcu_result[24]           0           0                                0.00 
         38                         bcu_result[23]           0           0                                0.00 
         38                         bcu_result[22]           0           0                                0.00 
         38                         bcu_result[21]           0           0                                0.00 
         38                         bcu_result[20]           0           0                                0.00 
         38                          bcu_result[1]           0           0                                0.00 
         38                         bcu_result[19]           0           0                                0.00 
         38                         bcu_result[18]           0           0                                0.00 
         38                         bcu_result[17]           0           0                                0.00 
         38                         bcu_result[16]           0           0                                0.00 
         38                         bcu_result[15]           0           0                                0.00 
         38                         bcu_result[14]           0           0                                0.00 
         38                         bcu_result[13]           0           0                                0.00 
         38                         bcu_result[12]           0           0                                0.00 
         38                         bcu_result[11]           0           0                                0.00 
         38                         bcu_result[10]           0           0                                0.00 
         38                          bcu_result[0]           0           0                                0.00 
         38                          alu_result[9]           1           1                              100.00 
         38                          alu_result[8]           1           1                              100.00 
         38                          alu_result[7]           1           1                              100.00 
         38                          alu_result[6]           1           1                              100.00 
         38                          alu_result[5]           1           1                              100.00 
         38                          alu_result[4]           1           1                              100.00 
         38                          alu_result[3]           1           1                              100.00 
         38                         alu_result[31]           1           1                              100.00 
         38                         alu_result[30]           1           1                              100.00 
         38                          alu_result[2]           1           1                              100.00 
         38                         alu_result[29]           1           1                              100.00 
         38                         alu_result[28]           1           1                              100.00 
         38                         alu_result[27]           1           1                              100.00 
         38                         alu_result[26]           1           1                              100.00 
         38                         alu_result[25]           1           1                              100.00 
         38                         alu_result[24]           1           1                              100.00 
         38                         alu_result[23]           1           1                              100.00 
         38                         alu_result[22]           1           1                              100.00 
         38                         alu_result[21]           1           1                              100.00 
         38                         alu_result[20]           1           1                              100.00 
         38                          alu_result[1]           1           1                              100.00 
         38                         alu_result[19]           1           1                              100.00 
         38                         alu_result[18]           1           1                              100.00 
         38                         alu_result[17]           1           1                              100.00 
         38                         alu_result[16]           1           1                              100.00 
         38                         alu_result[15]           1           1                              100.00 
         38                         alu_result[14]           1           1                              100.00 
         38                         alu_result[13]           1           1                              100.00 
         38                         alu_result[12]           1           1                              100.00 
         38                         alu_result[11]           1           1                              100.00 
         38                         alu_result[10]           1           1                              100.00 
         38                          alu_result[0]           1           1                              100.00 
         39                                  rd[4]           1           1                              100.00 
         39                                  rd[3]           1           1                              100.00 
         39                                  rd[2]           1           1                              100.00 
         39                                  rd[1]           1           1                              100.00 
         39                                  rd[0]           1           1                              100.00 
         41                                   i[5]           0           0                                0.00 
         41                                   i[4]           0           0                                0.00 
         41                                   i[3]           0           0                                0.00 
         41                                   i[2]           0           0                                0.00 
         41                                   i[1]           0           0                                0.00 
         41                                   i[0]           0           0                                0.00 

Total Node Count     =        454 
Toggled Node Count   =        343 
Untoggled Node Count =        111 

Toggle Coverage      =      75.50% (678 of 898 bins)

COVERGROUP COVERAGE:
----------------------------------------------------------------------------------------------------------
Covergroup                                             Metric       Goal       Bins    Status               
                                                                                                         
----------------------------------------------------------------------------------------------------------
 TYPE /top/u_cpu/u_decoder/opcodes_cg                 100.00%        100          -    Covered              
    covered/total bins:                                    35         35          -                      
    missing/total bins:                                     0         35          -                      
    % Hit:                                            100.00%        100          -                      
    Coverpoint opcode                                 100.00%        100          -    Covered              
        covered/total bins:                                35         35          -                      
        missing/total bins:                                 0         35          -                      
        % Hit:                                        100.00%        100          -                      
 Covergroup instance \/top/u_cpu/u_decoder/opcodes_inst  
                                                      100.00%        100          -    Covered              
    covered/total bins:                                    35         35          -                      
    missing/total bins:                                     0         35          -                      
    % Hit:                                            100.00%        100          -                      
    Coverpoint opcode                                 100.00%        100          -    Covered              
        covered/total bins:                                35         35          -                      
        missing/total bins:                                 0         35          -                      
        % Hit:                                        100.00%        100          -                      
        bin instr[ADDI]                                  2048          1          -    Covered              
        bin instr[STLI]                                  1964          1          -    Covered              
        bin instr[STLUI]                                 2112          1          -    Covered              
        bin instr[ANDI]                                  2180          1          -    Covered              
        bin instr[ORI]                                   2278          1          -    Covered              
        bin instr[XORI]                                  2076          1          -    Covered              
        bin instr[SLLI]                                  2112          1          -    Covered              
        bin instr[SRAI]                                  2080          1          -    Covered              
        bin instr[LUI]                                   2124          1          -    Covered              
        bin instr[AUIPC]                                 2184          1          -    Covered              
        bin instr[ADD]                                   2308          1          -    Covered              
        bin instr[SUB]                                   2276          1          -    Covered              
        bin instr[STL]                                   4080          1          -    Covered              
        bin instr[STLU]                                  1960          1          -    Covered              
        bin instr[AND]                                   2068          1          -    Covered              
        bin instr[OR]                                    2100          1          -    Covered              
        bin instr[XOR]                                   2196          1          -    Covered              
        bin instr[SLL]                                   2204          1          -    Covered              
        bin instr[SRA]                                   2132          1          -    Covered              
        bin instr[JAL]                                   2064          1          -    Covered              
        bin instr[JALR]                                  2187          1          -    Covered              
        bin instr[BEQ]                                   2188          1          -    Covered              
        bin instr[BNE]                                   2152          1          -    Covered              
        bin instr[BLT]                                   2160          1          -    Covered              
        bin instr[BLTU]                                  1960          1          -    Covered              
        bin instr[BGE]                                   1952          1          -    Covered              
        bin instr[BGEU]                                  2248          1          -    Covered              
        bin instr[LW]                                    2284          1          -    Covered              
        bin instr[LH]                                    2116          1          -    Covered              
        bin instr[LB]                                    1888          1          -    Covered              
        bin instr[LHU]                                   2024          1          -    Covered              
        bin instr[LBU]                                   2160          1          -    Covered              
        bin instr[SW]                                    2020          1          -    Covered              
        bin instr[SH]                                    1900          1          -    Covered              
        bin instr[SB]                                    2036          1          -    Covered              
 TYPE /top/u_cpu/u_decoder/regs_cg                     99.91%        100          -    Uncovered            
    covered/total bins:                                   465        467          -                      
    missing/total bins:                                     2        467          -                      
    % Hit:                                             99.57%        100          -                      
    Coverpoint opcode                                 100.00%        100          -    Covered              
        covered/total bins:                                 7          7          -                      
        missing/total bins:                                 0          7          -                      
        % Hit:                                        100.00%        100          -                      
    Coverpoint rs1                                    100.00%        100          -    Covered              
        covered/total bins:                                 4          4          -                      
        missing/total bins:                                 0          4          -                      
        % Hit:                                        100.00%        100          -                      
    Coverpoint rs2                                    100.00%        100          -    Covered              
        covered/total bins:                                 4          4          -                      
        missing/total bins:                                 0          4          -                      
        % Hit:                                        100.00%        100          -                      
    Coverpoint rd                                     100.00%        100          -    Covered              
        covered/total bins:                                 4          4          -                      
        missing/total bins:                                 0          4          -                      
        % Hit:                                        100.00%        100          -                      
    Cross #cross__0#                                   99.55%        100          -    Uncovered            
        covered/total bins:                               446        448          -                      
        missing/total bins:                                 2        448          -                      
        % Hit:                                         99.55%        100          -                      
 Covergroup instance \/top/u_cpu/u_decoder/regs_inst  
                                                       99.91%        100          -    Uncovered            
    covered/total bins:                                   465        467          -                      
    missing/total bins:                                     2        467          -                      
    % Hit:                                             99.57%        100          -                      
    Coverpoint opcode                                 100.00%        100          -    Covered              
        covered/total bins:                                 7          7          -                      
        missing/total bins:                                 0          7          -                      
        % Hit:                                        100.00%        100          -                      
        bin r_type                                      21324          1          -    Covered              
        bin i_type                                      31473          1          -    Covered              
        bin si_type                                      4076          1          -    Covered              
        bin u_type                                       4308          1          -    Covered              
        bin s_type                                       5956          1          -    Covered              
        bin b_type                                      12660          1          -    Covered              
        bin j_type                                       2064          1          -    Covered              
    Coverpoint rs1                                    100.00%        100          -    Covered              
        covered/total bins:                                 4          4          -                      
        missing/total bins:                                 0          4          -                      
        % Hit:                                        100.00%        100          -                      
        bin n[0]                                        24637          1          -    Covered              
        bin n[1]                                        18236          1          -    Covered              
        bin n[2]                                        18383          1          -    Covered              
        bin n[3]                                        18760          1          -    Covered              
    Coverpoint rs2                                    100.00%        100          -    Covered              
        covered/total bins:                                 4          4          -                      
        missing/total bins:                                 0          4          -                      
        % Hit:                                        100.00%        100          -                      
        bin n[0]                                        48512          1          -    Covered              
        bin n[1]                                        10428          1          -    Covered              
        bin n[2]                                        10556          1          -    Covered              
        bin n[3]                                        10520          1          -    Covered              
    Coverpoint rd                                     100.00%        100          -    Covered              
        covered/total bins:                                 4          4          -                      
        missing/total bins:                                 0          4          -                      
        % Hit:                                        100.00%        100          -                      
        bin n[0]                                        32425          1          -    Covered              
        bin n[1]                                        15896          1          -    Covered              
        bin n[2]                                        15859          1          -    Covered              
        bin n[3]                                        15836          1          -    Covered              
    Cross #cross__0#                                   99.55%        100          -    Uncovered            
        covered/total bins:                               446        448          -                      
        missing/total bins:                                 2        448          -                      
        % Hit:                                         99.55%        100          -                      
        Auto, Default and User Defined Bins:
            bin <j_type,n[3],n[3],n[3]>                     1          1          -    Covered              
            bin <j_type,n[2],n[3],n[3]>                     2          1          -    Covered              
            bin <j_type,n[1],n[3],n[3]>                     5          1          -    Covered              
            bin <j_type,n[0],n[3],n[3]>                     7          1          -    Covered              
            bin <j_type,n[3],n[2],n[3]>                     3          1          -    Covered              
            bin <j_type,n[2],n[2],n[3]>                     1          1          -    Covered              
            bin <j_type,n[0],n[2],n[3]>                     2          1          -    Covered              
            bin <j_type,n[3],n[1],n[3]>                     5          1          -    Covered              
            bin <j_type,n[2],n[1],n[3]>                     1          1          -    Covered              
            bin <j_type,n[1],n[1],n[3]>                     3          1          -    Covered              
            bin <j_type,n[0],n[1],n[3]>                     1          1          -    Covered              
            bin <j_type,n[3],n[0],n[3]>                    18          1          -    Covered              
            bin <j_type,n[2],n[0],n[3]>                    19          1          -    Covered              
            bin <j_type,n[1],n[0],n[3]>                    15          1          -    Covered              
            bin <j_type,n[0],n[0],n[3]>                   416          1          -    Covered              
            bin <j_type,n[3],n[3],n[2]>                     3          1          -    Covered              
            bin <j_type,n[2],n[3],n[2]>                     1          1          -    Covered              
            bin <j_type,n[1],n[3],n[2]>                     5          1          -    Covered              
            bin <j_type,n[0],n[3],n[2]>                     2          1          -    Covered              
            bin <j_type,n[3],n[2],n[2]>                     3          1          -    Covered              
            bin <j_type,n[2],n[2],n[2]>                     7          1          -    Covered              
            bin <j_type,n[1],n[2],n[2]>                     3          1          -    Covered              
            bin <j_type,n[0],n[2],n[2]>                     3          1          -    Covered              
            bin <j_type,n[3],n[1],n[2]>                     4          1          -    Covered              
            bin <j_type,n[2],n[1],n[2]>                     3          1          -    Covered              
            bin <j_type,n[1],n[1],n[2]>                     2          1          -    Covered              
            bin <j_type,n[0],n[1],n[2]>                     1          1          -    Covered              
            bin <j_type,n[3],n[0],n[2]>                    16          1          -    Covered              
            bin <j_type,n[2],n[0],n[2]>                    15          1          -    Covered              
            bin <j_type,n[1],n[0],n[2]>                    13          1          -    Covered              
            bin <j_type,n[0],n[0],n[2]>                   443          1          -    Covered              
            bin <j_type,n[3],n[3],n[1]>                     2          1          -    Covered              
            bin <j_type,n[2],n[3],n[1]>                     2          1          -    Covered              
            bin <j_type,n[1],n[3],n[1]>                     6          1          -    Covered              
            bin <j_type,n[0],n[3],n[1]>                     4          1          -    Covered              
            bin <j_type,n[3],n[2],n[1]>                     4          1          -    Covered              
            bin <j_type,n[1],n[2],n[1]>                     1          1          -    Covered              
            bin <j_type,n[0],n[2],n[1]>                     5          1          -    Covered              
            bin <j_type,n[3],n[1],n[1]>                     2          1          -    Covered              
            bin <j_type,n[2],n[1],n[1]>                     1          1          -    Covered              
            bin <j_type,n[1],n[1],n[1]>                     1          1          -    Covered              
            bin <j_type,n[0],n[1],n[1]>                     3          1          -    Covered              
            bin <j_type,n[3],n[0],n[1]>                    10          1          -    Covered              
            bin <j_type,n[2],n[0],n[1]>                    23          1          -    Covered              
            bin <j_type,n[1],n[0],n[1]>                     7          1          -    Covered              
            bin <j_type,n[0],n[0],n[1]>                   420          1          -    Covered              
            bin <j_type,n[3],n[3],n[0]>                    14          1          -    Covered              
            bin <j_type,n[2],n[3],n[0]>                    12          1          -    Covered              
            bin <j_type,n[1],n[3],n[0]>                     6          1          -    Covered              
            bin <j_type,n[0],n[3],n[0]>                    12          1          -    Covered              
            bin <j_type,n[3],n[2],n[0]>                    11          1          -    Covered              
            bin <j_type,n[2],n[2],n[0]>                    13          1          -    Covered              
            bin <j_type,n[1],n[2],n[0]>                     6          1          -    Covered              
            bin <j_type,n[0],n[2],n[0]>                    15          1          -    Covered              
            bin <j_type,n[3],n[1],n[0]>                    11          1          -    Covered              
            bin <j_type,n[2],n[1],n[0]>                     7          1          -    Covered              
            bin <j_type,n[1],n[1],n[0]>                    13          1          -    Covered              
            bin <j_type,n[0],n[1],n[0]>                     9          1          -    Covered              
            bin <j_type,n[3],n[0],n[0]>                    19          1          -    Covered              
            bin <j_type,n[2],n[0],n[0]>                    15          1          -    Covered              
            bin <j_type,n[1],n[0],n[0]>                    19          1          -    Covered              
            bin <j_type,n[0],n[0],n[0]>                   368          1          -    Covered              
            bin <b_type,n[3],n[3],n[3]>                    22          1          -    Covered              
            bin <b_type,n[2],n[3],n[3]>                    10          1          -    Covered              
            bin <b_type,n[1],n[3],n[3]>                    20          1          -    Covered              
            bin <b_type,n[0],n[3],n[3]>                    14          1          -    Covered              
            bin <b_type,n[3],n[2],n[3]>                    12          1          -    Covered              
            bin <b_type,n[2],n[2],n[3]>                    13          1          -    Covered              
            bin <b_type,n[1],n[2],n[3]>                    16          1          -    Covered              
            bin <b_type,n[0],n[2],n[3]>                    17          1          -    Covered              
            bin <b_type,n[3],n[1],n[3]>                    15          1          -    Covered              
            bin <b_type,n[2],n[1],n[3]>                    14          1          -    Covered              
            bin <b_type,n[1],n[1],n[3]>                    17          1          -    Covered              
            bin <b_type,n[0],n[1],n[3]>                    20          1          -    Covered              
            bin <b_type,n[3],n[0],n[3]>                    91          1          -    Covered              
            bin <b_type,n[2],n[0],n[3]>                   103          1          -    Covered              
            bin <b_type,n[1],n[0],n[3]>                   100          1          -    Covered              
            bin <b_type,n[0],n[0],n[3]>                   148          1          -    Covered              
            bin <b_type,n[3],n[3],n[2]>                    10          1          -    Covered              
            bin <b_type,n[2],n[3],n[2]>                    22          1          -    Covered              
            bin <b_type,n[1],n[3],n[2]>                    12          1          -    Covered              
            bin <b_type,n[0],n[3],n[2]>                    13          1          -    Covered              
            bin <b_type,n[3],n[2],n[2]>                    29          1          -    Covered              
            bin <b_type,n[2],n[2],n[2]>                    13          1          -    Covered              
            bin <b_type,n[1],n[2],n[2]>                    11          1          -    Covered              
            bin <b_type,n[0],n[2],n[2]>                    19          1          -    Covered              
            bin <b_type,n[3],n[1],n[2]>                    12          1          -    Covered              
            bin <b_type,n[2],n[1],n[2]>                    20          1          -    Covered              
            bin <b_type,n[1],n[1],n[2]>                    12          1          -    Covered              
            bin <b_type,n[0],n[1],n[2]>                     9          1          -    Covered              
            bin <b_type,n[3],n[0],n[2]>                    91          1          -    Covered              
            bin <b_type,n[2],n[0],n[2]>                    94          1          -    Covered              
            bin <b_type,n[1],n[0],n[2]>                   103          1          -    Covered              
            bin <b_type,n[0],n[0],n[2]>                   148          1          -    Covered              
            bin <b_type,n[3],n[3],n[1]>                    20          1          -    Covered              
            bin <b_type,n[2],n[3],n[1]>                     8          1          -    Covered              
            bin <b_type,n[1],n[3],n[1]>                    17          1          -    Covered              
            bin <b_type,n[0],n[3],n[1]>                    14          1          -    Covered              
            bin <b_type,n[3],n[2],n[1]>                    13          1          -    Covered              
            bin <b_type,n[2],n[2],n[1]>                    11          1          -    Covered              
            bin <b_type,n[1],n[2],n[1]>                    10          1          -    Covered              
            bin <b_type,n[0],n[2],n[1]>                    13          1          -    Covered              
            bin <b_type,n[3],n[1],n[1]>                    11          1          -    Covered              
            bin <b_type,n[2],n[1],n[1]>                    11          1          -    Covered              
            bin <b_type,n[1],n[1],n[1]>                    14          1          -    Covered              
            bin <b_type,n[0],n[1],n[1]>                     6          1          -    Covered              
            bin <b_type,n[3],n[0],n[1]>                    82          1          -    Covered              
            bin <b_type,n[2],n[0],n[1]>                    84          1          -    Covered              
            bin <b_type,n[1],n[0],n[1]>                    90          1          -    Covered              
            bin <b_type,n[0],n[0],n[1]>                   165          1          -    Covered              
            bin <b_type,n[3],n[3],n[0]>                   600          1          -    Covered              
            bin <b_type,n[2],n[3],n[0]>                   685          1          -    Covered              
            bin <b_type,n[1],n[3],n[0]>                   571          1          -    Covered              
            bin <b_type,n[0],n[3],n[0]>                   658          1          -    Covered              
            bin <b_type,n[3],n[2],n[0]>                   724          1          -    Covered              
            bin <b_type,n[2],n[2],n[0]>                   711          1          -    Covered              
            bin <b_type,n[1],n[2],n[0]>                   582          1          -    Covered              
            bin <b_type,n[0],n[2],n[0]>                   696          1          -    Covered              
            bin <b_type,n[3],n[1],n[0]>                   688          1          -    Covered              
            bin <b_type,n[2],n[1],n[0]>                   639          1          -    Covered              
            bin <b_type,n[1],n[1],n[0]>                   570          1          -    Covered              
            bin <b_type,n[0],n[1],n[0]>                   647          1          -    Covered              
            bin <b_type,n[3],n[0],n[0]>                   806          1          -    Covered              
            bin <b_type,n[2],n[0],n[0]>                   768          1          -    Covered              
            bin <b_type,n[1],n[0],n[0]>                   770          1          -    Covered              
            bin <b_type,n[0],n[0],n[0]>                   726          1          -    Covered              
            bin <s_type,n[3],n[3],n[3]>                     3          1          -    Covered              
            bin <s_type,n[2],n[3],n[3]>                     9          1          -    Covered              
            bin <s_type,n[1],n[3],n[3]>                     4          1          -    Covered              
            bin <s_type,n[0],n[3],n[3]>                     7          1          -    Covered              
            bin <s_type,n[3],n[2],n[3]>                    10          1          -    Covered              
            bin <s_type,n[2],n[2],n[3]>                     7          1          -    Covered              
            bin <s_type,n[1],n[2],n[3]>                    13          1          -    Covered              
            bin <s_type,n[0],n[2],n[3]>                    14          1          -    Covered              
            bin <s_type,n[3],n[1],n[3]>                     5          1          -    Covered              
            bin <s_type,n[2],n[1],n[3]>                     3          1          -    Covered              
            bin <s_type,n[1],n[1],n[3]>                     7          1          -    Covered              
            bin <s_type,n[0],n[1],n[3]>                     7          1          -    Covered              
            bin <s_type,n[3],n[0],n[3]>                    50          1          -    Covered              
            bin <s_type,n[2],n[0],n[3]>                    40          1          -    Covered              
            bin <s_type,n[1],n[0],n[3]>                    42          1          -    Covered              
            bin <s_type,n[0],n[0],n[3]>                    65          1          -    Covered              
            bin <s_type,n[3],n[3],n[2]>                     3          1          -    Covered              
            bin <s_type,n[2],n[3],n[2]>                     6          1          -    Covered              
            bin <s_type,n[1],n[3],n[2]>                     5          1          -    Covered              
            bin <s_type,n[0],n[3],n[2]>                     9          1          -    Covered              
            bin <s_type,n[3],n[2],n[2]>                    10          1          -    Covered              
            bin <s_type,n[2],n[2],n[2]>                     4          1          -    Covered              
            bin <s_type,n[1],n[2],n[2]>                     8          1          -    Covered              
            bin <s_type,n[0],n[2],n[2]>                     8          1          -    Covered              
            bin <s_type,n[3],n[1],n[2]>                     4          1          -    Covered              
            bin <s_type,n[2],n[1],n[2]>                     7          1          -    Covered              
            bin <s_type,n[1],n[1],n[2]>                    10          1          -    Covered              
            bin <s_type,n[0],n[1],n[2]>                     8          1          -    Covered              
            bin <s_type,n[3],n[0],n[2]>                    37          1          -    Covered              
            bin <s_type,n[2],n[0],n[2]>                    51          1          -    Covered              
            bin <s_type,n[1],n[0],n[2]>                    42          1          -    Covered              
            bin <s_type,n[0],n[0],n[2]>                    86          1          -    Covered              
            bin <s_type,n[3],n[3],n[1]>                     9          1          -    Covered              
            bin <s_type,n[2],n[3],n[1]>                     7          1          -    Covered              
            bin <s_type,n[1],n[3],n[1]>                     5          1          -    Covered              
            bin <s_type,n[0],n[3],n[1]>                    13          1          -    Covered              
            bin <s_type,n[3],n[2],n[1]>                    11          1          -    Covered              
            bin <s_type,n[2],n[2],n[1]>                     9          1          -    Covered              
            bin <s_type,n[1],n[2],n[1]>                     9          1          -    Covered              
            bin <s_type,n[0],n[2],n[1]>                     6          1          -    Covered              
            bin <s_type,n[3],n[1],n[1]>                    10          1          -    Covered              
            bin <s_type,n[2],n[1],n[1]>                     5          1          -    Covered              
            bin <s_type,n[1],n[1],n[1]>                     9          1          -    Covered              
            bin <s_type,n[0],n[1],n[1]>                     8          1          -    Covered              
            bin <s_type,n[3],n[0],n[1]>                    45          1          -    Covered              
            bin <s_type,n[2],n[0],n[1]>                    53          1          -    Covered              
            bin <s_type,n[1],n[0],n[1]>                    45          1          -    Covered              
            bin <s_type,n[0],n[0],n[1]>                    64          1          -    Covered              
            bin <s_type,n[3],n[3],n[0]>                   321          1          -    Covered              
            bin <s_type,n[2],n[3],n[0]>                   314          1          -    Covered              
            bin <s_type,n[1],n[3],n[0]>                   313          1          -    Covered              
            bin <s_type,n[0],n[3],n[0]>                   306          1          -    Covered              
            bin <s_type,n[3],n[2],n[0]>                   330          1          -    Covered              
            bin <s_type,n[2],n[2],n[0]>                   296          1          -    Covered              
            bin <s_type,n[1],n[2],n[0]>                   336          1          -    Covered              
            bin <s_type,n[0],n[2],n[0]>                   332          1          -    Covered              
            bin <s_type,n[3],n[1],n[0]>                   316          1          -    Covered              
            bin <s_type,n[2],n[1],n[0]>                   286          1          -    Covered              
            bin <s_type,n[1],n[1],n[0]>                   300          1          -    Covered              
            bin <s_type,n[0],n[1],n[0]>                   257          1          -    Covered              
            bin <s_type,n[3],n[0],n[0]>                   317          1          -    Covered              
            bin <s_type,n[2],n[0],n[0]>                   326          1          -    Covered              
            bin <s_type,n[1],n[0],n[0]>                   296          1          -    Covered              
            bin <s_type,n[0],n[0],n[0]>                   418          1          -    Covered              
            bin <u_type,n[3],n[3],n[3]>                     2          1          -    Covered              
            bin <u_type,n[2],n[3],n[3]>                     5          1          -    Covered              
            bin <u_type,n[1],n[3],n[3]>                     4          1          -    Covered              
            bin <u_type,n[0],n[3],n[3]>                     3          1          -    Covered              
            bin <u_type,n[3],n[2],n[3]>                     2          1          -    Covered              
            bin <u_type,n[2],n[2],n[3]>                     7          1          -    Covered              
            bin <u_type,n[1],n[2],n[3]>                     4          1          -    Covered              
            bin <u_type,n[0],n[2],n[3]>                    12          1          -    Covered              
            bin <u_type,n[3],n[1],n[3]>                     5          1          -    Covered              
            bin <u_type,n[2],n[1],n[3]>                     5          1          -    Covered              
            bin <u_type,n[1],n[1],n[3]>                     8          1          -    Covered              
            bin <u_type,n[0],n[1],n[3]>                     8          1          -    Covered              
            bin <u_type,n[3],n[0],n[3]>                    28          1          -    Covered              
            bin <u_type,n[2],n[0],n[3]>                    26          1          -    Covered              
            bin <u_type,n[1],n[0],n[3]>                    29          1          -    Covered              
            bin <u_type,n[0],n[0],n[3]>                   906          1          -    Covered              
            bin <u_type,n[3],n[3],n[2]>                     3          1          -    Covered              
            bin <u_type,n[2],n[3],n[2]>                     2          1          -    Covered              
            bin <u_type,n[1],n[3],n[2]>                     4          1          -    Covered              
            bin <u_type,n[0],n[3],n[2]>                     4          1          -    Covered              
            bin <u_type,n[3],n[2],n[2]>                     3          1          -    Covered              
            bin <u_type,n[2],n[2],n[2]>                     4          1          -    Covered              
            bin <u_type,n[1],n[2],n[2]>                     5          1          -    Covered              
            bin <u_type,n[0],n[2],n[2]>                     6          1          -    Covered              
            bin <u_type,n[3],n[1],n[2]>                     8          1          -    Covered              
            bin <u_type,n[2],n[1],n[2]>                     7          1          -    Covered              
            bin <u_type,n[1],n[1],n[2]>                     4          1          -    Covered              
            bin <u_type,n[0],n[1],n[2]>                     6          1          -    Covered              
            bin <u_type,n[3],n[0],n[2]>                    37          1          -    Covered              
            bin <u_type,n[2],n[0],n[2]>                    38          1          -    Covered              
            bin <u_type,n[1],n[0],n[2]>                    33          1          -    Covered              
            bin <u_type,n[0],n[0],n[2]>                   956          1          -    Covered              
            bin <u_type,n[3],n[3],n[1]>                     7          1          -    Covered              
            bin <u_type,n[2],n[3],n[1]>                     6          1          -    Covered              
            bin <u_type,n[1],n[3],n[1]>                     7          1          -    Covered              
            bin <u_type,n[0],n[3],n[1]>                    11          1          -    Covered              
            bin <u_type,n[3],n[2],n[1]>                     4          1          -    Covered              
            bin <u_type,n[2],n[2],n[1]>                     3          1          -    Covered              
            bin <u_type,n[1],n[2],n[1]>                     9          1          -    Covered              
            bin <u_type,n[0],n[2],n[1]>                     7          1          -    Covered              
            bin <u_type,n[3],n[1],n[1]>                     9          1          -    Covered              
            bin <u_type,n[2],n[1],n[1]>                     5          1          -    Covered              
            bin <u_type,n[1],n[1],n[1]>                     7          1          -    Covered              
            bin <u_type,n[0],n[1],n[1]>                     3          1          -    Covered              
            bin <u_type,n[3],n[0],n[1]>                    43          1          -    Covered              
            bin <u_type,n[2],n[0],n[1]>                    35          1          -    Covered              
            bin <u_type,n[1],n[0],n[1]>                    37          1          -    Covered              
            bin <u_type,n[0],n[0],n[1]>                   882          1          -    Covered              
            bin <u_type,n[3],n[3],n[0]>                    13          1          -    Covered              
            bin <u_type,n[2],n[3],n[0]>                    18          1          -    Covered              
            bin <u_type,n[1],n[3],n[0]>                    19          1          -    Covered              
            bin <u_type,n[0],n[3],n[0]>                    16          1          -    Covered              
            bin <u_type,n[3],n[2],n[0]>                    31          1          -    Covered              
            bin <u_type,n[2],n[2],n[0]>                    20          1          -    Covered              
            bin <u_type,n[1],n[2],n[0]>                    19          1          -    Covered              
            bin <u_type,n[0],n[2],n[0]>                    20          1          -    Covered              
            bin <u_type,n[3],n[1],n[0]>                    20          1          -    Covered              
            bin <u_type,n[2],n[1],n[0]>                    19          1          -    Covered              
            bin <u_type,n[1],n[1],n[0]>                    20          1          -    Covered              
            bin <u_type,n[0],n[1],n[0]>                    21          1          -    Covered              
            bin <u_type,n[3],n[0],n[0]>                    40          1          -    Covered              
            bin <u_type,n[2],n[0],n[0]>                    37          1          -    Covered              
            bin <u_type,n[1],n[0],n[0]>                    41          1          -    Covered              
            bin <u_type,n[0],n[0],n[0]>                   705          1          -    Covered              
            bin <si_type,n[3],n[3],n[3]>                    7          1          -    Covered              
            bin <si_type,n[2],n[3],n[3]>                    3          1          -    Covered              
            bin <si_type,n[1],n[3],n[3]>                    6          1          -    Covered              
            bin <si_type,n[0],n[3],n[3]>                    7          1          -    Covered              
            bin <si_type,n[3],n[2],n[3]>                    2          1          -    Covered              
            bin <si_type,n[2],n[2],n[3]>                    2          1          -    Covered              
            bin <si_type,n[1],n[2],n[3]>                    3          1          -    Covered              
            bin <si_type,n[0],n[2],n[3]>                    2          1          -    Covered              
            bin <si_type,n[3],n[1],n[3]>                    3          1          -    Covered              
            bin <si_type,n[2],n[1],n[3]>                    7          1          -    Covered              
            bin <si_type,n[1],n[1],n[3]>                    4          1          -    Covered              
            bin <si_type,n[0],n[1],n[3]>                    5          1          -    Covered              
            bin <si_type,n[3],n[0],n[3]>                  230          1          -    Covered              
            bin <si_type,n[2],n[0],n[3]>                  253          1          -    Covered              
            bin <si_type,n[1],n[0],n[3]>                  202          1          -    Covered              
            bin <si_type,n[0],n[0],n[3]>                  232          1          -    Covered              
            bin <si_type,n[3],n[3],n[2]>                    3          1          -    Covered              
            bin <si_type,n[2],n[3],n[2]>                    6          1          -    Covered              
            bin <si_type,n[1],n[3],n[2]>                    6          1          -    Covered              
            bin <si_type,n[0],n[3],n[2]>                    2          1          -    Covered              
            bin <si_type,n[3],n[2],n[2]>                    6          1          -    Covered              
            bin <si_type,n[2],n[2],n[2]>                    7          1          -    Covered              
            bin <si_type,n[1],n[2],n[2]>                    2          1          -    Covered              
            bin <si_type,n[0],n[2],n[2]>                    7          1          -    Covered              
            bin <si_type,n[3],n[1],n[2]>                    6          1          -    Covered              
            bin <si_type,n[2],n[1],n[2]>                    5          1          -    Covered              
            bin <si_type,n[1],n[1],n[2]>                    4          1          -    Covered              
            bin <si_type,n[0],n[1],n[2]>                    3          1          -    Covered              
            bin <si_type,n[3],n[0],n[2]>                  266          1          -    Covered              
            bin <si_type,n[2],n[0],n[2]>                  213          1          -    Covered              
            bin <si_type,n[1],n[0],n[2]>                  248          1          -    Covered              
            bin <si_type,n[0],n[0],n[2]>                  254          1          -    Covered              
            bin <si_type,n[3],n[3],n[1]>                    4          1          -    Covered              
            bin <si_type,n[2],n[3],n[1]>                    8          1          -    Covered              
            bin <si_type,n[1],n[3],n[1]>                    3          1          -    Covered              
            bin <si_type,n[0],n[3],n[1]>                    5          1          -    Covered              
            bin <si_type,n[3],n[2],n[1]>                    6          1          -    Covered              
            bin <si_type,n[2],n[2],n[1]>                    4          1          -    Covered              
            bin <si_type,n[1],n[2],n[1]>                    6          1          -    Covered              
            bin <si_type,n[0],n[2],n[1]>                    5          1          -    Covered              
            bin <si_type,n[3],n[1],n[1]>                    2          1          -    Covered              
            bin <si_type,n[2],n[1],n[1]>                    3          1          -    Covered              
            bin <si_type,n[1],n[1],n[1]>                    8          1          -    Covered              
            bin <si_type,n[0],n[1],n[1]>                    5          1          -    Covered              
            bin <si_type,n[3],n[0],n[1]>                  214          1          -    Covered              
            bin <si_type,n[2],n[0],n[1]>                  221          1          -    Covered              
            bin <si_type,n[1],n[0],n[1]>                  241          1          -    Covered              
            bin <si_type,n[0],n[0],n[1]>                  278          1          -    Covered              
            bin <si_type,n[3],n[3],n[0]>                   21          1          -    Covered              
            bin <si_type,n[2],n[3],n[0]>                   20          1          -    Covered              
            bin <si_type,n[1],n[3],n[0]>                   20          1          -    Covered              
            bin <si_type,n[0],n[3],n[0]>                   16          1          -    Covered              
            bin <si_type,n[3],n[2],n[0]>                   23          1          -    Covered              
            bin <si_type,n[2],n[2],n[0]>                   22          1          -    Covered              
            bin <si_type,n[1],n[2],n[0]>                   16          1          -    Covered              
            bin <si_type,n[0],n[2],n[0]>                   21          1          -    Covered              
            bin <si_type,n[3],n[1],n[0]>                   20          1          -    Covered              
            bin <si_type,n[2],n[1],n[0]>                   16          1          -    Covered              
            bin <si_type,n[1],n[1],n[0]>                   15          1          -    Covered              
            bin <si_type,n[0],n[1],n[0]>                   13          1          -    Covered              
            bin <si_type,n[3],n[0],n[0]>                  211          1          -    Covered              
            bin <si_type,n[2],n[0],n[0]>                  228          1          -    Covered              
            bin <si_type,n[1],n[0],n[0]>                  193          1          -    Covered              
            bin <si_type,n[0],n[0],n[0]>                  202          1          -    Covered              
            bin <i_type,n[3],n[3],n[3]>                   118          1          -    Covered              
            bin <i_type,n[2],n[3],n[3]>                   119          1          -    Covered              
            bin <i_type,n[1],n[3],n[3]>                   137          1          -    Covered              
            bin <i_type,n[0],n[3],n[3]>                   104          1          -    Covered              
            bin <i_type,n[3],n[2],n[3]>                    79          1          -    Covered              
            bin <i_type,n[2],n[2],n[3]>                    89          1          -    Covered              
            bin <i_type,n[1],n[2],n[3]>                   134          1          -    Covered              
            bin <i_type,n[0],n[2],n[3]>                   117          1          -    Covered              
            bin <i_type,n[3],n[1],n[3]>                   127          1          -    Covered              
            bin <i_type,n[2],n[1],n[3]>                    97          1          -    Covered              
            bin <i_type,n[1],n[1],n[3]>                   110          1          -    Covered              
            bin <i_type,n[0],n[1],n[3]>                   123          1          -    Covered              
            bin <i_type,n[3],n[0],n[3]>                  1640          1          -    Covered              
            bin <i_type,n[2],n[0],n[3]>                  1466          1          -    Covered              
            bin <i_type,n[1],n[0],n[3]>                  1572          1          -    Covered              
            bin <i_type,n[0],n[0],n[3]>                  1629          1          -    Covered              
            bin <i_type,n[3],n[3],n[2]>                    71          1          -    Covered              
            bin <i_type,n[2],n[3],n[2]>                   128          1          -    Covered              
            bin <i_type,n[1],n[3],n[2]>                    91          1          -    Covered              
            bin <i_type,n[0],n[3],n[2]>                    99          1          -    Covered              
            bin <i_type,n[3],n[2],n[2]>                   120          1          -    Covered              
            bin <i_type,n[2],n[2],n[2]>                   110          1          -    Covered              
            bin <i_type,n[1],n[2],n[2]>                    91          1          -    Covered              
            bin <i_type,n[0],n[2],n[2]>                   109          1          -    Covered              
            bin <i_type,n[3],n[1],n[2]>                   107          1          -    Covered              
            bin <i_type,n[2],n[1],n[2]>                   121          1          -    Covered              
            bin <i_type,n[1],n[1],n[2]>                    90          1          -    Covered              
            bin <i_type,n[0],n[1],n[2]>                   136          1          -    Covered              
            bin <i_type,n[3],n[0],n[2]>                  1452          1          -    Covered              
            bin <i_type,n[2],n[0],n[2]>                  1574          1          -    Covered              
            bin <i_type,n[1],n[0],n[2]>                  1571          1          -    Covered              
            bin <i_type,n[0],n[0],n[2]>                  1731          1          -    Covered              
            bin <i_type,n[3],n[3],n[1]>                   139          1          -    Covered              
            bin <i_type,n[2],n[3],n[1]>                   147          1          -    Covered              
            bin <i_type,n[1],n[3],n[1]>                    88          1          -    Covered              
            bin <i_type,n[0],n[3],n[1]>                   140          1          -    Covered              
            bin <i_type,n[3],n[2],n[1]>                   119          1          -    Covered              
            bin <i_type,n[2],n[2],n[1]>                    91          1          -    Covered              
            bin <i_type,n[1],n[2],n[1]>                    96          1          -    Covered              
            bin <i_type,n[0],n[2],n[1]>                    93          1          -    Covered              
            bin <i_type,n[3],n[1],n[1]>                   118          1          -    Covered              
            bin <i_type,n[2],n[1],n[1]>                   114          1          -    Covered              
            bin <i_type,n[1],n[1],n[1]>                   139          1          -    Covered              
            bin <i_type,n[0],n[1],n[1]>                   100          1          -    Covered              
            bin <i_type,n[3],n[0],n[1]>                  1646          1          -    Covered              
            bin <i_type,n[2],n[0],n[1]>                  1440          1          -    Covered              
            bin <i_type,n[1],n[0],n[1]>                  1476          1          -    Covered              
            bin <i_type,n[0],n[0],n[1]>                  1697          1          -    Covered              
            bin <i_type,n[3],n[3],n[0]>                   193          1          -    Covered              
            bin <i_type,n[2],n[3],n[0]>                   204          1          -    Covered              
            bin <i_type,n[1],n[3],n[0]>                   191          1          -    Covered              
            bin <i_type,n[0],n[3],n[0]>                   223          1          -    Covered              
            bin <i_type,n[3],n[2],n[0]>                   212          1          -    Covered              
            bin <i_type,n[2],n[2],n[0]>                   207          1          -    Covered              
            bin <i_type,n[1],n[2],n[0]>                   220          1          -    Covered              
            bin <i_type,n[0],n[2],n[0]>                   201          1          -    Covered              
            bin <i_type,n[3],n[1],n[0]>                   221          1          -    Covered              
            bin <i_type,n[2],n[1],n[0]>                   216          1          -    Covered              
            bin <i_type,n[1],n[1],n[0]>                   176          1          -    Covered              
            bin <i_type,n[0],n[1],n[0]>                   172          1          -    Covered              
            bin <i_type,n[3],n[0],n[0]>                  1421          1          -    Covered              
            bin <i_type,n[2],n[0],n[0]>                  1514          1          -    Covered              
            bin <i_type,n[1],n[0],n[0]>                  1595          1          -    Covered              
            bin <i_type,n[0],n[0],n[0]>                  1601          1          -    Covered              
            bin <r_type,n[3],n[3],n[3]>                   310          1          -    Covered              
            bin <r_type,n[2],n[3],n[3]>                   259          1          -    Covered              
            bin <r_type,n[1],n[3],n[3]>                   340          1          -    Covered              
            bin <r_type,n[0],n[3],n[3]>                   268          1          -    Covered              
            bin <r_type,n[3],n[2],n[3]>                   247          1          -    Covered              
            bin <r_type,n[2],n[2],n[3]>                   250          1          -    Covered              
            bin <r_type,n[1],n[2],n[3]>                   313          1          -    Covered              
            bin <r_type,n[0],n[2],n[3]>                   306          1          -    Covered              
            bin <r_type,n[3],n[1],n[3]>                   307          1          -    Covered              
            bin <r_type,n[2],n[1],n[3]>                   243          1          -    Covered              
            bin <r_type,n[1],n[1],n[3]>                   321          1          -    Covered              
            bin <r_type,n[0],n[1],n[3]>                   299          1          -    Covered              
            bin <r_type,n[3],n[0],n[3]>                   393          1          -    Covered              
            bin <r_type,n[2],n[0],n[3]>                   405          1          -    Covered              
            bin <r_type,n[1],n[0],n[3]>                   428          1          -    Covered              
            bin <r_type,n[0],n[0],n[3]>                   503          1          -    Covered              
            bin <r_type,n[3],n[3],n[2]>                   251          1          -    Covered              
            bin <r_type,n[2],n[3],n[2]>                   310          1          -    Covered              
            bin <r_type,n[1],n[3],n[2]>                   238          1          -    Covered              
            bin <r_type,n[0],n[3],n[2]>                   237          1          -    Covered              
            bin <r_type,n[3],n[2],n[2]>                   309          1          -    Covered              
            bin <r_type,n[2],n[2],n[2]>                   255          1          -    Covered              
            bin <r_type,n[1],n[2],n[2]>                   283          1          -    Covered              
            bin <r_type,n[0],n[2],n[2]>                   274          1          -    Covered              
            bin <r_type,n[3],n[1],n[2]>                   307          1          -    Covered              
            bin <r_type,n[2],n[1],n[2]>                   302          1          -    Covered              
            bin <r_type,n[1],n[1],n[2]>                   254          1          -    Covered              
            bin <r_type,n[0],n[1],n[2]>                   298          1          -    Covered              
            bin <r_type,n[3],n[0],n[2]>                   415          1          -    Covered              
            bin <r_type,n[2],n[0],n[2]>                   446          1          -    Covered              
            bin <r_type,n[1],n[0],n[2]>                   376          1          -    Covered              
            bin <r_type,n[0],n[0],n[2]>                   534          1          -    Covered              
            bin <r_type,n[3],n[3],n[1]>                   330          1          -    Covered              
            bin <r_type,n[2],n[3],n[1]>                   332          1          -    Covered              
            bin <r_type,n[1],n[3],n[1]>                   273          1          -    Covered              
            bin <r_type,n[0],n[3],n[1]>                   369          1          -    Covered              
            bin <r_type,n[3],n[2],n[1]>                   279          1          -    Covered              
            bin <r_type,n[2],n[2],n[1]>                   231          1          -    Covered              
            bin <r_type,n[1],n[2],n[1]>                   256          1          -    Covered              
            bin <r_type,n[0],n[2],n[1]>                   245          1          -    Covered              
            bin <r_type,n[3],n[1],n[1]>                   297          1          -    Covered              
            bin <r_type,n[2],n[1],n[1]>                   270          1          -    Covered              
            bin <r_type,n[1],n[1],n[1]>                   330          1          -    Covered              
            bin <r_type,n[0],n[1],n[1]>                   299          1          -    Covered              
            bin <r_type,n[3],n[0],n[1]>                   466          1          -    Covered              
            bin <r_type,n[2],n[0],n[1]>                   433          1          -    Covered              
            bin <r_type,n[1],n[0],n[1]>                   393          1          -    Covered              
            bin <r_type,n[0],n[0],n[1]>                   499          1          -    Covered              
            bin <r_type,n[3],n[3],n[0]>                   289          1          -    Covered              
            bin <r_type,n[2],n[3],n[0]>                   321          1          -    Covered              
            bin <r_type,n[1],n[3],n[0]>                   300          1          -    Covered              
            bin <r_type,n[0],n[3],n[0]>                   348          1          -    Covered              
            bin <r_type,n[3],n[2],n[0]>                   305          1          -    Covered              
            bin <r_type,n[2],n[2],n[0]>                   372          1          -    Covered              
            bin <r_type,n[1],n[2],n[0]>                   334          1          -    Covered              
            bin <r_type,n[0],n[2],n[0]>                   312          1          -    Covered              
            bin <r_type,n[3],n[1],n[0]>                   305          1          -    Covered              
            bin <r_type,n[2],n[1],n[0]>                   321          1          -    Covered              
            bin <r_type,n[1],n[1],n[0]>                   325          1          -    Covered              
            bin <r_type,n[0],n[1],n[0]>                   278          1          -    Covered              
            bin <r_type,n[3],n[0],n[0]>                   499          1          -    Covered              
            bin <r_type,n[2],n[0],n[0]>                   452          1          -    Covered              
            bin <r_type,n[1],n[0],n[0]>                   454          1          -    Covered              
            bin <r_type,n[0],n[0],n[0]>                   526          1          -    Covered              
            bin <j_type,n[1],n[2],n[3]>                     0          1          1    ZERO                 
            bin <j_type,n[2],n[2],n[1]>                     0          1          1    ZERO                 
 TYPE /top/u_cpu/u_decoder/one_operand_cg             100.00%        100          -    Covered              
    covered/total bins:                                     7          7          -                      
    missing/total bins:                                     0          7          -                      
    % Hit:                                            100.00%        100          -                      
    Coverpoint opcode                                 100.00%        100          -    Covered              
        covered/total bins:                                 1          1          -                      
        missing/total bins:                                 0          1          -                      
        % Hit:                                        100.00%        100          -                      
    Coverpoint op1                                    100.00%        100          -    Covered              
        covered/total bins:                                 3          3          -                      
        missing/total bins:                                 0          3          -                      
        % Hit:                                        100.00%        100          -                      
    Cross #cross__0#                                  100.00%        100          -    Covered              
        covered/total bins:                                 3          3          -                      
        missing/total bins:                                 0          3          -                      
        % Hit:                                        100.00%        100          -                      
 Covergroup instance \/top/u_cpu/u_decoder/one_operand_inst  
                                                      100.00%        100          -    Covered              
    covered/total bins:                                     7          7          -                      
    missing/total bins:                                     0          7          -                      
    % Hit:                                            100.00%        100          -                      
    Coverpoint opcode                                 100.00%        100          -    Covered              
        covered/total bins:                                 1          1          -                      
        missing/total bins:                                 0          1          -                      
        % Hit:                                        100.00%        100          -                      
        bin one_operand                                  6372          1          -    Covered              
    Coverpoint op1                                    100.00%        100          -    Covered              
        covered/total bins:                                 3          3          -                      
        missing/total bins:                                 0          3          -                      
        % Hit:                                        100.00%        100          -                      
        bin negative                                    32884          1          -    Covered              
        bin zero                                         2324          1          -    Covered              
        bin positive                                    44810          1          -    Covered              
    Cross #cross__0#                                  100.00%        100          -    Covered              
        covered/total bins:                                 3          3          -                      
        missing/total bins:                                 0          3          -                      
        % Hit:                                        100.00%        100          -                      
        Auto, Default and User Defined Bins:
            bin <one_operand,positive>                   3179          1          -    Covered              
            bin <one_operand,zero>                         54          1          -    Covered              
            bin <one_operand,negative>                   3139          1          -    Covered              
 TYPE /top/u_cpu/u_decoder/two_operand_cg             100.00%        100          -    Covered              
    covered/total bins:                                    16         16          -                      
    missing/total bins:                                     0         16          -                      
    % Hit:                                            100.00%        100          -                      
    Coverpoint opcode                                 100.00%        100          -    Covered              
        covered/total bins:                                 1          1          -                      
        missing/total bins:                                 0          1          -                      
        % Hit:                                        100.00%        100          -                      
    Coverpoint op1                                    100.00%        100          -    Covered              
        covered/total bins:                                 3          3          -                      
        missing/total bins:                                 0          3          -                      
        % Hit:                                        100.00%        100          -                      
    Coverpoint op2                                    100.00%        100          -    Covered              
        covered/total bins:                                 3          3          -                      
        missing/total bins:                                 0          3          -                      
        % Hit:                                        100.00%        100          -                      
    Cross #cross__0#                                  100.00%        100          -    Covered              
        covered/total bins:                                 9          9          -                      
        missing/total bins:                                 0          9          -                      
        % Hit:                                        100.00%        100          -                      
 Covergroup instance \/top/u_cpu/u_decoder/two_operand_inst  
                                                      100.00%        100          -    Covered              
    covered/total bins:                                    16         16          -                      
    missing/total bins:                                     0         16          -                      
    % Hit:                                            100.00%        100          -                      
    Coverpoint opcode                                 100.00%        100          -    Covered              
        covered/total bins:                                 1          1          -                      
        missing/total bins:                                 0          1          -                      
        % Hit:                                        100.00%        100          -                      
        bin two_operand                                 50833          1          -    Covered              
    Coverpoint op1                                    100.00%        100          -    Covered              
        covered/total bins:                                 3          3          -                      
        missing/total bins:                                 0          3          -                      
        % Hit:                                        100.00%        100          -                      
        bin negative                                    32884          1          -    Covered              
        bin zero                                         2324          1          -    Covered              
        bin positive                                    44810          1          -    Covered              
    Coverpoint op2                                    100.00%        100          -    Covered              
        covered/total bins:                                 3          3          -                      
        missing/total bins:                                 0          3          -                      
        % Hit:                                        100.00%        100          -                      
        bin negative                                    32946          1          -    Covered              
        bin zero                                         7798          1          -    Covered              
        bin positive                                    39274          1          -    Covered              
    Cross #cross__0#                                  100.00%        100          -    Covered              
        covered/total bins:                                 9          9          -                      
        missing/total bins:                                 0          9          -                      
        % Hit:                                        100.00%        100          -                      
        Auto, Default and User Defined Bins:
            bin <two_operand,positive,positive>         14997          1          -    Covered              
            bin <two_operand,zero,positive>               838          1          -    Covered              
            bin <two_operand,negative,positive>         10759          1          -    Covered              
            bin <two_operand,positive,zero>               975          1          -    Covered              
            bin <two_operand,zero,zero>                    54          1          -    Covered              
            bin <two_operand,negative,zero>               897          1          -    Covered              
            bin <two_operand,positive,negative>         12520          1          -    Covered              
            bin <two_operand,zero,negative>               661          1          -    Covered              
            bin <two_operand,negative,negative>          9132          1          -    Covered              
 TYPE /top/u_cpu/u_decoder/three_operand_cg           100.00%        100          -    Covered              
    covered/total bins:                                    37         37          -                      
    missing/total bins:                                     0         37          -                      
    % Hit:                                            100.00%        100          -                      
    Coverpoint opcode                                 100.00%        100          -    Covered              
        covered/total bins:                                 1          1          -                      
        missing/total bins:                                 0          1          -                      
        % Hit:                                        100.00%        100          -                      
    Coverpoint op1                                    100.00%        100          -    Covered              
        covered/total bins:                                 3          3          -                      
        missing/total bins:                                 0          3          -                      
        % Hit:                                        100.00%        100          -                      
    Coverpoint op2                                    100.00%        100          -    Covered              
        covered/total bins:                                 3          3          -                      
        missing/total bins:                                 0          3          -                      
        % Hit:                                        100.00%        100          -                      
    Coverpoint op3                                    100.00%        100          -    Covered              
        covered/total bins:                                 3          3          -                      
        missing/total bins:                                 0          3          -                      
        % Hit:                                        100.00%        100          -                      
    Cross #cross__0#                                  100.00%        100          -    Covered              
        covered/total bins:                                27         27          -                      
        missing/total bins:                                 0         27          -                      
        % Hit:                                        100.00%        100          -                      
 Covergroup instance \/top/u_cpu/u_decoder/three_operand_inst  
                                                      100.00%        100          -    Covered              
    covered/total bins:                                    37         37          -                      
    missing/total bins:                                     0         37          -                      
    % Hit:                                            100.00%        100          -                      
    Coverpoint opcode                                 100.00%        100          -    Covered              
        covered/total bins:                                 1          1          -                      
        missing/total bins:                                 0          1          -                      
        % Hit:                                        100.00%        100          -                      
        bin three_operand                               18616          1          -    Covered              
    Coverpoint op1                                    100.00%        100          -    Covered              
        covered/total bins:                                 3          3          -                      
        missing/total bins:                                 0          3          -                      
        % Hit:                                        100.00%        100          -                      
        bin negative                                    32884          1          -    Covered              
        bin zero                                         2324          1          -    Covered              
        bin positive                                    44810          1          -    Covered              
    Coverpoint op2                                    100.00%        100          -    Covered              
        covered/total bins:                                 3          3          -                      
        missing/total bins:                                 0          3          -                      
        % Hit:                                        100.00%        100          -                      
        bin negative                                    32946          1          -    Covered              
        bin zero                                         7798          1          -    Covered              
        bin positive                                    39274          1          -    Covered              
    Coverpoint op3                                    100.00%        100          -    Covered              
        covered/total bins:                                 3          3          -                      
        missing/total bins:                                 0          3          -                      
        % Hit:                                        100.00%        100          -                      
        bin negative                                     9328          1          -    Covered              
        bin zero                                        61590          1          -    Covered              
        bin positive                                     9100          1          -    Covered              
    Cross #cross__0#                                  100.00%        100          -    Covered              
        covered/total bins:                                27         27          -                      
        missing/total bins:                                 0         27          -                      
        % Hit:                                        100.00%        100          -                      
        Auto, Default and User Defined Bins:
            bin <three_operand,positive,positive,positive> 
                                                         2302          1          -    Covered              
            bin <three_operand,zero,positive,positive> 
                                                          126          1          -    Covered              
            bin <three_operand,negative,positive,positive> 
                                                         1107          1          -    Covered              
            bin <three_operand,positive,zero,positive> 
                                                          105          1          -    Covered              
            bin <three_operand,zero,zero,positive>          3          1          -    Covered              
            bin <three_operand,negative,zero,positive> 
                                                           75          1          -    Covered              
            bin <three_operand,positive,negative,positive> 
                                                         2210          1          -    Covered              
            bin <three_operand,zero,negative,positive> 
                                                          137          1          -    Covered              
            bin <three_operand,negative,negative,positive> 
                                                         1306          1          -    Covered              
            bin <three_operand,positive,positive,zero> 
                                                          920          1          -    Covered              
            bin <three_operand,zero,positive,zero>         44          1          -    Covered              
            bin <three_operand,negative,positive,zero> 
                                                          845          1          -    Covered              
            bin <three_operand,positive,zero,zero>        204          1          -    Covered              
            bin <three_operand,zero,zero,zero>              1          1          -    Covered              
            bin <three_operand,negative,zero,zero>        208          1          -    Covered              
            bin <three_operand,positive,negative,zero> 
                                                          725          1          -    Covered              
            bin <three_operand,zero,negative,zero>         41          1          -    Covered              
            bin <three_operand,negative,negative,zero> 
                                                          703          1          -    Covered              
            bin <three_operand,positive,positive,negative> 
                                                         2338          1          -    Covered              
            bin <three_operand,zero,positive,negative> 
                                                          124          1          -    Covered              
            bin <three_operand,negative,positive,negative> 
                                                         1219          1          -    Covered              
            bin <three_operand,positive,zero,negative> 
                                                           59          1          -    Covered              
            bin <three_operand,zero,zero,negative>          9          1          -    Covered              
            bin <three_operand,negative,zero,negative> 
                                                          100          1          -    Covered              
            bin <three_operand,positive,negative,negative> 
                                                         2232          1          -    Covered              
            bin <three_operand,zero,negative,negative> 
                                                          110          1          -    Covered              
            bin <three_operand,negative,negative,negative> 
                                                         1363          1          -    Covered              
 TYPE /top/u_cpu/u_alu/alu_cg                          98.80%        100          -    Uncovered            
    covered/total bins:                                   207        216          -                      
    missing/total bins:                                     9        216          -                      
    % Hit:                                             95.83%        100          -                      
    Coverpoint opcode                                 100.00%        100          -    Covered              
        covered/total bins:                                21         21          -                      
        missing/total bins:                                 0         21          -                      
        % Hit:                                        100.00%        100          -                      
    Coverpoint op1                                    100.00%        100          -    Covered              
        covered/total bins:                                 3          3          -                      
        missing/total bins:                                 0          3          -                      
        % Hit:                                        100.00%        100          -                      
    Coverpoint op2                                    100.00%        100          -    Covered              
        covered/total bins:                                 3          3          -                      
        missing/total bins:                                 0          3          -                      
        % Hit:                                        100.00%        100          -                      
    Cross #cross__0#                                   95.23%        100          -    Uncovered            
        covered/total bins:                               180        189          -                      
        missing/total bins:                                 9        189          -                      
        % Hit:                                         95.23%        100          -                      
 Covergroup instance \/top/u_cpu/u_alu/alu_cg_inst  
                                                       98.80%        100          -    Uncovered            
    covered/total bins:                                   207        216          -                      
    missing/total bins:                                     9        216          -                      
    % Hit:                                             95.83%        100          -                      
    Coverpoint opcode                                 100.00%        100          -    Covered              
        covered/total bins:                                21         21          -                      
        missing/total bins:                                 0         21          -                      
        % Hit:                                        100.00%        100          -                      
        bin instr[ADDI]                                  2048          1          -    Covered              
        bin instr[STLI]                                  1964          1          -    Covered              
        bin instr[STLUI]                                 2112          1          -    Covered              
        bin instr[ANDI]                                  2180          1          -    Covered              
        bin instr[ORI]                                   2278          1          -    Covered              
        bin instr[XORI]                                  2076          1          -    Covered              
        bin instr[SLLI]                                  2112          1          -    Covered              
        bin instr[SRLI]                                  2124          1          -    Covered              
        bin instr[SRAI]                                  2080          1          -    Covered              
        bin instr[LUI]                                   2124          1          -    Covered              
        bin instr[AUIPC]                                 2184          1          -    Covered              
        bin instr[ADD]                                   2308          1          -    Covered              
        bin instr[SUB]                                   2276          1          -    Covered              
        bin instr[STL]                                   4080          1          -    Covered              
        bin instr[STLU]                                  1960          1          -    Covered              
        bin instr[AND]                                   2068          1          -    Covered              
        bin instr[OR]                                    2100          1          -    Covered              
        bin instr[XOR]                                   2196          1          -    Covered              
        bin instr[SLL]                                   2204          1          -    Covered              
        bin instr[SRL]                                   2072          1          -    Covered              
        bin instr[SRA]                                   2132          1          -    Covered              
    Coverpoint op1                                    100.00%        100          -    Covered              
        covered/total bins:                                 3          3          -                      
        missing/total bins:                                 0          3          -                      
        % Hit:                                        100.00%        100          -                      
        bin zero                                         2324          1          -    Covered              
        bin positive                                    44810          1          -    Covered              
        bin negative                                    32884          1          -    Covered              
    Coverpoint op2                                    100.00%        100          -    Covered              
        covered/total bins:                                 3          3          -                      
        missing/total bins:                                 0          3          -                      
        % Hit:                                        100.00%        100          -                      
        bin zero                                         7798          1          -    Covered              
        bin positive                                    39274          1          -    Covered              
        bin negative                                    32946          1          -    Covered              
    Cross #cross__0#                                   95.23%        100          -    Uncovered            
        covered/total bins:                               180        189          -                      
        missing/total bins:                                 9        189          -                      
        % Hit:                                         95.23%        100          -                      
        Auto, Default and User Defined Bins:
            bin <instr[SRA],negative,negative>            509          1          -    Covered              
            bin <instr[SRL],negative,negative>            470          1          -    Covered              
            bin <instr[SLL],negative,negative>            513          1          -    Covered              
            bin <instr[XOR],negative,negative>            521          1          -    Covered              
            bin <instr[OR],negative,negative>             526          1          -    Covered              
            bin <instr[AND],negative,negative>            481          1          -    Covered              
            bin <instr[STLU],negative,negative>           443          1          -    Covered              
            bin <instr[STL],negative,negative>            927          1          -    Covered              
            bin <instr[SUB],negative,negative>            566          1          -    Covered              
            bin <instr[ADD],negative,negative>            516          1          -    Covered              
            bin <instr[AUIPC],negative,negative>          110          1          -    Covered              
            bin <instr[LUI],negative,negative>            107          1          -    Covered              
            bin <instr[SRAI],negative,negative>           103          1          -    Covered              
            bin <instr[SRLI],negative,negative>           108          1          -    Covered              
            bin <instr[SLLI],negative,negative>           107          1          -    Covered              
            bin <instr[XORI],negative,negative>           472          1          -    Covered              
            bin <instr[ORI],negative,negative>            539          1          -    Covered              
            bin <instr[ANDI],negative,negative>           518          1          -    Covered              
            bin <instr[STLUI],negative,negative>          457          1          -    Covered              
            bin <instr[STLI],negative,negative>           472          1          -    Covered              
            bin <instr[ADDI],negative,negative>           505          1          -    Covered              
            bin <instr[SRA],positive,negative>            447          1          -    Covered              
            bin <instr[SRL],positive,negative>            445          1          -    Covered              
            bin <instr[SLL],positive,negative>            471          1          -    Covered              
            bin <instr[XOR],positive,negative>            499          1          -    Covered              
            bin <instr[OR],positive,negative>             495          1          -    Covered              
            bin <instr[AND],positive,negative>            449          1          -    Covered              
            bin <instr[STLU],positive,negative>           410          1          -    Covered              
            bin <instr[STL],positive,negative>            959          1          -    Covered              
            bin <instr[SUB],positive,negative>            438          1          -    Covered              
            bin <instr[ADD],positive,negative>            536          1          -    Covered              
            bin <instr[AUIPC],positive,negative>           92          1          -    Covered              
            bin <instr[LUI],positive,negative>            108          1          -    Covered              
            bin <instr[SRAI],positive,negative>            94          1          -    Covered              
            bin <instr[SRLI],positive,negative>           105          1          -    Covered              
            bin <instr[SLLI],positive,negative>           122          1          -    Covered              
            bin <instr[XORI],positive,negative>           488          1          -    Covered              
            bin <instr[ORI],positive,negative>            534          1          -    Covered              
            bin <instr[ANDI],positive,negative>           480          1          -    Covered              
            bin <instr[STLUI],positive,negative>          491          1          -    Covered              
            bin <instr[STLI],positive,negative>           428          1          -    Covered              
            bin <instr[ADDI],positive,negative>           444          1          -    Covered              
            bin <instr[SRA],zero,negative>                 23          1          -    Covered              
            bin <instr[SRL],zero,negative>                 26          1          -    Covered              
            bin <instr[SLL],zero,negative>                 23          1          -    Covered              
            bin <instr[XOR],zero,negative>                 29          1          -    Covered              
            bin <instr[OR],zero,negative>                  10          1          -    Covered              
            bin <instr[AND],zero,negative>                 23          1          -    Covered              
            bin <instr[STLU],zero,negative>                31          1          -    Covered              
            bin <instr[STL],zero,negative>                 92          1          -    Covered              
            bin <instr[SUB],zero,negative>                 30          1          -    Covered              
            bin <instr[ADD],zero,negative>                 19          1          -    Covered              
            bin <instr[AUIPC],zero,negative>               11          1          -    Covered              
            bin <instr[LUI],zero,negative>                  6          1          -    Covered              
            bin <instr[SRAI],zero,negative>                 8          1          -    Covered              
            bin <instr[SRLI],zero,negative>                 7          1          -    Covered              
            bin <instr[SLLI],zero,negative>                 5          1          -    Covered              
            bin <instr[XORI],zero,negative>                30          1          -    Covered              
            bin <instr[ORI],zero,negative>                 22          1          -    Covered              
            bin <instr[ANDI],zero,negative>                25          1          -    Covered              
            bin <instr[STLUI],zero,negative>               31          1          -    Covered              
            bin <instr[STLI],zero,negative>                31          1          -    Covered              
            bin <instr[ADDI],zero,negative>                27          1          -    Covered              
            bin <instr[SRA],negative,positive>            516          1          -    Covered              
            bin <instr[SRL],negative,positive>            478          1          -    Covered              
            bin <instr[SLL],negative,positive>            517          1          -    Covered              
            bin <instr[XOR],negative,positive>            480          1          -    Covered              
            bin <instr[OR],negative,positive>             464          1          -    Covered              
            bin <instr[AND],negative,positive>            482          1          -    Covered              
            bin <instr[STLU],negative,positive>           474          1          -    Covered              
            bin <instr[STL],negative,positive>            833          1          -    Covered              
            bin <instr[SUB],negative,positive>            470          1          -    Covered              
            bin <instr[ADD],negative,positive>            558          1          -    Covered              
            bin <instr[AUIPC],negative,positive>          133          1          -    Covered              
            bin <instr[LUI],negative,positive>            134          1          -    Covered              
            bin <instr[SRAI],negative,positive>           820          1          -    Covered              
            bin <instr[SRLI],negative,positive>           892          1          -    Covered              
            bin <instr[SLLI],negative,positive>           886          1          -    Covered              
            bin <instr[XORI],negative,positive>           507          1          -    Covered              
            bin <instr[ORI],negative,positive>            534          1          -    Covered              
            bin <instr[ANDI],negative,positive>           570          1          -    Covered              
            bin <instr[STLUI],negative,positive>          515          1          -    Covered              
            bin <instr[STLI],negative,positive>           496          1          -    Covered              
            bin <instr[ADDI],negative,positive>           486          1          -    Covered              
            bin <instr[SRA],positive,positive>            497          1          -    Covered              
            bin <instr[SRL],positive,positive>            537          1          -    Covered              
            bin <instr[SLL],positive,positive>            514          1          -    Covered              
            bin <instr[XOR],positive,positive>            521          1          -    Covered              
            bin <instr[OR],positive,positive>             472          1          -    Covered              
            bin <instr[AND],positive,positive>            525          1          -    Covered              
            bin <instr[STLU],positive,positive>           474          1          -    Covered              
            bin <instr[STL],positive,positive>            997          1          -    Covered              
            bin <instr[SUB],positive,positive>            608          1          -    Covered              
            bin <instr[ADD],positive,positive>            552          1          -    Covered              
            bin <instr[AUIPC],positive,positive>          129          1          -    Covered              
            bin <instr[LUI],positive,positive>            121          1          -    Covered              
            bin <instr[SRAI],positive,positive>           884          1          -    Covered              
            bin <instr[SRLI],positive,positive>           875          1          -    Covered              
            bin <instr[SLLI],positive,positive>           848          1          -    Covered              
            bin <instr[XORI],positive,positive>           487          1          -    Covered              
            bin <instr[ORI],positive,positive>            543          1          -    Covered              
            bin <instr[ANDI],positive,positive>           482          1          -    Covered              
            bin <instr[STLUI],positive,positive>          526          1          -    Covered              
            bin <instr[STLI],positive,positive>           453          1          -    Covered              
            bin <instr[ADDI],positive,positive>           512          1          -    Covered              
            bin <instr[SRA],zero,positive>                 43          1          -    Covered              
            bin <instr[SRL],zero,positive>                 31          1          -    Covered              
            bin <instr[SLL],zero,positive>                 38          1          -    Covered              
            bin <instr[XOR],zero,positive>                 20          1          -    Covered              
            bin <instr[OR],zero,positive>                  26          1          -    Covered              
            bin <instr[AND],zero,positive>                 30          1          -    Covered              
            bin <instr[STLU],zero,positive>                26          1          -    Covered              
            bin <instr[STL],zero,positive>                 49          1          -    Covered              
            bin <instr[SUB],zero,positive>                 47          1          -    Covered              
            bin <instr[ADD],zero,positive>                 28          1          -    Covered              
            bin <instr[AUIPC],zero,positive>               12          1          -    Covered              
            bin <instr[LUI],zero,positive>                  8          1          -    Covered              
            bin <instr[SRAI],zero,positive>                71          1          -    Covered              
            bin <instr[SRLI],zero,positive>                53          1          -    Covered              
            bin <instr[SLLI],zero,positive>                53          1          -    Covered              
            bin <instr[XORI],zero,positive>                47          1          -    Covered              
            bin <instr[ORI],zero,positive>                 42          1          -    Covered              
            bin <instr[ANDI],zero,positive>                50          1          -    Covered              
            bin <instr[STLUI],zero,positive>               41          1          -    Covered              
            bin <instr[STLI],zero,positive>                35          1          -    Covered              
            bin <instr[ADDI],zero,positive>                18          1          -    Covered              
            bin <instr[SRA],negative,zero>                 38          1          -    Covered              
            bin <instr[SRL],negative,zero>                 48          1          -    Covered              
            bin <instr[SLL],negative,zero>                 61          1          -    Covered              
            bin <instr[XOR],negative,zero>                 54          1          -    Covered              
            bin <instr[OR],negative,zero>                  48          1          -    Covered              
            bin <instr[AND],negative,zero>                 41          1          -    Covered              
            bin <instr[STLU],negative,zero>                52          1          -    Covered              
            bin <instr[STL],negative,zero>                101          1          -    Covered              
            bin <instr[SUB],negative,zero>                 47          1          -    Covered              
            bin <instr[ADD],negative,zero>                 55          1          -    Covered              
            bin <instr[AUIPC],negative,zero>              827          1          -    Covered              
            bin <instr[LUI],negative,zero>                800          1          -    Covered              
            bin <instr[SRAI],negative,zero>                46          1          -    Covered              
            bin <instr[SRLI],negative,zero>                35          1          -    Covered              
            bin <instr[SLLI],negative,zero>                52          1          -    Covered              
            bin <instr[XORI],negative,zero>                24          1          -    Covered              
            bin <instr[ORI],negative,zero>                 29          1          -    Covered              
            bin <instr[ANDI],negative,zero>                25          1          -    Covered              
            bin <instr[STLUI],negative,zero>               27          1          -    Covered              
            bin <instr[STLI],negative,zero>                22          1          -    Covered              
            bin <instr[ADDI],negative,zero>                24          1          -    Covered              
            bin <instr[SRA],positive,zero>                 57          1          -    Covered              
            bin <instr[SRL],positive,zero>                 33          1          -    Covered              
            bin <instr[SLL],positive,zero>                 67          1          -    Covered              
            bin <instr[XOR],positive,zero>                 68          1          -    Covered              
            bin <instr[OR],positive,zero>                  54          1          -    Covered              
            bin <instr[AND],positive,zero>                 36          1          -    Covered              
            bin <instr[STLU],positive,zero>                49          1          -    Covered              
            bin <instr[STL],positive,zero>                119          1          -    Covered              
            bin <instr[SUB],positive,zero>                 64          1          -    Covered              
            bin <instr[ADD],positive,zero>                 44          1          -    Covered              
            bin <instr[AUIPC],positive,zero>              870          1          -    Covered              
            bin <instr[LUI],positive,zero>                840          1          -    Covered              
            bin <instr[SRAI],positive,zero>                51          1          -    Covered              
            bin <instr[SRLI],positive,zero>                49          1          -    Covered              
            bin <instr[SLLI],positive,zero>                36          1          -    Covered              
            bin <instr[XORI],positive,zero>                21          1          -    Covered              
            bin <instr[ORI],positive,zero>                 33          1          -    Covered              
            bin <instr[ANDI],positive,zero>                28          1          -    Covered              
            bin <instr[STLUI],positive,zero>               24          1          -    Covered              
            bin <instr[STLI],positive,zero>                27          1          -    Covered              
            bin <instr[ADDI],positive,zero>                32          1          -    Covered              
            bin <instr[SRA],zero,zero>                      2          1          -    Covered              
            bin <instr[SRL],zero,zero>                      4          1          -    Covered              
            bin <instr[XOR],zero,zero>                      4          1          -    Covered              
            bin <instr[OR],zero,zero>                       5          1          -    Covered              
            bin <instr[AND],zero,zero>                      1          1          -    Covered              
            bin <instr[STLU],zero,zero>                     1          1          -    Covered              
            bin <instr[STL],zero,zero>                      3          1          -    Covered              
            bin <instr[SUB],zero,zero>                      6          1          -    Covered              
            bin <instr[SRAI],zero,zero>                     3          1          -    Covered              
            bin <instr[SLLI],zero,zero>                     3          1          -    Covered              
            bin <instr[ORI],zero,zero>                      2          1          -    Covered              
            bin <instr[ANDI],zero,zero>                     2          1          -    Covered              
            bin <instr[SLL],zero,zero>                      0          1          1    ZERO                 
            bin <instr[ADD],zero,zero>                      0          1          1    ZERO                 
            bin <instr[AUIPC],zero,zero>                    0          1          1    ZERO                 
            bin <instr[LUI],zero,zero>                      0          1          1    ZERO                 
            bin <instr[SRLI],zero,zero>                     0          1          1    ZERO                 
            bin <instr[XORI],zero,zero>                     0          1          1    ZERO                 
            bin <instr[STLUI],zero,zero>                    0          1          1    ZERO                 
            bin <instr[STLI],zero,zero>                     0          1          1    ZERO                 
            bin <instr[ADDI],zero,zero>                     0          1          1    ZERO                 
 TYPE /top/u_cpu/u_branch_unit/branch_cg              100.00%        100          -    Covered              
    covered/total bins:                                    26         26          -                      
    missing/total bins:                                     0         26          -                      
    % Hit:                                            100.00%        100          -                      
    Coverpoint opcode                                 100.00%        100          -    Covered              
        covered/total bins:                                 8          8          -                      
        missing/total bins:                                 0          8          -                      
        % Hit:                                        100.00%        100          -                      
    Coverpoint next_pc                                100.00%        100          -    Covered              
        covered/total bins:                                 2          2          -                      
        missing/total bins:                                 0          2          -                      
        % Hit:                                        100.00%        100          -                      
    Cross #cross__0#                                  100.00%        100          -    Covered              
        covered/total bins:                                16         16          -                      
        missing/total bins:                                 0         16          -                      
        % Hit:                                        100.00%        100          -                      
 Covergroup instance \/top/u_cpu/u_branch_unit/branch_cg_inst  
                                                      100.00%        100          -    Covered              
    covered/total bins:                                    26         26          -                      
    missing/total bins:                                     0         26          -                      
    % Hit:                                            100.00%        100          -                      
    Coverpoint opcode                                 100.00%        100          -    Covered              
        covered/total bins:                                 8          8          -                      
        missing/total bins:                                 0          8          -                      
        % Hit:                                        100.00%        100          -                      
        bin instr[JAL]                                   2064          1          -    Covered              
        bin instr[JALR]                                  2187          1          -    Covered              
        bin instr[BEQ]                                   2188          1          -    Covered              
        bin instr[BNE]                                   2152          1          -    Covered              
        bin instr[BLT]                                   2160          1          -    Covered              
        bin instr[BLTU]                                  1960          1          -    Covered              
        bin instr[BGE]                                   1952          1          -    Covered              
        bin instr[BGEU]                                  2248          1          -    Covered              
    Coverpoint next_pc                                100.00%        100          -    Covered              
        covered/total bins:                                 2          2          -                      
        missing/total bins:                                 0          2          -                      
        % Hit:                                        100.00%        100          -                      
        ignore_bin zero                                    26                     -    Occurred             
        bin positive                                    74578          1          -    Covered              
        bin negative                                     5412          1          -    Covered              
    Cross #cross__0#                                  100.00%        100          -    Covered              
        covered/total bins:                                16         16          -                      
        missing/total bins:                                 0         16          -                      
        % Hit:                                        100.00%        100          -                      
        Auto, Default and User Defined Bins:
            bin <instr[BGEU],negative>                    342          1          -    Covered              
            bin <instr[BGE],negative>                     346          1          -    Covered              
            bin <instr[BLTU],negative>                    306          1          -    Covered              
            bin <instr[BLT],negative>                     318          1          -    Covered              
            bin <instr[BNE],negative>                     638          1          -    Covered              
            bin <instr[BEQ],negative>                      92          1          -    Covered              
            bin <instr[JALR],negative>                    624          1          -    Covered              
            bin <instr[JAL],negative>                     576          1          -    Covered              
            bin <instr[BGEU],positive>                   1906          1          -    Covered              
            bin <instr[BGE],positive>                    1602          1          -    Covered              
            bin <instr[BLTU],positive>                   1654          1          -    Covered              
            bin <instr[BLT],positive>                    1842          1          -    Covered              
            bin <instr[BNE],positive>                    1514          1          -    Covered              
            bin <instr[BEQ],positive>                    2096          1          -    Covered              
            bin <instr[JALR],positive>                   1542          1          -    Covered              
            bin <instr[JAL],positive>                    1488          1          -    Covered              
 TYPE /top/u_cpu/u_memory_ctrl/mcu_cg                  93.05%        100          -    Uncovered            
    covered/total bins:                                    30         35          -                      
    missing/total bins:                                     5         35          -                      
    % Hit:                                             85.71%        100          -                      
    Coverpoint opcode                                 100.00%        100          -    Covered              
        covered/total bins:                                 8          8          -                      
        missing/total bins:                                 0          8          -                      
        % Hit:                                        100.00%        100          -                      
    Coverpoint result_reg                             100.00%        100          -    Covered              
        covered/total bins:                                 3          3          -                      
        missing/total bins:                                 0          3          -                      
        % Hit:                                        100.00%        100          -                      
    Cross #cross__0#                                   79.16%        100          -    Uncovered            
        covered/total bins:                                19         24          -                      
        missing/total bins:                                 5         24          -                      
        % Hit:                                         79.16%        100          -                      
 Covergroup instance \/top/u_cpu/u_memory_ctrl/mcu_cg_inst  
                                                       93.05%        100          -    Uncovered            
    covered/total bins:                                    30         35          -                      
    missing/total bins:                                     5         35          -                      
    % Hit:                                             85.71%        100          -                      
    Coverpoint opcode                                 100.00%        100          -    Covered              
        covered/total bins:                                 8          8          -                      
        missing/total bins:                                 0          8          -                      
        % Hit:                                        100.00%        100          -                      
        bin instr[LW]                                    2284          1          -    Covered              
        bin instr[LH]                                    2116          1          -    Covered              
        bin instr[LB]                                    1888          1          -    Covered              
        bin instr[LHU]                                   2024          1          -    Covered              
        bin instr[LBU]                                   2160          1          -    Covered              
        bin instr[SW]                                    2020          1          -    Covered              
        bin instr[SH]                                    1900          1          -    Covered              
        bin instr[SB]                                    2036          1          -    Covered              
    Coverpoint result_reg                             100.00%        100          -    Covered              
        covered/total bins:                                 3          3          -                      
        missing/total bins:                                 0          3          -                      
        % Hit:                                        100.00%        100          -                      
        bin positive                                    55254          1          -    Covered              
        bin zero                                          163          1          -    Covered              
        bin negative                                    24600          1          -    Covered              
    Cross #cross__0#                                   79.16%        100          -    Uncovered            
        covered/total bins:                                19         24          -                      
        missing/total bins:                                 5         24          -                      
        % Hit:                                         79.16%        100          -                      
        Auto, Default and User Defined Bins:
            bin <instr[SB],negative>                      604          1          -    Covered              
            bin <instr[SH],negative>                      564          1          -    Covered              
            bin <instr[SW],negative>                      684          1          -    Covered              
            bin <instr[LBU],negative>                     326          1          -    Covered              
            bin <instr[LHU],negative>                     292          1          -    Covered              
            bin <instr[LB],negative>                      804          1          -    Covered              
            bin <instr[LH],negative>                      826          1          -    Covered              
            bin <instr[LW],negative>                      936          1          -    Covered              
            bin <instr[SB],zero>                           12          1          -    Covered              
            bin <instr[LBU],zero>                           8          1          -    Covered              
            bin <instr[LB],zero>                           10          1          -    Covered              
            bin <instr[SB],positive>                     1420          1          -    Covered              
            bin <instr[SH],positive>                     1336          1          -    Covered              
            bin <instr[SW],positive>                     1336          1          -    Covered              
            bin <instr[LBU],positive>                    1826          1          -    Covered              
            bin <instr[LHU],positive>                    1732          1          -    Covered              
            bin <instr[LB],positive>                     1074          1          -    Covered              
            bin <instr[LH],positive>                     1290          1          -    Covered              
            bin <instr[LW],positive>                     1348          1          -    Covered              
            bin <instr[SH],zero>                            0          1          1    ZERO                 
            bin <instr[SW],zero>                            0          1          1    ZERO                 
            bin <instr[LHU],zero>                           0          1          1    ZERO                 
            bin <instr[LH],zero>                            0          1          1    ZERO                 
            bin <instr[LW],zero>                            0          1          1    ZERO                 
 TYPE /top/u_cpu/u_memory_ctrl/mcu_halfword_cg         91.66%        100          -    Uncovered            
    covered/total bins:                                    15         19          -                      
    missing/total bins:                                     4         19          -                      
    % Hit:                                             78.94%        100          -                      
    Coverpoint opcode                                 100.00%        100          -    Covered              
        covered/total bins:                                 2          2          -                      
        missing/total bins:                                 0          2          -                      
        % Hit:                                        100.00%        100          -                      
    Coverpoint result_reg                             100.00%        100          -    Covered              
        covered/total bins:                                 3          3          -                      
        missing/total bins:                                 0          3          -                      
        % Hit:                                        100.00%        100          -                      
    Coverpoint offset                                 100.00%        100          -    Covered              
        covered/total bins:                                 2          2          -                      
        missing/total bins:                                 0          2          -                      
        % Hit:                                        100.00%        100          -                      
    Cross #cross__0#                                   66.66%        100          -    Uncovered            
        covered/total bins:                                 8         12          -                      
        missing/total bins:                                 4         12          -                      
        % Hit:                                         66.66%        100          -                      
 Covergroup instance \/top/u_cpu/u_memory_ctrl/mcu_halfword_cg_inst  
                                                       91.66%        100          -    Uncovered            
    covered/total bins:                                    15         19          -                      
    missing/total bins:                                     4         19          -                      
    % Hit:                                             78.94%        100          -                      
    Coverpoint opcode                                 100.00%        100          -    Covered              
        covered/total bins:                                 2          2          -                      
        missing/total bins:                                 0          2          -                      
        % Hit:                                        100.00%        100          -                      
        bin instr[LH]                                    2116          1          -    Covered              
        bin instr[LHU]                                   2024          1          -    Covered              
    Coverpoint result_reg                             100.00%        100          -    Covered              
        covered/total bins:                                 3          3          -                      
        missing/total bins:                                 0          3          -                      
        % Hit:                                        100.00%        100          -                      
        bin positive                                    55254          1          -    Covered              
        bin zero                                          163          1          -    Covered              
        bin negative                                    24600          1          -    Covered              
    Coverpoint offset                                 100.00%        100          -    Covered              
        covered/total bins:                                 2          2          -                      
        missing/total bins:                                 0          2          -                      
        % Hit:                                        100.00%        100          -                      
        ignore_bin misaligned                            1528                     -    Occurred             
        bin offset[0]                                   76155          1          -    Covered              
        bin offset[1]                                    2334          1          -    Covered              
    Cross #cross__0#                                   66.66%        100          -    Uncovered            
        covered/total bins:                                 8         12          -                      
        missing/total bins:                                 4         12          -                      
        % Hit:                                         66.66%        100          -                      
        Auto, Default and User Defined Bins:
            bin <instr[LHU],negative,offset[1]>            78          1          -    Covered              
            bin <instr[LH],negative,offset[1]>            208          1          -    Covered              
            bin <instr[LHU],negative,offset[0]>           214          1          -    Covered              
            bin <instr[LH],negative,offset[0]>            618          1          -    Covered              
            bin <instr[LHU],positive,offset[1]>           436          1          -    Covered              
            bin <instr[LH],positive,offset[1]>            326          1          -    Covered              
            bin <instr[LHU],positive,offset[0]>          1296          1          -    Covered              
            bin <instr[LH],positive,offset[0]>            964          1          -    Covered              
            bin <*,zero,*>                                  0          1          4    ZERO                 
 TYPE /top/u_cpu/u_memory_ctrl/mcu_byte_cg            100.00%        100          -    Covered              
    covered/total bins:                                    19         19          -                      
    missing/total bins:                                     0         19          -                      
    % Hit:                                            100.00%        100          -                      
    Coverpoint opcode                                 100.00%        100          -    Covered              
        covered/total bins:                                 2          2          -                      
        missing/total bins:                                 0          2          -                      
        % Hit:                                        100.00%        100          -                      
    Coverpoint result_reg                             100.00%        100          -    Covered              
        covered/total bins:                                 3          3          -                      
        missing/total bins:                                 0          3          -                      
        % Hit:                                        100.00%        100          -                      
    Coverpoint offset                                 100.00%        100          -    Covered              
        covered/total bins:                                 2          2          -                      
        missing/total bins:                                 0          2          -                      
        % Hit:                                        100.00%        100          -                      
    Cross #cross__0#                                  100.00%        100          -    Covered              
        covered/total bins:                                12         12          -                      
        missing/total bins:                                 0         12          -                      
        % Hit:                                        100.00%        100          -                      
 Covergroup instance \/top/u_cpu/u_memory_ctrl/mcu_byte_cg_inst  
                                                      100.00%        100          -    Covered              
    covered/total bins:                                    19         19          -                      
    missing/total bins:                                     0         19          -                      
    % Hit:                                            100.00%        100          -                      
    Coverpoint opcode                                 100.00%        100          -    Covered              
        covered/total bins:                                 2          2          -                      
        missing/total bins:                                 0          2          -                      
        % Hit:                                        100.00%        100          -                      
        bin instr[LB]                                    1888          1          -    Covered              
        bin instr[LBU]                                   2160          1          -    Covered              
    Coverpoint result_reg                             100.00%        100          -    Covered              
        covered/total bins:                                 3          3          -                      
        missing/total bins:                                 0          3          -                      
        % Hit:                                        100.00%        100          -                      
        bin positive                                    55254          1          -    Covered              
        bin zero                                          163          1          -    Covered              
        bin negative                                    24600          1          -    Covered              
    Coverpoint offset                                 100.00%        100          -    Covered              
        covered/total bins:                                 2          2          -                      
        missing/total bins:                                 0          2          -                      
        % Hit:                                        100.00%        100          -                      
        bin offset[0]                                   76929          1          -    Covered              
        bin offset[1]                                    3088          1          -    Covered              
    Cross #cross__0#                                  100.00%        100          -    Covered              
        covered/total bins:                                12         12          -                      
        missing/total bins:                                 0         12          -                      
        % Hit:                                        100.00%        100          -                      
        Auto, Default and User Defined Bins:
            bin <instr[LBU],negative,offset[1]>            72          1          -    Covered              
            bin <instr[LB],negative,offset[1]>            209          1          -    Covered              
            bin <instr[LBU],negative,offset[0]>           254          1          -    Covered              
            bin <instr[LB],negative,offset[0]>            595          1          -    Covered              
            bin <instr[LBU],zero,offset[1]>                 3          1          -    Covered              
            bin <instr[LB],zero,offset[1]>                  3          1          -    Covered              
            bin <instr[LBU],zero,offset[0]>                 5          1          -    Covered              
            bin <instr[LB],zero,offset[0]>                  7          1          -    Covered              
            bin <instr[LBU],positive,offset[1]>           435          1          -    Covered              
            bin <instr[LB],positive,offset[1]>            294          1          -    Covered              
            bin <instr[LBU],positive,offset[0]>          1391          1          -    Covered              
            bin <instr[LB],positive,offset[0]>            780          1          -    Covered              
 TYPE /riscv_opcode_test_pkg/riscv_coverage_c/uvm_cg 
                                                      100.00%        100          -    Covered              
    covered/total bins:                                   194        194          -                      
    missing/total bins:                                     0        194          -                      
    % Hit:                                            100.00%        100          -                      
    Coverpoint opcode                                 100.00%        100          -    Covered              
        covered/total bins:                                37         37          -                      
        missing/total bins:                                 0         37          -                      
        % Hit:                                        100.00%        100          -                      
        bin instr[ADDI]                                   512          1          -    Covered              
        bin instr[STLI]                                   491          1          -    Covered              
        bin instr[STLUI]                                  528          1          -    Covered              
        bin instr[ANDI]                                   545          1          -    Covered              
        bin instr[ORI]                                    569          1          -    Covered              
        bin instr[XORI]                                   519          1          -    Covered              
        bin instr[SLLI]                                   528          1          -    Covered              
        bin instr[SRLI]                                   531          1          -    Covered              
        bin instr[SRAI]                                   520          1          -    Covered              
        bin instr[LUI]                                    531          1          -    Covered              
        bin instr[AUIPC]                                  546          1          -    Covered              
        bin instr[ADD]                                    577          1          -    Covered              
        bin instr[SUB]                                    569          1          -    Covered              
        bin instr[STL]                                   1020          1          -    Covered              
        bin instr[STLU]                                   490          1          -    Covered              
        bin instr[AND]                                    517          1          -    Covered              
        bin instr[OR]                                     525          1          -    Covered              
        bin instr[XOR]                                    549          1          -    Covered              
        bin instr[SLL]                                    551          1          -    Covered              
        bin instr[SRL]                                    518          1          -    Covered              
        bin instr[SRA]                                    533          1          -    Covered              
        bin instr[JAL]                                    516          1          -    Covered              
        bin instr[JALR]                                   542          1          -    Covered              
        bin instr[BEQ]                                    547          1          -    Covered              
        bin instr[BNE]                                    538          1          -    Covered              
        bin instr[BLT]                                    540          1          -    Covered              
        bin instr[BLTU]                                   490          1          -    Covered              
        bin instr[BGE]                                    488          1          -    Covered              
        bin instr[BGEU]                                   562          1          -    Covered              
        bin instr[LW]                                     571          1          -    Covered              
        bin instr[LH]                                     529          1          -    Covered              
        bin instr[LB]                                     472          1          -    Covered              
        bin instr[LHU]                                    506          1          -    Covered              
        bin instr[LBU]                                    540          1          -    Covered              
        bin instr[SW]                                     505          1          -    Covered              
        bin instr[SH]                                     475          1          -    Covered              
        bin instr[SB]                                     509          1          -    Covered              
    Coverpoint cp_opt_r                               100.00%        100          -    Covered              
        covered/total bins:                                 1          1          -                      
        missing/total bins:                                 0          1          -                      
        % Hit:                                        100.00%        100          -                      
        bin opt_r[R_TYPE]                                5849          1          -    Covered              
    Coverpoint cp_opt_is                              100.00%        100          -    Covered              
        covered/total bins:                                 2          2          -                      
        missing/total bins:                                 0          2          -                      
        % Hit:                                        100.00%        100          -                      
        bin opt_is[I_TYPE]                               6324          1          -    Covered              
        bin opt_is[SI_TYPE]                              1579          1          -    Covered              
    Coverpoint cp_opt_bs                              100.00%        100          -    Covered              
        covered/total bins:                                 2          2          -                      
        missing/total bins:                                 0          2          -                      
        % Hit:                                        100.00%        100          -                      
        bin opt_bs[S_TYPE]                               1489          1          -    Covered              
        bin opt_bs[B_TYPE]                               3165          1          -    Covered              
    Coverpoint cp_opt_uj                              100.00%        100          -    Covered              
        covered/total bins:                                 2          2          -                      
        missing/total bins:                                 0          2          -                      
        % Hit:                                        100.00%        100          -                      
        bin opt_uj[U_TYPE]                               1077          1          -    Covered              
        bin opt_uj[J_TYPE]                                516          1          -    Covered              
    Coverpoint cp_rd                                  100.00%        100          -    Covered              
        covered/total bins:                                 4          4          -                      
        missing/total bins:                                 0          4          -                      
        % Hit:                                        100.00%        100          -                      
        bin n[0]                                         8101          1          -    Covered              
        bin n[1]                                         3974          1          -    Covered              
        bin n[2]                                         3965          1          -    Covered              
        bin n[3]                                         3959          1          -    Covered              
    Coverpoint cp_rs1                                 100.00%        100          -    Covered              
        covered/total bins:                                 4          4          -                      
        missing/total bins:                                 0          4          -                      
        % Hit:                                        100.00%        100          -                      
        bin b[0]                                         6154          1          -    Covered              
        bin b[1]                                         4559          1          -    Covered              
        bin b[2]                                         4596          1          -    Covered              
        bin b[3]                                         4690          1          -    Covered              
    Coverpoint cp_rs2                                 100.00%        100          -    Covered              
        covered/total bins:                                 4          4          -                      
        missing/total bins:                                 0          4          -                      
        % Hit:                                        100.00%        100          -                      
        bin b[0]                                        12123          1          -    Covered              
        bin b[1]                                         2607          1          -    Covered              
        bin b[2]                                         2639          1          -    Covered              
        bin b[3]                                         2630          1          -    Covered              
    Coverpoint result                                 100.00%        100          -    Covered              
        covered/total bins:                                 2          2          -                      
        missing/total bins:                                 0          2          -                      
        % Hit:                                        100.00%        100          -                      
        bin n[0]                                         4822          1          -    Covered              
        bin n[1]                                        15177          1          -    Covered              
    Cross #cross__0#                                  100.00%        100          -    Covered              
        covered/total bins:                                64         64          -                      
        missing/total bins:                                 0         64          -                      
        % Hit:                                        100.00%        100          -                      
        Auto, Default and User Defined Bins:
            bin <opt_r[R_TYPE],n[3],b[3],b[3]>            102          1          -    Covered              
            bin <opt_r[R_TYPE],n[2],b[3],b[3]>             79          1          -    Covered              
            bin <opt_r[R_TYPE],n[1],b[3],b[3]>            112          1          -    Covered              
            bin <opt_r[R_TYPE],n[0],b[3],b[3]>             75          1          -    Covered              
            bin <opt_r[R_TYPE],n[3],b[2],b[3]>             89          1          -    Covered              
            bin <opt_r[R_TYPE],n[2],b[2],b[3]>            100          1          -    Covered              
            bin <opt_r[R_TYPE],n[1],b[2],b[3]>            114          1          -    Covered              
            bin <opt_r[R_TYPE],n[0],b[2],b[3]>             86          1          -    Covered              
            bin <opt_r[R_TYPE],n[3],b[1],b[3]>            113          1          -    Covered              
            bin <opt_r[R_TYPE],n[2],b[1],b[3]>             80          1          -    Covered              
            bin <opt_r[R_TYPE],n[1],b[1],b[3]>             91          1          -    Covered              
            bin <opt_r[R_TYPE],n[0],b[1],b[3]>             74          1          -    Covered              
            bin <opt_r[R_TYPE],n[3],b[0],b[3]>             91          1          -    Covered              
            bin <opt_r[R_TYPE],n[2],b[0],b[3]>             81          1          -    Covered              
            bin <opt_r[R_TYPE],n[1],b[0],b[3]>            120          1          -    Covered              
            bin <opt_r[R_TYPE],n[0],b[0],b[3]>             90          1          -    Covered              
            bin <opt_r[R_TYPE],n[3],b[3],b[2]>             81          1          -    Covered              
            bin <opt_r[R_TYPE],n[2],b[3],b[2]>            103          1          -    Covered              
            bin <opt_r[R_TYPE],n[1],b[3],b[2]>             94          1          -    Covered              
            bin <opt_r[R_TYPE],n[0],b[3],b[2]>             76          1          -    Covered              
            bin <opt_r[R_TYPE],n[3],b[2],b[2]>             83          1          -    Covered              
            bin <opt_r[R_TYPE],n[2],b[2],b[2]>             84          1          -    Covered              
            bin <opt_r[R_TYPE],n[1],b[2],b[2]>             85          1          -    Covered              
            bin <opt_r[R_TYPE],n[0],b[2],b[2]>             94          1          -    Covered              
            bin <opt_r[R_TYPE],n[3],b[1],b[2]>            101          1          -    Covered              
            bin <opt_r[R_TYPE],n[2],b[1],b[2]>             92          1          -    Covered              
            bin <opt_r[R_TYPE],n[1],b[1],b[2]>             86          1          -    Covered              
            bin <opt_r[R_TYPE],n[0],b[1],b[2]>             87          1          -    Covered              
            bin <opt_r[R_TYPE],n[3],b[0],b[2]>            105          1          -    Covered              
            bin <opt_r[R_TYPE],n[2],b[0],b[2]>             94          1          -    Covered              
            bin <opt_r[R_TYPE],n[1],b[0],b[2]>             80          1          -    Covered              
            bin <opt_r[R_TYPE],n[0],b[0],b[2]>             78          1          -    Covered              
            bin <opt_r[R_TYPE],n[3],b[3],b[1]>            103          1          -    Covered              
            bin <opt_r[R_TYPE],n[2],b[3],b[1]>             97          1          -    Covered              
            bin <opt_r[R_TYPE],n[1],b[3],b[1]>            109          1          -    Covered              
            bin <opt_r[R_TYPE],n[0],b[3],b[1]>             79          1          -    Covered              
            bin <opt_r[R_TYPE],n[3],b[2],b[1]>             80          1          -    Covered              
            bin <opt_r[R_TYPE],n[2],b[2],b[1]>            102          1          -    Covered              
            bin <opt_r[R_TYPE],n[1],b[2],b[1]>             85          1          -    Covered              
            bin <opt_r[R_TYPE],n[0],b[2],b[1]>             84          1          -    Covered              
            bin <opt_r[R_TYPE],n[3],b[1],b[1]>            105          1          -    Covered              
            bin <opt_r[R_TYPE],n[2],b[1],b[1]>             87          1          -    Covered              
            bin <opt_r[R_TYPE],n[1],b[1],b[1]>            107          1          -    Covered              
            bin <opt_r[R_TYPE],n[0],b[1],b[1]>             81          1          -    Covered              
            bin <opt_r[R_TYPE],n[3],b[0],b[1]>            100          1          -    Covered              
            bin <opt_r[R_TYPE],n[2],b[0],b[1]>            102          1          -    Covered              
            bin <opt_r[R_TYPE],n[1],b[0],b[1]>             93          1          -    Covered              
            bin <opt_r[R_TYPE],n[0],b[0],b[1]>             74          1          -    Covered              
            bin <opt_r[R_TYPE],n[3],b[3],b[0]>             84          1          -    Covered              
            bin <opt_r[R_TYPE],n[2],b[3],b[0]>             93          1          -    Covered              
            bin <opt_r[R_TYPE],n[1],b[3],b[0]>            102          1          -    Covered              
            bin <opt_r[R_TYPE],n[0],b[3],b[0]>             91          1          -    Covered              
            bin <opt_r[R_TYPE],n[3],b[2],b[0]>             96          1          -    Covered              
            bin <opt_r[R_TYPE],n[2],b[2],b[0]>             99          1          -    Covered              
            bin <opt_r[R_TYPE],n[1],b[2],b[0]>            104          1          -    Covered              
            bin <opt_r[R_TYPE],n[0],b[2],b[0]>             77          1          -    Covered              
            bin <opt_r[R_TYPE],n[3],b[1],b[0]>             98          1          -    Covered              
            bin <opt_r[R_TYPE],n[2],b[1],b[0]>             82          1          -    Covered              
            bin <opt_r[R_TYPE],n[1],b[1],b[0]>             89          1          -    Covered              
            bin <opt_r[R_TYPE],n[0],b[1],b[0]>             89          1          -    Covered              
            bin <opt_r[R_TYPE],n[3],b[0],b[0]>             82          1          -    Covered              
            bin <opt_r[R_TYPE],n[2],b[0],b[0]>             94          1          -    Covered              
            bin <opt_r[R_TYPE],n[1],b[0],b[0]>             80          1          -    Covered              
            bin <opt_r[R_TYPE],n[0],b[0],b[0]>             81          1          -    Covered              
    Cross #cross__1#                                  100.00%        100          -    Covered              
        covered/total bins:                                32         32          -                      
        missing/total bins:                                 0         32          -                      
        % Hit:                                        100.00%        100          -                      
        Auto, Default and User Defined Bins:
            bin <opt_is[SI_TYPE],n[3],b[3]>               108          1          -    Covered              
            bin <opt_is[I_TYPE],n[3],b[3]>                433          1          -    Covered              
            bin <opt_is[SI_TYPE],n[2],b[3]>               103          1          -    Covered              
            bin <opt_is[I_TYPE],n[2],b[3]>                393          1          -    Covered              
            bin <opt_is[SI_TYPE],n[1],b[3]>               117          1          -    Covered              
            bin <opt_is[I_TYPE],n[1],b[3]>                414          1          -    Covered              
            bin <opt_is[SI_TYPE],n[0],b[3]>                80          1          -    Covered              
            bin <opt_is[I_TYPE],n[0],b[3]>                345          1          -    Covered              
            bin <opt_is[SI_TYPE],n[3],b[2]>                96          1          -    Covered              
            bin <opt_is[I_TYPE],n[3],b[2]>                394          1          -    Covered              
            bin <opt_is[SI_TYPE],n[2],b[2]>               101          1          -    Covered              
            bin <opt_is[I_TYPE],n[2],b[2]>                410          1          -    Covered              
            bin <opt_is[SI_TYPE],n[1],b[2]>                96          1          -    Covered              
            bin <opt_is[I_TYPE],n[1],b[2]>                388          1          -    Covered              
            bin <opt_is[SI_TYPE],n[0],b[2]>                95          1          -    Covered              
            bin <opt_is[I_TYPE],n[0],b[2]>                376          1          -    Covered              
            bin <opt_is[SI_TYPE],n[3],b[1]>                87          1          -    Covered              
            bin <opt_is[I_TYPE],n[3],b[1]>                424          1          -    Covered              
            bin <opt_is[SI_TYPE],n[2],b[1]>                96          1          -    Covered              
            bin <opt_is[I_TYPE],n[2],b[1]>                432          1          -    Covered              
            bin <opt_is[SI_TYPE],n[1],b[1]>               106          1          -    Covered              
            bin <opt_is[I_TYPE],n[1],b[1]>                377          1          -    Covered              
            bin <opt_is[SI_TYPE],n[0],b[1]>                91          1          -    Covered              
            bin <opt_is[I_TYPE],n[0],b[1]>                387          1          -    Covered              
            bin <opt_is[SI_TYPE],n[3],b[0]>                83          1          -    Covered              
            bin <opt_is[I_TYPE],n[3],b[0]>                403          1          -    Covered              
            bin <opt_is[SI_TYPE],n[2],b[0]>               115          1          -    Covered              
            bin <opt_is[I_TYPE],n[2],b[0]>                405          1          -    Covered              
            bin <opt_is[SI_TYPE],n[1],b[0]>               113          1          -    Covered              
            bin <opt_is[I_TYPE],n[1],b[0]>                404          1          -    Covered              
            bin <opt_is[SI_TYPE],n[0],b[0]>                92          1          -    Covered              
            bin <opt_is[I_TYPE],n[0],b[0]>                339          1          -    Covered              
    Cross #cross__2#                                  100.00%        100          -    Covered              
        covered/total bins:                                32         32          -                      
        missing/total bins:                                 0         32          -                      
        % Hit:                                        100.00%        100          -                      
        Auto, Default and User Defined Bins:
            bin <opt_bs[B_TYPE],b[3],b[3]>                179          1          -    Covered              
            bin <opt_bs[S_TYPE],b[3],b[3]>                 96          1          -    Covered              
            bin <opt_bs[B_TYPE],b[2],b[3]>                204          1          -    Covered              
            bin <opt_bs[S_TYPE],b[2],b[3]>                 96          1          -    Covered              
            bin <opt_bs[B_TYPE],b[1],b[3]>                173          1          -    Covered              
            bin <opt_bs[S_TYPE],b[1],b[3]>                 96          1          -    Covered              
            bin <opt_bs[B_TYPE],b[0],b[3]>                196          1          -    Covered              
            bin <opt_bs[S_TYPE],b[0],b[3]>                 93          1          -    Covered              
            bin <opt_bs[B_TYPE],b[3],b[2]>                223          1          -    Covered              
            bin <opt_bs[S_TYPE],b[3],b[2]>                100          1          -    Covered              
            bin <opt_bs[B_TYPE],b[2],b[2]>                219          1          -    Covered              
            bin <opt_bs[S_TYPE],b[2],b[2]>                 85          1          -    Covered              
            bin <opt_bs[B_TYPE],b[1],b[2]>                173          1          -    Covered              
            bin <opt_bs[S_TYPE],b[1],b[2]>                107          1          -    Covered              
            bin <opt_bs[B_TYPE],b[0],b[2]>                210          1          -    Covered              
            bin <opt_bs[S_TYPE],b[0],b[2]>                 99          1          -    Covered              
            bin <opt_bs[B_TYPE],b[3],b[1]>                208          1          -    Covered              
            bin <opt_bs[S_TYPE],b[3],b[1]>                 96          1          -    Covered              
            bin <opt_bs[B_TYPE],b[2],b[1]>                196          1          -    Covered              
            bin <opt_bs[S_TYPE],b[2],b[1]>                 83          1          -    Covered              
            bin <opt_bs[B_TYPE],b[1],b[1]>                174          1          -    Covered              
            bin <opt_bs[S_TYPE],b[1],b[1]>                 92          1          -    Covered              
            bin <opt_bs[B_TYPE],b[0],b[1]>                193          1          -    Covered              
            bin <opt_bs[S_TYPE],b[0],b[1]>                 77          1          -    Covered              
            bin <opt_bs[B_TYPE],b[3],b[0]>                226          1          -    Covered              
            bin <opt_bs[S_TYPE],b[3],b[0]>                 89          1          -    Covered              
            bin <opt_bs[B_TYPE],b[2],b[0]>                207          1          -    Covered              
            bin <opt_bs[S_TYPE],b[2],b[0]>                 88          1          -    Covered              
            bin <opt_bs[B_TYPE],b[1],b[0]>                201          1          -    Covered              
            bin <opt_bs[S_TYPE],b[1],b[0]>                 81          1          -    Covered              
            bin <opt_bs[B_TYPE],b[0],b[0]>                183          1          -    Covered              
            bin <opt_bs[S_TYPE],b[0],b[0]>                111          1          -    Covered              
    Cross #cross__3#                                  100.00%        100          -    Covered              
        covered/total bins:                                 8          8          -                      
        missing/total bins:                                 0          8          -                      
        % Hit:                                        100.00%        100          -                      
        Auto, Default and User Defined Bins:
            bin <opt_uj[J_TYPE],n[3]>                     132          1          -    Covered              
            bin <opt_uj[U_TYPE],n[3]>                     286          1          -    Covered              
            bin <opt_uj[J_TYPE],n[2]>                     138          1          -    Covered              
            bin <opt_uj[U_TYPE],n[2]>                     303          1          -    Covered              
            bin <opt_uj[J_TYPE],n[1]>                     133          1          -    Covered              
            bin <opt_uj[U_TYPE],n[1]>                     275          1          -    Covered              
            bin <opt_uj[J_TYPE],n[0]>                     113          1          -    Covered              
            bin <opt_uj[U_TYPE],n[0]>                     213          1          -    Covered              

TOTAL COVERGROUP COVERAGE: 98.49%  COVERGROUP TYPES: 11

Total Coverage By File (code coverage only, filtered view): 83.11%

